"use strict";(self.webpackChunkowncast_web=self.webpackChunkowncast_web||[]).push([[3717],{"./.storybook/stories-category-doc-pages/examples/BasicInfrastructureExamples.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var _tmp_tmp_37hm9giie5_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/mdx-mermaid/lib/Mermaid.mjs"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p"},(0,_tmp_tmp_37hm9giie5_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"owncast/Documentation/Infrastructure Examples/Basic Example",parameters:{previewTabs:{canvas:{hidden:!0}},chromatic:{disableSnapshot:!0}}}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.h2,{id:"basic",children:"Basic"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.p,{children:"This is the most basic Owncast setup and is what you get when you run it without any additional services."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__.K,{chart:"graph TD\n    Owncast{fa:fa-server Owncast}\n\n    A[fa:fa-window-maximize Web App] --Video--\x3eOwncast\n    A[fa:fa-window-maximize Web App] --Web--\x3eOwncast\n    A[fa:fa-window-maximize Web App] <--Chat--\x3eOwncast\n    B[fa:fa-tv Smart TV] --Video--\x3e Owncast\n    I[fa:fa-window-restore Chat Embeds] --Web--\x3eOwncast\n    I[fa:fa-window-restore Chat Embeds] <--Chat--\x3eOwncast\n    Owncast --Video--\x3eF[fa:fa-shapes VLC]\n    Owncast --Video--\x3eG[fa:fa-window-restore Video Embeds]\n    Owncast --Web--\x3eG[fa:fa-window-restore Video Embeds]\n    Owncast --Video--\x3eH[fa:fa-mobile-screen Mobile Apps]\n\n"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.h2,{id:"s3-object-storage",children:"S3 Object Storage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.p,{children:"If you would like no video traffic to take place from your Owncast server to your clients, you can use S3 Object Storage to be responsible for this instead.\nInstead of video players pulling the stream from your Owncast server it would instead make these requests to a S3 provider, and Owncast would upload video to this provider to make it available."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__.K,{chart:"graph TD\n\t  \tsubgraph Chat & Web Assets\n    Owncast{fa:fa-server Owncast}\n    end\n\t \t\n    Owncast--Upload\\nVideo--\x3eS3\n\n    subgraph Video Assets\n    S3[fa:fa-hard-drive S3 Object Storage]\n    end\n\n    subgraph Clients\n    WebPlayer[fa:fa-window-maximize Web App]\n    Embeds[fa:fa-window-restore Embeds]\n    MobileApps[fa:fa-mobile-screen Mobile Apps]\n    SmartTV[fa:fa-tv Smart TV]\n    VLC[fa:fa-shapes VLC]\n    end\n\n    Owncast--Web--\x3eWebPlayer\n    Owncast--Web--\x3eEmbeds\n    Owncast<--Chat--\x3eWebPlayer\n    S3--Download\\nVideo--\x3eWebPlayer\n    S3--Download\\nVideo--\x3eEmbeds\n    S3--Download\\nVideo--\x3eMobileApps\n    S3--Download\\nVideo--\x3eSmartTV\n    S3--Download\\nVideo--\x3eVLC\n\n"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.h2,{id:"cdn-in-front-of-s3-object-storage",children:"CDN in front of S3 Object Storage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.p,{children:"If you're using a S3 provider but would like to increase the speed of your video delivery to your clients around the world, you can use a CDN in front of your S3 provider.\nThis leads to not only your server not serving any video traffic, but the video traffic would be distributed globally so each client player would be pulling video from somewhere geographically closer, reducing the likelihood of buffering and slower network requests."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__.K,{chart:"flowchart TD\n    subgraph Video Assets\n        S3[fa:fa-hard-drive S3 Object Storage]\n        CDN[fa:fa-cloud Global CDN]\n    end\n\n    subgraph Clients\n        WebPlayer[fa:fa-window-maximize Web App]\n        Embeds[fa:fa-window-restore Embeds]\n        MobileApps[fa:fa-mobile-screen Mobile Apps]\n        SmartTV[fa:fa-tv Smart TV]\n        VLC[fa:fa-shapes VLC]\n    end\n\n    subgraph Web Assets & Chat Service\n        direction TB\n        Owncast{fa:fa-server Owncast}\n    end\n\n    Owncast--Upload\\nVideo--\x3eS3\n    Owncast--Web--\x3eWebPlayer\n    Owncast<--Chat--\x3eWebPlayer\n    Owncast--Web--\x3eEmbeds\n\n    CDN--Download\\nVideo--\x3eWebPlayer\n    CDN--Download\\nVideo--\x3eEmbeds\n    CDN--Download\\nVideo--\x3eMobileApps\n    CDN--Download\\nVideo--\x3eSmartTV\n    CDN--Download\\nVideo--\x3eVLC\n\n    S3 --- CDN\n\n"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.h2,{id:"cdn-in-front-of-owncast",children:"CDN in front of Owncast"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.p,{children:"If you're ok with some video requests coming directly to your Owncast server, and want to generally increase the overall speed that your viewers globally access all your Owncast assets, including video and the web interface, you can put a CDN in front of your entire Owncast server."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__.K,{chart:"flowchart TD\n    CDN{{fa:fa-cloud Global CDN}}\n    Owncast{fa:fa-server Owncast}\n\n    subgraph Clients\n        WebPlayer[fa:fa-window-maximize Web App]\n        Embeds[fa:fa-window-restore Embeds]\n        MobileApps[fa:fa-mobile-screen Mobile Apps]\n        SmartTV[fa:fa-tv Smart TV]\n        VLC[fa:fa-shapes VLC]\n    end\n\n    CDN--Web--\x3eWebPlayer\n    Owncast<--Chat--\x3eWebPlayer\n    CDN--Web--\x3eEmbeds\n\n    CDN--Download\\nVideo--\x3eWebPlayer\n    CDN--Download\\nVideo--\x3eEmbeds\n    CDN--Download\\nVideo--\x3eMobileApps\n    CDN--Download\\nVideo--\x3eSmartTV\n    CDN--Download\\nVideo--\x3eVLC\n\n    CDN --- Owncast\n\n"})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"owncast/Documentation/Infrastructure Examples/Basic Example",parameters:{previewTabs:{canvas:{hidden:!0}},chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_tmp_tmp_37hm9giie5_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const __WEBPACK_DEFAULT_EXPORT__=componentMeta,__namedExportsOrder=["__page"]}}]);