{"version":3,"file":"static/chunks/228.76ed344e6951386e.js","mappings":"yIAAA,IAAAA,EACAC,EAEoB,m4BADpBC,EAAA,6CAEA,SAAAC,EAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAF,EAAAE,GAAA,GAAAC,EAAAH,EAAAI,IAAA,GAEA,GADAR,EAAA,KACAM,GACA,GAAAC,KAAAA,EACA,OAAAF,EAAAI,QAAA,CAAAC,CAAA,EAAAN,EAAAC,EAMA,CALA,GAAAE,MAAAA,SACA,EAAAI,GAAA,SAAAC,IAAA,CAAAR,EAAAS,IAAA,IACAT,CAAAA,EAAAU,SAAA,aAAAF,IAAA,CAAAR,EAAAW,OAAA,KAAAV,EAAAI,QAAA,CAAAO,CAAA,EAAAZ,GAAAC,EAAAI,QAAA,CAAAN,CAAA,aAEAE,EAAAI,QAAA,CAAAN,EAAA,WACA,GACA,KAAAS,IAAA,CAAAL,GACA,MAAAH,KAAAA,EAAAS,IAAA,GAAAT,CAAAA,EAAAU,SAAA,qBACA,GAAAP,KAAAA,EACA,OAAAF,EAAAI,QAAA,CAAAQ,CAAA,EAAAb,EAAAC,EAAA,CACA,GAAAE,KAAAA,EACA,OAAAH,EAAAc,QAAA,gCACA,QAAAX,GAAA,KAAAK,IAAA,CAAAR,EAAAS,IAAA,UAAAD,IAAA,CAAAL,GAAA,CACA,IAAAY,EAAA,KAaA,OAZAf,EAAAgB,MAAA,IACAhB,EAAAiB,KAAA,2EACAjB,EAAAiB,KAAA,gDACAjB,EAAAiB,KAAA,uCACAjB,EAAAiB,KAAA,kBACAF,EAAA,WACAf,CAAAA,EAAAiB,KAAA,gBACAjB,EAAAiB,KAAA,oBACAjB,EAAAiB,KAAA,kBACAjB,EAAAiB,KAAA,oBACAjB,EAAAiB,KAAA,uCACAF,CAAAA,EAAA,UACA,KAAAZ,CAAAA,EAAAH,EAAAS,IAAA,KAAAX,EAAAU,IAAA,CAAAL,EAAA,EAAAY,EAAAf,CAAAA,EAAAI,IAAA,YACA,MACA,cAAAI,IAAA,CAAAL,GACAH,CAAAA,EAAAc,QAAA,iBAAAjB,EAAAW,IAAA,CAAAR,EAAAW,OAAA,0BACA,iCAAyBH,IAAA,CAAAL,IAEzB,eAASK,IAAA,CAAAL,GADT,KAGA,OALA,CAOA,SAAAG,EAAAN,CAAA,CAAAC,CAAA,EACA,OAAAD,EAAAU,SAAA,YAAAF,IAAA,CAAAR,EAAAW,OAAA,KAAAV,EAAAI,QAAA,CAAAa,CAAA,EAAAlB,EAAAC,GAAAA,EAAAI,QAAA,CAAAN,CAAA,WAEA,SAAAmB,EAAAlB,CAAA,CAAAC,CAAA,EACA,IAAAkB,EAAAnB,EAAAE,GAAA,IAAAF,MAAAA,EAAAS,IAAA,GAIA,OAHAT,EAAAU,SAAA,GACAS,GAAA,UAAAX,IAAA,CAAAR,EAAAW,OAAA,KACAV,CAAAA,EAAAI,QAAA,CAAAN,CAAA,EACA,SACA,CACA,SAAAa,EAAAZ,CAAA,EAAmC,OAAAA,EAAAU,SAAA,aACnC,SAAAG,EAAAb,CAAA,CAAAC,CAAA,EAEA,IADA,IAAAG,EAAAgB,EAAA,GAAAC,EAAA,GACAjB,EAAAJ,EAAAI,IAAA,KACA,GAAAA,KAAAA,GAAA,CAAAgB,EAAA,CAA6BC,EAAA,GAAS,QACtC,CAAAD,GAAAhB,MAAAA,CACA,CAEA,OADAiB,GAAApB,CAAAA,EAAAI,QAAA,CAAAN,CAAA,EACA,QACA,CACA,SAAAuB,EAAArB,CAAA,CAAAsB,CAAA,CAAAC,CAAA,EAAqCvB,EAAAwB,OAAA,EAAeC,KAAAzB,EAAAwB,OAAA,CAAAE,OAAA1B,EAAA0B,MAAA,CAAAH,IAAAA,EAAAD,KAAAA,CAAA,EACpD,SAAAK,EAAA3B,CAAA,EAA2BA,EAAA0B,MAAA,CAAA1B,EAAAwB,OAAA,CAAAE,MAAA,CAAkC1B,EAAAwB,OAAA,CAAAxB,EAAAwB,OAAA,CAAAC,IAAA,CACtD,IAAAG,EAAA,CACPC,KAAA,IACAC,WAAA,WACA,OAAW1B,SAAAN,EACX0B,QAAA,KACAE,OAAA,EACAH,IAAA,EACA,EACAQ,MAAA,SAAAhC,CAAA,CAAAC,CAAA,EACAD,EAAAE,GAAA,KACAD,EAAAwB,OAAA,EAAAxB,IAAA,EAAAA,EAAAwB,OAAA,CAAAQ,KAAA,EACAhC,CAAAA,EAAAwB,OAAA,CAAAQ,KAAA,KACAhC,EAAA0B,MAAA,CAAA3B,EAAAkC,WAAA,IAGA,IAAAC,EAAAlC,EAAAI,QAAA,CAAAL,EAAAC,GAIA,GAHA,WAAAkC,GAAAlC,EAAAwB,OAAA,EAAAxB,IAAA,EAAAA,EAAAwB,OAAA,CAAAQ,KAAA,EAAAhC,WAAAA,EAAAwB,OAAA,CAAAF,IAAA,EACAtB,CAAAA,EAAAwB,OAAA,CAAAQ,KAAA,KAEArC,KAAAA,EAAA0B,EAAArB,EAAA,IAAAD,EAAAoC,MAAA,SACA,GAAAxC,KAAAA,EAAA0B,EAAArB,EAAA,IAAAD,EAAAoC,MAAA,SACA,GAAAxC,KAAAA,EAAuB0B,EAAArB,EAAA,IAAsBD,EAAAoC,MAAA,SAC7C,cAAkB5B,IAAA,CAAAZ,GAAA,CAClB,KAAAK,EAAAwB,OAAA,EAAAxB,WAAAA,EAAAwB,OAAA,CAAAF,IAAA,EAAAK,EAAA3B,EACAA,CAAAA,EAAAwB,OAAA,EAAA7B,GAAAK,EAAAwB,OAAA,CAAAF,IAAA,EAAAK,EAAA3B,EACA,KACAL,KAAAA,GAAAK,EAAAwB,OAAA,EAAAxB,WAAAA,EAAAwB,OAAA,CAAAF,IAAA,CAAAK,EAAA3B,GACA,uBAAAO,IAAA,CAAA2B,IAAAlC,EAAAwB,OAAA,GACA,SAAajB,IAAA,CAAAP,EAAAwB,OAAA,CAAAF,IAAA,EACbD,EAAArB,EAAA,UAAAD,EAAAoC,MAAA,IACA,WAAAnC,EAAAwB,OAAA,CAAAF,IAAA,EAAAtB,EAAAwB,OAAA,CAAAQ,KAAA,GACAhC,EAAAwB,OAAA,CAAAQ,KAAA,IACAhC,EAAAwB,OAAA,CAAAD,GAAA,CAAAxB,EAAAoC,MAAA,IAEA,CACA,OAAAD,CACA,EACAR,OAAA,SAAA1B,CAAA,CAAAoC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAF,GAAAA,EAAAG,MAAA,IACAf,EAAAxB,EAAAwB,OAAA,CACA,YAAajB,IAAA,CAAA+B,GACb,KAAAd,GAAAA,WAAAA,EAAAF,IAAA,EAAAE,EAAAA,EAAAC,IAAA,CACA,IAAAe,EAAAhB,GAAAc,GAAAd,EAAAF,IAAA,QACA,EAEAE,WAAAA,EAAAF,IAAA,CACAE,EAAAD,GAAA,CACAC,EAAAQ,KAAA,CACAR,EAAAD,GAAA,CAAAiB,CAAAA,EAAA,KAEAhB,EAAAE,MAAA,CAAAc,CAAAA,EAAA,EAAAH,EAAAI,IAAA,EANA,CAMA,CAEA","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/q.js","webpack://_N_E/<anon>"],"sourcesContent":["var curPunc,\n    keywords=buildRE([\"abs\",\"acos\",\"aj\",\"aj0\",\"all\",\"and\",\"any\",\"asc\",\"asin\",\"asof\",\"atan\",\"attr\",\"avg\",\"avgs\",\"bin\",\"by\",\"ceiling\",\"cols\",\"cor\",\"cos\",\"count\",\"cov\",\"cross\",\"csv\",\"cut\",\"delete\",\"deltas\",\"desc\",\"dev\",\"differ\",\"distinct\",\"div\",\"do\",\"each\",\"ej\",\"enlist\",\"eval\",\"except\",\"exec\",\"exit\",\"exp\",\"fby\",\"fills\",\"first\",\"fkeys\",\"flip\",\"floor\",\"from\",\"get\",\"getenv\",\"group\",\"gtime\",\"hclose\",\"hcount\",\"hdel\",\"hopen\",\"hsym\",\"iasc\",\"idesc\",\"if\",\"ij\",\"in\",\"insert\",\"inter\",\"inv\",\"key\",\"keys\",\"last\",\"like\",\"list\",\"lj\",\"load\",\"log\",\"lower\",\"lsq\",\"ltime\",\"ltrim\",\"mavg\",\"max\",\"maxs\",\"mcount\",\"md5\",\"mdev\",\"med\",\"meta\",\"min\",\"mins\",\"mmax\",\"mmin\",\"mmu\",\"mod\",\"msum\",\"neg\",\"next\",\"not\",\"null\",\"or\",\"over\",\"parse\",\"peach\",\"pj\",\"plist\",\"prd\",\"prds\",\"prev\",\"prior\",\"rand\",\"rank\",\"ratios\",\"raze\",\"read0\",\"read1\",\"reciprocal\",\"reverse\",\"rload\",\"rotate\",\"rsave\",\"rtrim\",\"save\",\"scan\",\"select\",\"set\",\"setenv\",\"show\",\"signum\",\"sin\",\"sqrt\",\"ss\",\"ssr\",\"string\",\"sublist\",\"sum\",\"sums\",\"sv\",\"system\",\"tables\",\"tan\",\"til\",\"trim\",\"txf\",\"type\",\"uj\",\"ungroup\",\"union\",\"update\",\"upper\",\"upsert\",\"value\",\"var\",\"view\",\"views\",\"vs\",\"wavg\",\"where\",\"where\",\"while\",\"within\",\"wj\",\"wj1\",\"wsum\",\"xasc\",\"xbar\",\"xcol\",\"xcols\",\"xdesc\",\"xexp\",\"xgroup\",\"xkey\",\"xlog\",\"xprev\",\"xrank\"]),\n    E=/[|/&^!+:\\\\\\-*%$=~#;@><,?_\\'\\\"\\[\\(\\]\\)\\s{}]/;\nfunction buildRE(w){return new RegExp(\"^(\"+w.join(\"|\")+\")$\");}\nfunction tokenBase(stream,state){\n  var sol=stream.sol(),c=stream.next();\n  curPunc=null;\n  if(sol)\n    if(c==\"/\")\n      return(state.tokenize=tokenLineComment)(stream,state);\n  else if(c==\"\\\\\"){\n    if(stream.eol()||/\\s/.test(stream.peek()))\n      return stream.skipToEnd(),/^\\\\\\s*$/.test(stream.current())?(state.tokenize=tokenCommentToEOF)(stream):state.tokenize=tokenBase,\"comment\";\n    else\n      return state.tokenize=tokenBase,\"builtin\";\n  }\n  if(/\\s/.test(c))\n    return stream.peek()==\"/\"?(stream.skipToEnd(),\"comment\"):\"null\";\n  if(c=='\"')\n    return(state.tokenize=tokenString)(stream,state);\n  if(c=='`')\n    return stream.eatWhile(/[A-Za-z\\d_:\\/.]/),\"macroName\";\n  if((\".\"==c&&/\\d/.test(stream.peek()))||/\\d/.test(c)){\n    var t=null;\n    stream.backUp(1);\n    if(stream.match(/^\\d{4}\\.\\d{2}(m|\\.\\d{2}([DT](\\d{2}(:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?)?)?)?)/)\n       || stream.match(/^\\d+D(\\d{2}(:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?)?)/)\n       || stream.match(/^\\d{2}:\\d{2}(:\\d{2}(\\.\\d{1,9})?)?/)\n       || stream.match(/^\\d+[ptuv]{1}/))\n      t=\"temporal\";\n    else if(stream.match(/^0[NwW]{1}/)\n            || stream.match(/^0x[\\da-fA-F]*/)\n            || stream.match(/^[01]+[b]{1}/)\n            || stream.match(/^\\d+[chijn]{1}/)\n            || stream.match(/-?\\d*(\\.\\d*)?(e[+\\-]?\\d+)?(e|f)?/))\n      t=\"number\";\n    return(t&&(!(c=stream.peek())||E.test(c)))?t:(stream.next(),\"error\");\n  }\n  if(/[A-Za-z]|\\./.test(c))\n    return stream.eatWhile(/[A-Za-z._\\d]/),keywords.test(stream.current())?\"keyword\":\"variable\";\n  if(/[|/&^!+:\\\\\\-*%$=~#;@><\\.,?_\\']/.test(c))\n    return null;\n  if(/[{}\\(\\[\\]\\)]/.test(c))\n    return null;\n  return\"error\";\n}\nfunction tokenLineComment(stream,state){\n  return stream.skipToEnd(),/\\/\\s*$/.test(stream.current())?(state.tokenize=tokenBlockComment)(stream,state):(state.tokenize=tokenBase),\"comment\";\n}\nfunction tokenBlockComment(stream,state){\n  var f=stream.sol()&&stream.peek()==\"\\\\\";\n  stream.skipToEnd();\n  if(f&&/^\\\\\\s*$/.test(stream.current()))\n    state.tokenize=tokenBase;\n  return\"comment\";\n}\nfunction tokenCommentToEOF(stream){return stream.skipToEnd(),\"comment\";}\nfunction tokenString(stream,state){\n  var escaped=false,next,end=false;\n  while((next=stream.next())){\n    if(next==\"\\\"\"&&!escaped){end=true;break;}\n    escaped=!escaped&&next==\"\\\\\";\n  }\n  if(end)state.tokenize=tokenBase;\n  return\"string\";\n}\nfunction pushContext(state,type,col){state.context={prev:state.context,indent:state.indent,col:col,type:type};}\nfunction popContext(state){state.indent=state.context.indent;state.context=state.context.prev;}\nexport const q = {\n  name: \"q\",\n  startState:function(){\n    return{tokenize:tokenBase,\n           context:null,\n           indent:0,\n           col:0};\n  },\n  token:function(stream,state){\n    if(stream.sol()){\n      if(state.context&&state.context.align==null)\n        state.context.align=false;\n      state.indent=stream.indentation();\n    }\n    //if (stream.eatSpace()) return null;\n    var style=state.tokenize(stream,state);\n    if(style!=\"comment\"&&state.context&&state.context.align==null&&state.context.type!=\"pattern\"){\n      state.context.align=true;\n    }\n    if(curPunc==\"(\")pushContext(state,\")\",stream.column());\n    else if(curPunc==\"[\")pushContext(state,\"]\",stream.column());\n    else if(curPunc==\"{\")pushContext(state,\"}\",stream.column());\n    else if(/[\\]\\}\\)]/.test(curPunc)){\n      while(state.context&&state.context.type==\"pattern\")popContext(state);\n      if(state.context&&curPunc==state.context.type)popContext(state);\n    }\n    else if(curPunc==\".\"&&state.context&&state.context.type==\"pattern\")popContext(state);\n    else if(/atom|string|variable/.test(style)&&state.context){\n      if(/[\\}\\]]/.test(state.context.type))\n        pushContext(state,\"pattern\",stream.column());\n      else if(state.context.type==\"pattern\"&&!state.context.align){\n        state.context.align=true;\n        state.context.col=stream.column();\n      }\n    }\n    return style;\n  },\n  indent:function(state,textAfter,cx){\n    var firstChar=textAfter&&textAfter.charAt(0);\n    var context=state.context;\n    if(/[\\]\\}]/.test(firstChar))\n      while (context&&context.type==\"pattern\")context=context.prev;\n    var closing=context&&firstChar==context.type;\n    if(!context)\n      return 0;\n    else if(context.type==\"pattern\")\n      return context.col;\n    else if(context.align)\n      return context.col+(closing?0:1);\n    else\n      return context.indent+(closing?0:cx.unit);\n  }\n};\n"],"names":["curPunc","keywords","E","tokenBase","stream","state","sol","c","next","tokenize","tokenLineComment","eol","test","peek","skipToEnd","current","tokenCommentToEOF","tokenString","eatWhile","t","backUp","match","tokenBlockComment","f","escaped","end","pushContext","type","col","context","prev","indent","popContext","q","name","startState","token","align","indentation","style","column","textAfter","cx","firstChar","charAt","closing","unit"],"sourceRoot":""}