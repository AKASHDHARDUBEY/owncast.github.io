{"version":3,"file":"static/chunks/850.235a519dc854a5e8.js","mappings":"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","sources":["webpack://_N_E/./components/common/UserDropdown/UserDropdown.tsx","webpack://_N_E/./components/common/UserDropdown/UserDropdown.module.scss","webpack://_N_E/./node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js","webpack://_N_E/<anon>"],"sourcesContent":["import { Menu, Dropdown, Button } from 'antd';\n\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { FC, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport dynamic from 'next/dynamic';\nimport {\n  chatVisibleToggleAtom,\n  currentUserAtom,\n  appStateAtom,\n} from '../../stores/ClientConfigStore';\nimport styles from './UserDropdown.module.scss';\nimport { AppStateOptions } from '../../stores/application-state';\n\n// Lazy loaded components\n\nconst CaretDownOutlined = dynamic(() => import('@ant-design/icons/CaretDownOutlined'), {\n  ssr: false,\n});\n\nconst EditOutlined = dynamic(() => import('@ant-design/icons/EditOutlined'), {\n  ssr: false,\n});\n\nconst LockOutlined = dynamic(() => import('@ant-design/icons/LockOutlined'), {\n  ssr: false,\n});\n\nconst MessageOutlined = dynamic(() => import('@ant-design/icons/MessageOutlined'), {\n  ssr: false,\n});\n\nconst UserOutlined = dynamic(() => import('@ant-design/icons/UserOutlined'), {\n  ssr: false,\n});\n\nconst Modal = dynamic(() => import('../../ui/Modal/Modal').then(mod => mod.Modal), {\n  ssr: false,\n});\n\nconst NameChangeModal = dynamic(\n  () => import('../../modals/NameChangeModal/NameChangeModal').then(mod => mod.NameChangeModal),\n  {\n    ssr: false,\n  },\n);\n\nconst AuthModal = dynamic(\n  () => import('../../modals/AuthModal/AuthModal').then(mod => mod.AuthModal),\n  {\n    ssr: false,\n  },\n);\n\nexport type UserDropdownProps = {\n  username?: string;\n};\n\nexport const UserDropdown: FC<UserDropdownProps> = ({ username: defaultUsername = undefined }) => {\n  const [showNameChangeModal, setShowNameChangeModal] = useState<boolean>(false);\n  const [showAuthModal, setShowAuthModal] = useState<boolean>(false);\n  const [chatToggleVisible, setChatToggleVisible] = useRecoilState(chatVisibleToggleAtom);\n  const appState = useRecoilValue<AppStateOptions>(appStateAtom);\n\n  const toggleChatVisibility = () => {\n    setChatToggleVisible(!chatToggleVisible);\n  };\n\n  const handleChangeName = () => {\n    setShowNameChangeModal(true);\n  };\n\n  // Register keyboard shortcut for the space bar to toggle playback\n  useHotkeys(\n    'c',\n    toggleChatVisibility,\n    {\n      enableOnContentEditable: false,\n    },\n    [chatToggleVisible],\n  );\n\n  const currentUser = useRecoilValue(currentUserAtom);\n  if (!currentUser) {\n    return null;\n  }\n\n  const { displayName } = currentUser;\n  const username = defaultUsername || displayName;\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\" icon={<EditOutlined />} onClick={() => handleChangeName()}>\n        Change name\n      </Menu.Item>\n      <Menu.Item key=\"1\" icon={<LockOutlined />} onClick={() => setShowAuthModal(true)}>\n        Authenticate\n      </Menu.Item>\n      {appState.chatAvailable && (\n        <Menu.Item\n          key=\"3\"\n          icon={<MessageOutlined />}\n          onClick={() => toggleChatVisibility()}\n          aria-expanded={chatToggleVisible}\n        >\n          {chatToggleVisible ? 'Hide Chat' : 'Show Chat'}\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n\n  return (\n    <div id=\"user-menu\" className={`${styles.root}`}>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <Button type=\"primary\" icon={<UserOutlined className={styles.userIcon} />}>\n          <span className={styles.username}>{username}</span>\n          <CaretDownOutlined />\n        </Button>\n      </Dropdown>\n      <Modal\n        title=\"Change Chat Display Name\"\n        open={showNameChangeModal}\n        handleCancel={() => setShowNameChangeModal(false)}\n      >\n        <NameChangeModal />\n      </Modal>\n      <Modal title=\"Authenticate\" open={showAuthModal} handleCancel={() => setShowAuthModal(false)}>\n        <AuthModal />\n      </Modal>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UserDropdown_root__IdxfQ\",\"ant-space\":\"UserDropdown_ant-space__XJTZ3\",\"ant-space-item\":\"UserDropdown_ant-space-item__w4nC2\",\"userIcon\":\"UserDropdown_userIcon__A5XgE\",\"username\":\"UserDropdown_username__nVyPA\"};","import { useContext, createContext, useState, useCallback, useRef, useLayoutEffect, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod'];\nvar mappedKeys = {\n  esc: 'escape',\n  \"return\": 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '#': 'backslash',\n  '+': 'bracketright',\n  'ShiftLeft': 'shift',\n  'ShiftRight': 'shift',\n  'AltLeft': 'alt',\n  'AltRight': 'alt',\n  'MetaLeft': 'meta',\n  'MetaRight': 'meta',\n  'ControlLeft': 'ctrl',\n  'ControlRight': 'ctrl'\n};\nfunction mapKey(key) {\n  return (mappedKeys[key] || key).trim().toLowerCase().replace('key', '').replace('digit', '').replace('numpad', '').replace('arrow', '');\n}\nfunction isHotkeyModifier(key) {\n  return reservedModifierKeywords.includes(key);\n}\nfunction parseKeysHookInput(keys, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  if (typeof keys === 'string') {\n    return keys.split(splitKey);\n  }\n  return keys;\n}\nfunction parseHotkey(hotkey, combinationKey) {\n  if (combinationKey === void 0) {\n    combinationKey = '+';\n  }\n  var keys = hotkey.toLocaleLowerCase().split(combinationKey).map(function (k) {\n    return mapKey(k);\n  });\n  var modifiers = {\n    alt: keys.includes('alt'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod')\n  };\n  var singleCharKeys = keys.filter(function (k) {\n    return !reservedModifierKeywords.includes(k);\n  });\n  return _extends({}, modifiers, {\n    keys: singleCharKeys\n  });\n}\n\nvar currentlyPressedKeys = /*#__PURE__*/new Set();\nfunction isHotkeyPressed(key, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  var hotkeyArray = Array.isArray(key) ? key : key.split(splitKey);\n  return hotkeyArray.every(function (hotkey) {\n    return currentlyPressedKeys.has(hotkey.trim().toLowerCase());\n  });\n}\nfunction pushToCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (currentlyPressedKeys.has('meta')) {\n    currentlyPressedKeys.forEach(function (key) {\n      return !isHotkeyModifier(key) && currentlyPressedKeys[\"delete\"](key.toLowerCase());\n    });\n  }\n  hotkeyArray.forEach(function (hotkey) {\n    return currentlyPressedKeys.add(hotkey.toLowerCase());\n  });\n}\nfunction removeFromCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (key === 'meta') {\n    currentlyPressedKeys.clear();\n  } else {\n    hotkeyArray.forEach(function (hotkey) {\n      return currentlyPressedKeys[\"delete\"](hotkey.toLowerCase());\n    });\n  }\n}\n(function () {\n  if (typeof document !== 'undefined') {\n    document.addEventListener('keydown', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n    document.addEventListener('keyup', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n  }\n  if (typeof window !== 'undefined') {\n    window.addEventListener('blur', function () {\n      currentlyPressedKeys.clear();\n    });\n  }\n})();\n\nfunction maybePreventDefault(e, hotkey, preventDefault) {\n  if (typeof preventDefault === 'function' && preventDefault(e, hotkey) || preventDefault === true) {\n    e.preventDefault();\n  }\n}\nfunction isHotkeyEnabled(e, hotkey, enabled) {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey);\n  }\n  return enabled === true || enabled === undefined;\n}\nfunction isKeyboardEventTriggeredByInput(ev) {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select']);\n}\nfunction isHotkeyEnabledOnTag(_ref, enabledOnTags) {\n  var target = _ref.target;\n  if (enabledOnTags === void 0) {\n    enabledOnTags = false;\n  }\n  var targetTagName = target && target.tagName;\n  if (enabledOnTags instanceof Array) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(function (tag) {\n      return tag.toLowerCase() === targetTagName.toLowerCase();\n    }));\n  }\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true);\n}\nfunction isScopeActive(activeScopes, scopes) {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn('A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>');\n    return true;\n  }\n  if (!scopes) {\n    return true;\n  }\n  return activeScopes.some(function (scope) {\n    return scopes.includes(scope);\n  }) || activeScopes.includes('*');\n}\nvar isHotkeyMatchingKeyboardEvent = function isHotkeyMatchingKeyboardEvent(e, hotkey, ignoreModifiers) {\n  if (ignoreModifiers === void 0) {\n    ignoreModifiers = false;\n  }\n  var alt = hotkey.alt,\n    meta = hotkey.meta,\n    mod = hotkey.mod,\n    shift = hotkey.shift,\n    keys = hotkey.keys;\n  var pressedKeyUppercase = e.key,\n    code = e.code;\n  var altKey = isHotkeyPressed('alt');\n  var shiftKey = isHotkeyPressed('shift');\n  var metaKey = isHotkeyPressed('meta');\n  var ctrlKey = isHotkeyPressed('ctrl');\n  var keyCode = mapKey(code);\n  var pressedKey = pressedKeyUppercase.toLowerCase();\n  if (!ignoreModifiers) {\n    if (altKey !== alt && pressedKey !== 'alt') {\n      return false;\n    }\n    if (shiftKey !== shift && pressedKey !== 'shift') {\n      return false;\n    }\n    // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n    if (mod) {\n      if (!metaKey && !ctrlKey) {\n        return false;\n      }\n    } else {\n      if (metaKey !== meta && ctrlKey !== meta && keyCode !== 'meta' && keyCode !== 'ctrl') {\n        return false;\n      }\n    }\n  }\n  // All modifiers are correct, now check the key\n  // If the key is set, we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true;\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return isHotkeyPressed(keys);\n  } else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true;\n  }\n  // There is nothing that matches.\n  return false;\n};\n\nvar BoundHotkeysProxyProvider = /*#__PURE__*/createContext(undefined);\nvar useBoundHotkeysProxy = function useBoundHotkeysProxy() {\n  return useContext(BoundHotkeysProxyProvider);\n};\nfunction BoundHotkeysProxyProviderProvider(_ref) {\n  var addHotkey = _ref.addHotkey,\n    removeHotkey = _ref.removeHotkey,\n    children = _ref.children;\n  return /*#__PURE__*/jsx(BoundHotkeysProxyProvider.Provider, {\n    value: {\n      addHotkey: addHotkey,\n      removeHotkey: removeHotkey\n    },\n    children: children\n  });\n}\n\nfunction deepEqual(x, y) {\n  //@ts-ignore\n  return x && y && typeof x === 'object' && typeof y === 'object'\n  //@ts-ignore\n  ? Object.keys(x).length === Object.keys(y).length && Object.keys(x).reduce(function (isEqual, key) {\n    return isEqual && deepEqual(x[key], y[key]);\n  }, true) : x === y;\n}\n\nvar HotkeysContext = /*#__PURE__*/createContext({\n  hotkeys: [],\n  enabledScopes: [],\n  toggleScope: function toggleScope() {},\n  enableScope: function enableScope() {},\n  disableScope: function disableScope() {}\n});\nvar useHotkeysContext = function useHotkeysContext() {\n  return useContext(HotkeysContext);\n};\nvar HotkeysProvider = function HotkeysProvider(_ref) {\n  var _ref$initiallyActiveS = _ref.initiallyActiveScopes,\n    initiallyActiveScopes = _ref$initiallyActiveS === void 0 ? ['*'] : _ref$initiallyActiveS,\n    children = _ref.children;\n  var _useState = useState((initiallyActiveScopes == null ? void 0 : initiallyActiveScopes.length) > 0 ? initiallyActiveScopes : ['*']),\n    internalActiveScopes = _useState[0],\n    setInternalActiveScopes = _useState[1];\n  var _useState2 = useState([]),\n    boundHotkeys = _useState2[0],\n    setBoundHotkeys = _useState2[1];\n  var enableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes('*')) {\n        return [scope];\n      }\n      return Array.from(new Set([].concat(prev, [scope])));\n    });\n  }, []);\n  var disableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.filter(function (s) {\n        return s !== scope;\n      }).length === 0) {\n        return ['*'];\n      } else {\n        return prev.filter(function (s) {\n          return s !== scope;\n        });\n      }\n    });\n  }, []);\n  var toggleScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes(scope)) {\n        if (prev.filter(function (s) {\n          return s !== scope;\n        }).length === 0) {\n          return ['*'];\n        } else {\n          return prev.filter(function (s) {\n            return s !== scope;\n          });\n        }\n      } else {\n        if (prev.includes('*')) {\n          return [scope];\n        }\n        return Array.from(new Set([].concat(prev, [scope])));\n      }\n    });\n  }, []);\n  var addBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return [].concat(prev, [hotkey]);\n    });\n  }, []);\n  var removeBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return prev.filter(function (h) {\n        return !deepEqual(h, hotkey);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/jsx(HotkeysContext.Provider, {\n    value: {\n      enabledScopes: internalActiveScopes,\n      hotkeys: boundHotkeys,\n      enableScope: enableScope,\n      disableScope: disableScope,\n      toggleScope: toggleScope\n    },\n    children: /*#__PURE__*/jsx(BoundHotkeysProxyProviderProvider, {\n      addHotkey: addBoundHotkey,\n      removeHotkey: removeBoundHotkey,\n      children: children\n    })\n  });\n};\n\nfunction useDeepEqualMemo(value) {\n  var ref = useRef(undefined);\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value;\n  }\n  return ref.current;\n}\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.stopImmediatePropagation();\n};\nvar useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nfunction useHotkeys(keys, callback, options, dependencies) {\n  var ref = useRef(null);\n  var hasTriggeredRef = useRef(false);\n  var _options = !(options instanceof Array) ? options : !(dependencies instanceof Array) ? dependencies : undefined;\n  var _deps = options instanceof Array ? options : dependencies instanceof Array ? dependencies : [];\n  var cb = useCallback(callback, [].concat(_deps));\n  var memoisedOptions = useDeepEqualMemo(_options);\n  var _useHotkeysContext = useHotkeysContext(),\n    enabledScopes = _useHotkeysContext.enabledScopes;\n  var proxy = useBoundHotkeysProxy();\n  useSafeLayoutEffect(function () {\n    if ((memoisedOptions == null ? void 0 : memoisedOptions.enabled) === false || !isScopeActive(enabledScopes, memoisedOptions == null ? void 0 : memoisedOptions.scopes)) {\n      return;\n    }\n    var listener = function listener(e, isKeyUp) {\n      var _e$target;\n      if (isKeyUp === void 0) {\n        isKeyUp = false;\n      }\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions == null ? void 0 : memoisedOptions.enableOnFormTags)) {\n        return;\n      }\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WON'T TRIGGER THE HOTKEY.\n      if (ref.current !== null && document.activeElement !== ref.current && !ref.current.contains(document.activeElement)) {\n        stopPropagation(e);\n        return;\n      }\n      if ((_e$target = e.target) != null && _e$target.isContentEditable && !(memoisedOptions != null && memoisedOptions.enableOnContentEditable)) {\n        return;\n      }\n      parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        var _hotkey$keys;\n        var hotkey = parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey);\n        if ((isHotkeyMatchingKeyboardEvent(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.ignoreModifiers) || (_hotkey$keys = hotkey.keys) != null && _hotkey$keys.includes('*')) && !hasTriggeredRef.current) {\n          maybePreventDefault(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.preventDefault);\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.enabled)) {\n            stopPropagation(e);\n            return;\n          }\n          // Execute the user callback for that hotkey\n          cb(e, hotkey);\n          if (!isKeyUp) {\n            hasTriggeredRef.current = true;\n          }\n        }\n      });\n    };\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys(mapKey(event.code));\n      if ((memoisedOptions == null ? void 0 : memoisedOptions.keydown) === undefined && (memoisedOptions == null ? void 0 : memoisedOptions.keyup) !== true || memoisedOptions != null && memoisedOptions.keydown) {\n        listener(event);\n      }\n    };\n    var handleKeyUp = function handleKeyUp(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys(mapKey(event.code));\n      hasTriggeredRef.current = false;\n      if (memoisedOptions != null && memoisedOptions.keyup) {\n        listener(event, true);\n      }\n    };\n    // @ts-ignore\n    (ref.current || (_options == null ? void 0 : _options.document) || document).addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    (ref.current || (_options == null ? void 0 : _options.document) || document).addEventListener('keydown', handleKeyDown);\n    if (proxy) {\n      parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        return proxy.addHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey));\n      });\n    }\n    return function () {\n      // @ts-ignore\n      (ref.current || (_options == null ? void 0 : _options.document) || document).removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      (ref.current || (_options == null ? void 0 : _options.document) || document).removeEventListener('keydown', handleKeyDown);\n      if (proxy) {\n        parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n          return proxy.removeHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey));\n        });\n      }\n    };\n  }, [keys, cb, memoisedOptions, enabledScopes]);\n  return ref;\n}\n\nfunction useRecordHotkeys() {\n  var _useState = useState(new Set()),\n    keys = _useState[0],\n    setKeys = _useState[1];\n  var _useState2 = useState(false),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var handler = useCallback(function (event) {\n    if (event.key === undefined) {\n      // Synthetic event (e.g., Chrome autofill).  Ignore.\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    setKeys(function (prev) {\n      var newKeys = new Set(prev);\n      newKeys.add(mapKey(event.code));\n      return newKeys;\n    });\n  }, []);\n  var stop = useCallback(function () {\n    if (typeof document !== 'undefined') {\n      document.removeEventListener('keydown', handler);\n      setIsRecording(false);\n    }\n  }, [handler]);\n  var start = useCallback(function () {\n    setKeys(new Set());\n    if (typeof document !== 'undefined') {\n      stop();\n      document.addEventListener('keydown', handler);\n      setIsRecording(true);\n    }\n  }, [handler, stop]);\n  return [keys, {\n    start: start,\n    stop: stop,\n    isRecording: isRecording\n  }];\n}\n\nexport { HotkeysProvider, isHotkeyPressed, useHotkeys, useHotkeysContext, useRecordHotkeys };\n//# sourceMappingURL=react-hotkeys-hook.esm.js.map\n"],"names":["CaretDownOutlined","dynamic","Promise","all","__webpack_require__","e","then","t","bind","ssr","EditOutlined","LockOutlined","MessageOutlined","UserOutlined","Modal","mod","NameChangeModal","AuthModal","UserDropdown","username","defaultUsername","param","showNameChangeModal","setShowNameChangeModal","useState","showAuthModal","setShowAuthModal","chatToggleVisible","setChatToggleVisible","useRecoilState","chatVisibleToggleAtom","appState","useRecoilValue","appStateAtom","toggleChatVisibility","handleChangeName","useHotkeys","enableOnContentEditable","currentUser","currentUserAtom","displayName","menu","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Menu","jsx","icon","onClick","chatAvailable","aria-expanded","div","id","className","concat","styles","Dropdown","overlay","trigger","Button","type","span","title","open","handleCancel","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","reservedModifierKeywords","mappedKeys","esc","mapKey","trim","toLowerCase","replace","parseKeysHookInput","keys","splitKey","split","parseHotkey","hotkey","combinationKey","toLocaleLowerCase","map","k","alt","includes","shift","meta","filter","currentlyPressedKeys","Set","isHotkeyPressed","hotkeyArray","Array","isArray","every","has","pushToCurrentlyPressedKeys","forEach","add","removeFromCurrentlyPressedKeys","clear","isHotkeyEnabledOnTag","_ref","enabledOnTags","targetTagName","tagName","Boolean","some","tag","document","addEventListener","undefined","code","window","isHotkeyMatchingKeyboardEvent","ignoreModifiers","pressedKeyUppercase","altKey","shiftKey","metaKey","ctrlKey","keyCode","pressedKey","BoundHotkeysProxyProvider","react__WEBPACK_IMPORTED_MODULE_0__","createContext","HotkeysContext","hotkeys","enabledScopes","toggleScope","enableScope","disableScope","stopPropagation","preventDefault","stopImmediatePropagation","useSafeLayoutEffect","useLayoutEffect","useEffect","callback","options","dependencies","ref","useRef","hasTriggeredRef","_options","cb","useCallback","memoisedOptions","deepEqual","x","y","reduce","isEqual","current","_useHotkeysContext","useContext","proxy","enabled","activeScopes","scopes","console","warn","scope","listener","isKeyUp","_e$target","isKeyboardEventTriggeredByInput","enableOnFormTags","activeElement","contains","isContentEditable","_hotkey$keys","handleKeyDown","event","keydown","keyup","handleKeyUp","addHotkey","removeEventListener","removeHotkey"],"sourceRoot":""}