{"version":3,"file":"static/chunks/4860.4ea77422a055fa64.js","mappings":"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","sources":["webpack://_N_E/./services/moderation-service.ts","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.tsx","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.tsx","webpack://_N_E/./components/ui/Modal/Modal.tsx","webpack://_N_E/./utils/format.ts","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.module.scss","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.module.scss","webpack://_N_E/./components/ui/Modal/Modal.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["const HIDE_MESSAGE_ENDPOINT = `/api/chat/messagevisibility`;\nconst BAN_USER_ENDPOINT = `/api/chat/users/setenabled`;\n\nclass ChatModerationService {\n  public static async removeMessage(id: string, accessToken: string): Promise<any> {\n    const url = new URL(HIDE_MESSAGE_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ idArray: [id] }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n\n  public static async banUser(id: string, accessToken: string): Promise<any> {\n    const url = new URL(BAN_USER_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n}\n\nexport default ChatModerationService;\n","import { Button, Col, Collapse, Row, Spin, Table, Tag } from 'antd';\nimport { FC, useEffect, useState } from 'react';\nimport format from 'date-fns/format';\nimport { ColumnsType } from 'antd/lib/table';\nimport dynamic from 'next/dynamic';\nimport ChatModeration from '../../../services/moderation-service';\nimport styles from './ChatModerationDetailsModal.module.scss';\nimport { formatUAstring } from '../../../utils/format';\n\nconst { Panel } = Collapse;\n\n// Lazy loaded components\n\nconst DeleteOutlined = dynamic(() => import('@ant-design/icons/DeleteOutlined'), {\n  ssr: false,\n});\n\nexport type ChatModerationDetailsModalProps = {\n  userId: string;\n  accessToken: string;\n};\n\nexport interface UserDetails {\n  user: User;\n  connectedClients: Client[];\n  messages: Message[];\n}\n\nexport interface Client {\n  messageCount: number;\n  userAgent: string;\n  connectedAt: Date;\n  geo: string;\n  id: number;\n}\n\nexport interface Message {\n  id: string;\n  timestamp: Date;\n  user: null;\n  body: string;\n}\n\nexport interface User {\n  id: string;\n  displayName: string;\n  displayColor: number;\n  createdAt: Date;\n  previousNames: string[];\n  scopes: string[];\n  isBot: boolean;\n  authenticated: boolean;\n}\n\nconst removeMessage = async (messageId: string, accessToken: string) => {\n  try {\n    ChatModeration.removeMessage(messageId, accessToken);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst ValueRow = ({ label, value }: { label: string; value: string }) => (\n  <Row justify=\"space-around\" align=\"middle\">\n    <Col span={12}>{label}</Col>\n    <Col span={12}>{value}</Col>\n  </Row>\n);\n\nconst ConnectedClient = ({ client }: { client: Client }) => {\n  const { messageCount, connectedAt, geo } = client;\n  const connectedAtDate = format(new Date(connectedAt), 'PP pp');\n\n  return (\n    <div>\n      <ValueRow label=\"Messages Sent\" value={`${messageCount}`} />\n      {geo !== 'N/A' && <ValueRow label=\"Geo\" value={geo} />}\n      <ValueRow label=\"Connected At\" value={connectedAtDate} />\n    </div>\n  );\n};\n\nconst UserColorBlock = ({ color }) => {\n  const bg = `var(--theme-color-users-${color})`;\n  return (\n    <div className={styles.colorBlock} style={{ backgroundColor: bg }}>\n      Color {color}\n    </div>\n  );\n};\n\nexport const ChatModerationDetailsModal: FC<ChatModerationDetailsModalProps> = ({\n  userId,\n  accessToken,\n}) => {\n  const [userDetails, setUserDetails] = useState<UserDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const getDetails = async () => {\n    try {\n      const response = await (\n        await fetch(`/api/moderation/chat/user/${userId}?accessToken=${accessToken}`)\n      ).json();\n      setUserDetails(response);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  if (!userDetails) {\n    return null;\n  }\n\n  const { user, connectedClients, messages } = userDetails;\n  const { displayColor, createdAt, previousNames, scopes, isBot, authenticated } = user;\n\n  const totalMessagesSent = connectedClients.reduce((acc, client) => acc + client.messageCount, 0);\n  const createdAtDate = format(new Date(createdAt), 'PP pp');\n\n  const chatMessageColumns: ColumnsType<Message> = [\n    {\n      title: 'Message',\n      dataIndex: 'body',\n      key: 'body',\n    },\n    {\n      title: 'Sent At',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      render: timestamp => format(new Date(timestamp), 'PP pp'),\n    },\n    {\n      title: 'Delete',\n      key: 'delete',\n      render: (text, record) => (\n        <Button\n          type=\"primary\"\n          ghost\n          icon={<DeleteOutlined />}\n          onClick={() => removeMessage(record.id, accessToken)}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Spin spinning={loading}>\n      <UserColorBlock color={displayColor} />\n      {scopes.map(scope => (\n        <Tag key={scope}>{scope}</Tag>\n      ))}\n      {authenticated && <Tag>Authenticated</Tag>}\n      {isBot && <Tag>Bot</Tag>}\n      <ValueRow label=\"Messages Sent Across Clients\" value={totalMessagesSent.toString()} />\n      <ValueRow label=\"User Created\" value={createdAtDate} />\n      <ValueRow label=\"Known As\" value={previousNames.join(',')} />\n      <Collapse accordion>\n        <Panel header=\"Currently Connected Clients\" key=\"connected-clients\">\n          <Collapse accordion>\n            {connectedClients.map(client => (\n              <Panel header={formatUAstring(client.userAgent)} key={client.id}>\n                <ConnectedClient client={client} />\n              </Panel>\n            ))}\n          </Collapse>\n        </Panel>\n        <Collapse accordion>\n          <Panel header=\"Recent Chat Messages\" key=\"chat-messages\">\n            <Table\n              size=\"small\"\n              pagination={null}\n              columns={chatMessageColumns}\n              dataSource={messages}\n              rowKey=\"id\"\n            />\n          </Panel>\n        </Collapse>\n      </Collapse>\n    </Spin>\n  );\n};\n","import { Dropdown, Menu, MenuProps, Space, message, Modal as AntModal } from 'antd';\nimport { FC, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Modal } from '../../ui/Modal/Modal';\nimport { ChatModerationDetailsModal } from '../ChatModerationDetailsModal/ChatModerationDetailsModal';\nimport styles from './ChatModerationActionMenu.module.scss';\nimport ChatModeration from '../../../services/moderation-service';\n\nconst { confirm } = AntModal;\n\n// Lazy loaded components\n\nconst CloseCircleOutlined = dynamic(() => import('@ant-design/icons/CloseCircleOutlined'), {\n  ssr: false,\n});\n\nconst ExclamationCircleOutlined = dynamic(\n  () => import('@ant-design/icons/ExclamationCircleOutlined'),\n  {\n    ssr: false,\n  },\n);\n\nconst EyeInvisibleOutlined = dynamic(() => import('@ant-design/icons/EyeInvisibleOutlined'), {\n  ssr: false,\n});\n\nconst SmallDashOutlined = dynamic(() => import('@ant-design/icons/SmallDashOutlined'), {\n  ssr: false,\n});\n\nexport type ChatModerationActionMenuProps = {\n  accessToken: string;\n  messageID: string;\n  userID: string;\n  userDisplayName: string;\n};\n\nexport const ChatModerationActionMenu: FC<ChatModerationActionMenuProps> = ({\n  messageID,\n  userID,\n  userDisplayName,\n  accessToken,\n}) => {\n  const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\n\n  const handleBanUser = async () => {\n    try {\n      await ChatModeration.banUser(userID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const handleHideMessage = async () => {\n    try {\n      await ChatModeration.removeMessage(messageID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const confirmHideMessage = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to remove this message from ${userDisplayName}?`,\n      onOk() {\n        handleHideMessage();\n      },\n    });\n  };\n\n  const confirmBanUser = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to ban ${userDisplayName} from chat?`,\n      onOk() {\n        handleBanUser();\n      },\n    });\n  };\n\n  const onMenuClick: MenuProps['onClick'] = ({ key }) => {\n    if (key === 'hide-message') {\n      confirmHideMessage();\n    } else if (key === 'ban-user') {\n      confirmBanUser();\n    } else if (key === 'more-info') {\n      setShowUserDetailsModal(true);\n    }\n  };\n\n  const menu = (\n    <Menu\n      onClick={onMenuClick}\n      items={[\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <EyeInvisibleOutlined />\n              </span>\n              Hide Message\n            </div>\n          ),\n          key: 'hide-message',\n        },\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <CloseCircleOutlined />\n              </span>\n              Ban User\n            </div>\n          ),\n          key: 'ban-user',\n        },\n        {\n          label: <div>More Info...</div>,\n          key: 'more-info',\n        },\n      ]}\n    />\n  );\n\n  return (\n    <>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <button type=\"button\" onClick={e => e.preventDefault()}>\n          <Space>\n            <SmallDashOutlined />\n          </Space>\n        </button>\n      </Dropdown>\n      <Modal\n        title={userDisplayName}\n        open={showUserDetailsModal}\n        handleCancel={() => {\n          setShowUserDetailsModal(false);\n        }}\n      >\n        <ChatModerationDetailsModal userId={userID} accessToken={accessToken} />\n      </Modal>\n    </>\n  );\n};\n","import { Spin, Skeleton, Modal as AntModal } from 'antd';\nimport React, { FC, ReactNode, useState } from 'react';\nimport styles from './Modal.module.scss';\n\nexport type ModalProps = {\n  title: string;\n  url?: string;\n  open: boolean;\n  handleOk?: () => void;\n  handleCancel?: () => void;\n  afterClose?: () => void;\n  children?: ReactNode;\n  height?: string;\n  width?: string;\n};\n\nexport const Modal: FC<ModalProps> = ({\n  title,\n  url,\n  open,\n  handleOk,\n  handleCancel,\n  afterClose,\n  height,\n  width,\n  children,\n}) => {\n  const [loading, setLoading] = useState(!!url);\n\n  let defaultHeight = '100%';\n  let defaultWidth = '520px';\n  if (url) {\n    defaultHeight = '70vh';\n    defaultWidth = '900px';\n  }\n\n  const modalContentBodyStyle = {\n    padding: '0px',\n    minHeight: height,\n    height: height ?? defaultHeight,\n  };\n\n  const iframe = url && (\n    <iframe\n      title={title}\n      src={url}\n      width=\"100%\"\n      height=\"100%\"\n      sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n      frameBorder=\"0\"\n      allowFullScreen\n      style={{ display: 'block' }}\n      // eslint-disable-next-line react/no-unknown-property\n      onLoad={() => setLoading(false)}\n    />\n  );\n\n  const iframeDisplayStyle = loading ? 'none' : 'inline';\n\n  return (\n    <AntModal\n      title={title}\n      open={open}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      afterClose={afterClose}\n      bodyStyle={modalContentBodyStyle}\n      width={width ?? defaultWidth}\n      zIndex={999}\n      footer={null}\n      centered\n      destroyOnClose\n    >\n      <div id=\"modal-container\" style={{ height: '100%' }}>\n        {loading && (\n          <Skeleton active={loading} style={{ padding: '10px' }} paragraph={{ rows: 10 }} />\n        )}\n\n        {iframe && <div style={{ display: iframeDisplayStyle }}>{iframe}</div>}\n        {children && <div className={styles.content}>{children}</div>}\n        {loading && <Spin className={styles.spinner} spinning={loading} size=\"large\" />}\n      </div>\n    </AntModal>\n  );\n};\nexport default Modal;\n\nModal.defaultProps = {\n  url: undefined,\n  children: undefined,\n  handleOk: undefined,\n  handleCancel: undefined,\n  afterClose: undefined,\n};\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ChatModerationActionMenu_icon__9j6DF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ChatModerationDetailsModal_modalContainer__czndV\",\"chatHistory\":\"ChatModerationDetailsModal_chatHistory__PunRk\",\"colorBlock\":\"ChatModerationDetailsModal_colorBlock___rAlw\",\"displayName\":\"ChatModerationDetailsModal_displayName__p7pLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Modal_spinner__GiSS0\",\"content\":\"Modal_content__h9my9\"};"],"names":["moderation_service","removeMessage","id","accessToken","url","URL","window","location","toString","searchParams","append","hideMessageUrl","options","method","headers","body","JSON","stringify","idArray","fetch","banUser","Panel","Collapse","DeleteOutlined","dynamic","Promise","all","__webpack_require__","e","then","t","bind","ssr","messageId","ChatModeration","console","error","ValueRow","label","value","param","jsx_runtime","jsxs","Row","justify","align","jsx","Col","span","ConnectedClient","client","messageCount","connectedAt","geo","connectedAtDate","format","Date","div","concat","UserColorBlock","color","className","styles","style","backgroundColor","ChatModerationDetailsModal","userId","userDetails","setUserDetails","useState","loading","setLoading","getDetails","response","json","useEffect","user","connectedClients","messages","displayColor","createdAt","previousNames","scopes","isBot","authenticated","totalMessagesSent","reduce","acc","createdAtDate","Spin","spinning","map","scope","Tag","join","accordion","header","formatUAstring","userAgent","Table","size","pagination","columns","title","dataIndex","key","render","timestamp","text","record","Button","type","ghost","icon","onClick","dataSource","rowKey","confirm","AntModal","CloseCircleOutlined","ExclamationCircleOutlined","EyeInvisibleOutlined","SmallDashOutlined","ChatModerationActionMenu","messageID","userID","userDisplayName","showUserDetailsModal","setShowUserDetailsModal","handleBanUser","message","handleHideMessage","confirmHideMessage","content","onOk","confirmBanUser","onMenuClick","menu","Menu","items","Fragment","Dropdown","overlay","trigger","button","preventDefault","Space","Modal","open","handleCancel","handleOk","afterClose","height","width","children","defaultHeight","defaultWidth","modalContentBodyStyle","padding","minHeight","iframe","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","src","sandbox","frameBorder","allowFullScreen","display","onLoad","onCancel","bodyStyle","zIndex","footer","centered","destroyOnClose","Skeleton","active","paragraph","rows","__webpack_exports__","defaultProps","undefined","formatIPAddress","ipAddress","ipAddressComponents","split","length","ip","slice","isEmptyObject","obj","Object","keys","constructor","padLeft","pad","String","repeat","parseSecondsToDurationString","seconds","finiteSeconds","Number","isFinite","Math","abs","days","floor","daysString","hours","hoursString","minString","secsString","uaString","parser","UAParser","device","os","browser","major","browserVersion","name","version","osVersion","osName","model","deviceString","module","exports"],"sourceRoot":""}