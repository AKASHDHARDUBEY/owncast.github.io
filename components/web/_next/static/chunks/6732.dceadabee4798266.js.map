{"version":3,"file":"static/chunks/6732.dceadabee4798266.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/stex.js","webpack://_N_E/<anon>"],"sourcesContent":["function mkStex(mathMode) {\n  function pushCommand(state, command) {\n    state.cmdState.push(command);\n  }\n\n  function peekCommand(state) {\n    if (state.cmdState.length > 0) {\n      return state.cmdState[state.cmdState.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  function popCommand(state) {\n    var plug = state.cmdState.pop();\n    if (plug) {\n      plug.closeBracket();\n    }\n  }\n\n  // returns the non-default plugin closest to the end of the list\n  function getMostPowerful(state) {\n    var context = state.cmdState;\n    for (var i = context.length - 1; i >= 0; i--) {\n      var plug = context[i];\n      if (plug.name == \"DEFAULT\") {\n        continue;\n      }\n      return plug;\n    }\n    return { styleIdentifier: function() { return null; } };\n  }\n\n  function addPluginPattern(pluginName, cmdStyle, styles) {\n    return function () {\n      this.name = pluginName;\n      this.bracketNo = 0;\n      this.style = cmdStyle;\n      this.styles = styles;\n      this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n      this.styleIdentifier = function() {\n        return this.styles[this.bracketNo - 1] || null;\n      };\n      this.openBracket = function() {\n        this.bracketNo++;\n        return \"bracket\";\n      };\n      this.closeBracket = function() {};\n    };\n  }\n\n  var plugins = {};\n\n  plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n  plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n  plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n  plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n  plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n  plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n  plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n  plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n  plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n  plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n  plugins[\"DEFAULT\"] = function () {\n    this.name = \"DEFAULT\";\n    this.style = \"tag\";\n\n    this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n  };\n\n  function setState(state, f) {\n    state.f = f;\n  }\n\n  // called when in a normal (no environment) context\n  function normal(source, state) {\n    var plug;\n    // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      var cmdName = source.current().slice(1);\n      plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      setState(state, beginParams);\n      return plug.style;\n    }\n\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n      return \"tag\";\n    }\n\n    // find if we're starting various math modes\n    if (source.match(\"\\\\[\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"\\\\(\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n      return \"keyword\";\n    }\n\n    var ch = source.next();\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    } else if (ch == '}' || ch == ']') {\n      plug = peekCommand(state);\n      if (plug) {\n        plug.closeBracket(ch);\n        setState(state, beginParams);\n      } else {\n        return \"error\";\n      }\n      return \"bracket\";\n    } else if (ch == '{' || ch == '[') {\n      plug = plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      return \"bracket\";\n    } else if (/\\d/.test(ch)) {\n      source.eatWhile(/[\\w.%]/);\n      return \"atom\";\n    } else {\n      source.eatWhile(/[\\w\\-_]/);\n      plug = getMostPowerful(state);\n      if (plug.name == 'begin') {\n        plug.argument = source.current();\n      }\n      return plug.styleIdentifier();\n    }\n  }\n\n  function inMathMode(source, state, endModeSeq) {\n    if (source.eatSpace()) {\n      return null;\n    }\n    if (endModeSeq && source.match(endModeSeq)) {\n      setState(state, normal);\n      return \"keyword\";\n    }\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      return \"tag\";\n    }\n    if (source.match(/^[a-zA-Z]+/)) {\n      return \"variableName.special\";\n    }\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/]/)) {\n      return \"tag\";\n    }\n    // special math-mode characters\n    if (source.match(/^[\\^_&]/)) {\n      return \"tag\";\n    }\n    // non-special characters\n    if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n      return null;\n    }\n    if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n      return \"number\";\n    }\n    var ch = source.next();\n    if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    }\n\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    }\n    return \"error\";\n  }\n\n  function beginParams(source, state) {\n    var ch = source.peek(), lastPlug;\n    if (ch == '{' || ch == '[') {\n      lastPlug = peekCommand(state);\n      lastPlug.openBracket(ch);\n      source.eat(ch);\n      setState(state, normal);\n      return \"bracket\";\n    }\n    if (/[ \\t\\r]/.test(ch)) {\n      source.eat(ch);\n      return null;\n    }\n    setState(state, normal);\n    popCommand(state);\n\n    return normal(source, state);\n  }\n\n  return {\n    name: \"stex\",\n    startState: function() {\n      var f = mathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n      return {\n        cmdState: [],\n        f: f\n      };\n    },\n    copyState: function(s) {\n      return {\n        cmdState: s.cmdState.slice(),\n        f: s.f\n      };\n    },\n    token: function(stream, state) {\n      return state.f(stream, state);\n    },\n    blankLine: function(state) {\n      state.f = normal;\n      state.cmdState.length = 0;\n    },\n    languageData: {\n      commentTokens: {line: \"%\"}\n    }\n  };\n};\n\nexport const stex = mkStex(false)\nexport const stexMath = mkStex(true)\n"],"names":["mkStex","mathMode","pushCommand","state","command","cmdState","push","peekCommand","length","addPluginPattern","pluginName","cmdStyle","styles","name","bracketNo","style","argument","styleIdentifier","openBracket","closeBracket","plugins","normal","source","match","plug","cmdName","current","slice","hasOwnProperty","f","beginParams","inMathMode","ch","next","skipToEnd","test","eatWhile","getMostPowerful","context","i","endModeSeq","eatSpace","peek","lastPlug","eat","pop","startState","copyState","s","token","stream","blankLine","languageData","commentTokens","line","stex","stexMath"],"sourceRoot":""}