{"version":3,"file":"static/chunks/5648.37993c9722cd540c.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/asterisk.js","webpack://_N_E/<anon>"],"sourcesContent":["var atoms    = [\"exten\", \"same\", \"include\",\"ignorepat\",\"switch\"],\n    dpcmd    = [\"#include\",\"#exec\"],\n    apps     = [\n      \"addqueuemember\",\"adsiprog\",\"aelsub\",\"agentlogin\",\"agentmonitoroutgoing\",\"agi\",\n      \"alarmreceiver\",\"amd\",\"answer\",\"authenticate\",\"background\",\"backgrounddetect\",\n      \"bridge\",\"busy\",\"callcompletioncancel\",\"callcompletionrequest\",\"celgenuserevent\",\n      \"changemonitor\",\"chanisavail\",\"channelredirect\",\"chanspy\",\"clearhash\",\"confbridge\",\n      \"congestion\",\"continuewhile\",\"controlplayback\",\"dahdiacceptr2call\",\"dahdibarge\",\n      \"dahdiras\",\"dahdiscan\",\"dahdisendcallreroutingfacility\",\"dahdisendkeypadfacility\",\n      \"datetime\",\"dbdel\",\"dbdeltree\",\"deadagi\",\"dial\",\"dictate\",\"directory\",\"disa\",\n      \"dumpchan\",\"eagi\",\"echo\",\"endwhile\",\"exec\",\"execif\",\"execiftime\",\"exitwhile\",\"extenspy\",\n      \"externalivr\",\"festival\",\"flash\",\"followme\",\"forkcdr\",\"getcpeid\",\"gosub\",\"gosubif\",\n      \"goto\",\"gotoif\",\"gotoiftime\",\"hangup\",\"iax2provision\",\"ices\",\"importvar\",\"incomplete\",\n      \"ivrdemo\",\"jabberjoin\",\"jabberleave\",\"jabbersend\",\"jabbersendgroup\",\"jabberstatus\",\n      \"jack\",\"log\",\"macro\",\"macroexclusive\",\"macroexit\",\"macroif\",\"mailboxexists\",\"meetme\",\n      \"meetmeadmin\",\"meetmechanneladmin\",\"meetmecount\",\"milliwatt\",\"minivmaccmess\",\"minivmdelete\",\n      \"minivmgreet\",\"minivmmwi\",\"minivmnotify\",\"minivmrecord\",\"mixmonitor\",\"monitor\",\"morsecode\",\n      \"mp3player\",\"mset\",\"musiconhold\",\"nbscat\",\"nocdr\",\"noop\",\"odbc\",\"odbc\",\"odbcfinish\",\n      \"originate\",\"ospauth\",\"ospfinish\",\"osplookup\",\"ospnext\",\"page\",\"park\",\"parkandannounce\",\n      \"parkedcall\",\"pausemonitor\",\"pausequeuemember\",\"pickup\",\"pickupchan\",\"playback\",\"playtones\",\n      \"privacymanager\",\"proceeding\",\"progress\",\"queue\",\"queuelog\",\"raiseexception\",\"read\",\"readexten\",\n      \"readfile\",\"receivefax\",\"receivefax\",\"receivefax\",\"record\",\"removequeuemember\",\n      \"resetcdr\",\"retrydial\",\"return\",\"ringing\",\"sayalpha\",\"saycountedadj\",\"saycountednoun\",\n      \"saycountpl\",\"saydigits\",\"saynumber\",\"sayphonetic\",\"sayunixtime\",\"senddtmf\",\"sendfax\",\n      \"sendfax\",\"sendfax\",\"sendimage\",\"sendtext\",\"sendurl\",\"set\",\"setamaflags\",\n      \"setcallerpres\",\"setmusiconhold\",\"sipaddheader\",\"sipdtmfmode\",\"sipremoveheader\",\"skel\",\n      \"slastation\",\"slatrunk\",\"sms\",\"softhangup\",\"speechactivategrammar\",\"speechbackground\",\n      \"speechcreate\",\"speechdeactivategrammar\",\"speechdestroy\",\"speechloadgrammar\",\"speechprocessingsound\",\n      \"speechstart\",\"speechunloadgrammar\",\"stackpop\",\"startmusiconhold\",\"stopmixmonitor\",\"stopmonitor\",\n      \"stopmusiconhold\",\"stopplaytones\",\"system\",\"testclient\",\"testserver\",\"transfer\",\"tryexec\",\n      \"trysystem\",\"unpausemonitor\",\"unpausequeuemember\",\"userevent\",\"verbose\",\"vmauthenticate\",\n      \"vmsayname\",\"voicemail\",\"voicemailmain\",\"wait\",\"waitexten\",\"waitfornoise\",\"waitforring\",\n      \"waitforsilence\",\"waitmusiconhold\",\"waituntil\",\"while\",\"zapateller\"\n    ];\n\nfunction basicToken(stream,state){\n  var cur = '';\n  var ch = stream.next();\n  // comment\n  if (state.blockComment) {\n    if (ch == \"-\" && stream.match(\"-;\", true)) {\n      state.blockComment = false;\n    } else if (stream.skipTo(\"--;\")) {\n      stream.next();\n      stream.next();\n      stream.next();\n      state.blockComment = false;\n    } else {\n      stream.skipToEnd();\n    }\n    return \"comment\";\n  }\n  if(ch == \";\") {\n    if (stream.match(\"--\", true)) {\n      if (!stream.match(\"-\", false)) {  // Except ;--- is not a block comment\n        state.blockComment = true;\n        return \"comment\";\n      }\n    }\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  // context\n  if(ch == '[') {\n    stream.skipTo(']');\n    stream.eat(']');\n    return \"header\";\n  }\n  // string\n  if(ch == '\"') {\n    stream.skipTo('\"');\n    return \"string\";\n  }\n  if(ch == \"'\") {\n    stream.skipTo(\"'\");\n    return \"string.special\";\n  }\n  // dialplan commands\n  if(ch == '#') {\n    stream.eatWhile(/\\w/);\n    cur = stream.current();\n    if(dpcmd.indexOf(cur) !== -1) {\n      stream.skipToEnd();\n      return \"strong\";\n    }\n  }\n  // application args\n  if(ch == '$'){\n    var ch1 = stream.peek();\n    if(ch1 == '{'){\n      stream.skipTo('}');\n      stream.eat('}');\n      return \"variableName.special\";\n    }\n  }\n  // extension\n  stream.eatWhile(/\\w/);\n  cur = stream.current();\n  if(atoms.indexOf(cur) !== -1) {\n    state.extenStart = true;\n    switch(cur) {\n    case 'same': state.extenSame = true; break;\n    case 'include':\n    case 'switch':\n    case 'ignorepat':\n      state.extenInclude = true;break;\n    default:break;\n    }\n    return \"atom\";\n  }\n}\n\nexport const asterisk = {\n  name: \"asterisk\",\n  startState: function() {\n    return {\n      blockComment: false,\n      extenStart: false,\n      extenSame:  false,\n      extenInclude: false,\n      extenExten: false,\n      extenPriority: false,\n      extenApplication: false\n    };\n  },\n  token: function(stream, state) {\n\n    var cur = '';\n    if(stream.eatSpace()) return null;\n    // extension started\n    if(state.extenStart){\n      stream.eatWhile(/[^\\s]/);\n      cur = stream.current();\n      if(/^=>?$/.test(cur)){\n        state.extenExten = true;\n        state.extenStart = false;\n        return \"strong\";\n      } else {\n        state.extenStart = false;\n        stream.skipToEnd();\n        return \"error\";\n      }\n    } else if(state.extenExten) {\n      // set exten and priority\n      state.extenExten = false;\n      state.extenPriority = true;\n      stream.eatWhile(/[^,]/);\n      if(state.extenInclude) {\n        stream.skipToEnd();\n        state.extenPriority = false;\n        state.extenInclude = false;\n      }\n      if(state.extenSame) {\n        state.extenPriority = false;\n        state.extenSame = false;\n        state.extenApplication = true;\n      }\n      return \"tag\";\n    } else if(state.extenPriority) {\n      state.extenPriority = false;\n      state.extenApplication = true;\n      stream.next(); // get comma\n      if(state.extenSame) return null;\n      stream.eatWhile(/[^,]/);\n      return \"number\";\n    } else if(state.extenApplication) {\n      stream.eatWhile(/,/);\n      cur = stream.current();\n      if(cur === ',') return null;\n      stream.eatWhile(/\\w/);\n      cur = stream.current().toLowerCase();\n      state.extenApplication = false;\n      if(apps.indexOf(cur) !== -1){\n        return \"def\";\n      }\n    } else{\n      return basicToken(stream,state);\n    }\n\n    return null;\n  },\n\n  languageData: {\n    commentTokens: {line: \";\", block: {open: \";--\", close: \"--;\"}}\n  }\n};\n"],"names":["atoms","dpcmd","apps","asterisk","name","startState","blockComment","extenStart","extenSame","extenInclude","extenExten","extenPriority","extenApplication","token","stream","state","cur","eatSpace","eatWhile","current","test","skipToEnd","next","toLowerCase","indexOf","basicToken","ch","match","skipTo","eat","ch1","peek","languageData","commentTokens","line","block","open","close"],"sourceRoot":""}