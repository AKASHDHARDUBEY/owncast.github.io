{"version":3,"file":"static/chunks/7689-8b6f3c2b15ed55f0.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/codec-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/index.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/index.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://_N_E/./node_modules/base64-js/index.js","webpack://_N_E/./node_modules/buffer/index.js","webpack://_N_E/./node_modules/global/document.js","webpack://_N_E/./node_modules/global/window.js","webpack://_N_E/./node_modules/ieee754/index.js","webpack://_N_E/./node_modules/is-function/index.js","webpack://_N_E/./node_modules/keycode/index.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/stream.js","webpack://_N_E/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://_N_E/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://_N_E/./node_modules/mux.js/lib/tools/parse-sidx.js","webpack://_N_E/./node_modules/mux.js/lib/utils/clock.js","webpack://_N_E/./node_modules/mux.js/lib/utils/numbers.js","webpack://_N_E/./node_modules/video.js/dist/video-js.css","webpack://_N_E/./node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js","webpack://_N_E/./node_modules/safe-json-parse/tuple.js","webpack://_N_E/./node_modules/url-toolkit/src/url-toolkit.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://_N_E/<anon>"],"sourcesContent":["import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","import { padStart, toHexString, toBinaryString } from './byte-helpers.js'; // https://aomediacodec.github.io/av1-isobmff/#av1codecconfigurationbox-syntax\n// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#AV1\n\nexport var getAv1Codec = function getAv1Codec(bytes) {\n  var codec = '';\n  var profile = bytes[1] >>> 3;\n  var level = bytes[1] & 0x1F;\n  var tier = bytes[2] >>> 7;\n  var highBitDepth = (bytes[2] & 0x40) >> 6;\n  var twelveBit = (bytes[2] & 0x20) >> 5;\n  var monochrome = (bytes[2] & 0x10) >> 4;\n  var chromaSubsamplingX = (bytes[2] & 0x08) >> 3;\n  var chromaSubsamplingY = (bytes[2] & 0x04) >> 2;\n  var chromaSamplePosition = bytes[2] & 0x03;\n  codec += profile + \".\" + padStart(level, 2, '0');\n\n  if (tier === 0) {\n    codec += 'M';\n  } else if (tier === 1) {\n    codec += 'H';\n  }\n\n  var bitDepth;\n\n  if (profile === 2 && highBitDepth) {\n    bitDepth = twelveBit ? 12 : 10;\n  } else {\n    bitDepth = highBitDepth ? 10 : 8;\n  }\n\n  codec += \".\" + padStart(bitDepth, 2, '0'); // TODO: can we parse color range??\n\n  codec += \".\" + monochrome;\n  codec += \".\" + chromaSubsamplingX + chromaSubsamplingY + chromaSamplePosition;\n  return codec;\n};\nexport var getAvcCodec = function getAvcCodec(bytes) {\n  var profileId = toHexString(bytes[1]);\n  var constraintFlags = toHexString(bytes[2] & 0xFC);\n  var levelId = toHexString(bytes[3]);\n  return \"\" + profileId + constraintFlags + levelId;\n};\nexport var getHvcCodec = function getHvcCodec(bytes) {\n  var codec = '';\n  var profileSpace = bytes[1] >> 6;\n  var profileId = bytes[1] & 0x1F;\n  var tierFlag = (bytes[1] & 0x20) >> 5;\n  var profileCompat = bytes.subarray(2, 6);\n  var constraintIds = bytes.subarray(6, 12);\n  var levelId = bytes[12];\n\n  if (profileSpace === 1) {\n    codec += 'A';\n  } else if (profileSpace === 2) {\n    codec += 'B';\n  } else if (profileSpace === 3) {\n    codec += 'C';\n  }\n\n  codec += profileId + \".\"; // ffmpeg does this in big endian\n\n  var profileCompatVal = parseInt(toBinaryString(profileCompat).split('').reverse().join(''), 2); // apple does this in little endian...\n\n  if (profileCompatVal > 255) {\n    profileCompatVal = parseInt(toBinaryString(profileCompat), 2);\n  }\n\n  codec += profileCompatVal.toString(16) + \".\";\n\n  if (tierFlag === 0) {\n    codec += 'L';\n  } else {\n    codec += 'H';\n  }\n\n  codec += levelId;\n  var constraints = '';\n\n  for (var i = 0; i < constraintIds.length; i++) {\n    var v = constraintIds[i];\n\n    if (v) {\n      if (constraints) {\n        constraints += '.';\n      }\n\n      constraints += v.toString(16);\n    }\n  }\n\n  if (constraints) {\n    codec += \".\" + constraints;\n  }\n\n  return codec;\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tif(source && typeof source === 'string'){\n\t\tsax.parse(source,defaultNSMap,entityMap);\n\t}else{\n\t\tsax.errorHandler.error(\"invalid doc source\");\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.DOMParser = DOMParser;\n\n/**\n * @deprecated Import/require from main entry point instead\n */\nexports.DOMImplementation = dom.DOMImplementation;\n\n/**\n * @deprecated Import/require from main entry point instead\n */\nexports.XMLSerializer = dom.XMLSerializer;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n\t\t\t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n\t\t\t\t\t\treturn map[prefix] ;\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n *\n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml/#CleanAttrVals\n * @see https://www.w3.org/TR/xml/#NT-AttValue\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g,_xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&]/g,_xmlEncoder)\n\t\t\t.replace(/]]>/g, ']]&gt;')\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring \nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\t\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif(k in entityMap){\n\t\t\treturn entityMap[k]; \n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\t\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\t\t\t\t\t\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\t\t\t\t\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(qname, value, startIndex)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t//console.log(attrName,value,start,p)\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t//console.dir(el)\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value.replace(/&#?\\w+;/g,entityReplacer), start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute \n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\t\t\t\t\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\t\t\t\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//} \n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA() \n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\t\t\t\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\t\t\t\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","/*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","/*! @name mpd-parser @version 0.21.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"0.21.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n/**\n * Returns the first index that satisfies the matching function, or -1 if not found.\n *\n * Only necessary because of IE11 support.\n *\n * @param {Array} list - the list to search through\n * @param {Function} matchingFunction - the matching function\n *\n * @return {number} the matching index or -1 if not found\n */\n\nvar findIndex = function findIndex(list, matchingFunction) {\n  for (var i = 0; i < list.length; i++) {\n    if (matchingFunction(list[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nvar union = function union(lists, keyFunction) {\n  return values(lists.reduce(function (acc, list) {\n    list.forEach(function (el) {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    var startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    var endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    var length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length: length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nvar parseEndNumber = function parseEndNumber(endNumber) {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration,\n        periodDuration = attributes.periodDuration;\n    var endNumber = parseEndNumber(attributes.endNumber);\n    var segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$periodSta = attributes.periodStart,\n        periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    var now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    var periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodStart = attributes.periodStart,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodStart,\n      time: number * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var type = attributes.type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      periodDuration = attributes.periodDuration,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // section is either a period or the full source\n\n    var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      periodStart = attributes.periodStart,\n      presentationTime = attributes.presentationTime,\n      _attributes$number = attributes.number,\n      number = _attributes$number === void 0 ? 0 : _attributes$number,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = [];\n  var type = playlist.endList ? 'static' : 'dynamic';\n  var periodStart = playlist.sidx.timeline;\n  var presentationTime = periodStart;\n  var number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = void 0; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      periodStart: periodStart,\n      presentationTime: presentationTime,\n      number: number,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange,\n      type: type\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nvar TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nvar getUniqueTimelineStarts = function getUniqueTimelineStarts(timelineStarts) {\n  return union(timelineStarts, function (_ref) {\n    var timeline = _ref.timeline;\n    return timeline;\n  }).sort(function (a, b) {\n    return a.timeline > b.timeline ? 1 : -1;\n  });\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nvar findPlaylistWithName = function findPlaylistWithName(playlists, name) {\n  for (var i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nvar getMediaGroupPlaylists = function getMediaGroupPlaylists(manifest) {\n  var mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, function (properties, type, group, label) {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nvar updateMediaSequenceForPlaylist = function updateMediaSequenceForPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      mediaSequence = _ref2.mediaSequence;\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach(function (segment, index) {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nvar updateSequenceNumbers = function updateSequenceNumbers(_ref3) {\n  var oldPlaylists = _ref3.oldPlaylists,\n      newPlaylists = _ref3.newPlaylists,\n      timelineStarts = _ref3.timelineStarts;\n  newPlaylists.forEach(function (playlist) {\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref4) {\n      var timeline = _ref4.timeline;\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    var oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    var firstNewSegment = playlist.segments[0];\n    var oldMatchingSegmentIndex = findIndex(oldPlaylist.segments, function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist: playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    var oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist: playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nvar positionManifestOnTimeline = function positionManifestOnTimeline(_ref5) {\n  var oldManifest = _ref5.oldManifest,\n      newManifest = _ref5.newManifest;\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  var oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  var newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists: oldPlaylists,\n    newPlaylists: newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nvar generateSidxKey = function generateSidxKey(sidx) {\n  return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        var _acc$name$segments;\n\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidxMapping) {\n  var sidxKey = generateSidxKey(playlist.sidx);\n  var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nvar addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx,\n      mediaSequence = _ref.mediaSequence,\n      discontinuitySequence = _ref.discontinuitySequence,\n      discontinuityStarts = _ref.discontinuityStarts;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence: discontinuitySequence,\n    discontinuityStarts: discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence: mediaSequence,\n    segments: segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _m3u8Attributes;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments,\n      mediaSequence = _ref2.mediaSequence,\n      discontinuityStarts = _ref2.discontinuityStarts,\n      discontinuitySequence = _ref2.discontinuitySequence;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  var m3u8Attributes = (_m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth\n  }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts: discontinuityStarts,\n    discontinuitySequence: discontinuitySequence,\n    mediaSequence: mediaSequence,\n    segments: segments\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (isAudioOnly === void 0) {\n    isAudioOnly = false;\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language: language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    var formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nvar organizeCaptionServices = function organizeCaptionServices(captionServices) {\n  return captionServices.reduce(function (svcObj, svc) {\n    if (!svc) {\n      return svcObj;\n    }\n\n    svc.forEach(function (service) {\n      var channel = service.channel,\n          language = service.language;\n      svcObj[language] = {\n        autoselect: false,\n        default: false,\n        instreamId: channel,\n        language: language\n      };\n\n      if (service.hasOwnProperty('aspectRatio')) {\n        svcObj[language].aspectRatio = service.aspectRatio;\n      }\n\n      if (service.hasOwnProperty('easyReader')) {\n        svcObj[language].easyReader = service.easyReader;\n      }\n\n      if (service.hasOwnProperty('3D')) {\n        svcObj[language]['3D'] = service['3D'];\n      }\n    });\n    return svcObj;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes2;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx,\n      discontinuityStarts = _ref3.discontinuityStarts;\n  var playlist = {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts: discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments: segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nvar videoOnly = function videoOnly(_ref4) {\n  var attributes = _ref4.attributes;\n  return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n};\n\nvar audioOnly = function audioOnly(_ref5) {\n  var attributes = _ref5.attributes;\n  return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n};\n\nvar vttOnly = function vttOnly(_ref6) {\n  var attributes = _ref6.attributes;\n  return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n};\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nvar addMediaSequenceValues = function addMediaSequenceValues(playlists, timelineStarts) {\n  // increment all segments sequentially\n  playlists.forEach(function (playlist) {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref7) {\n      var timeline = _ref7.timeline;\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach(function (segment, index) {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nvar flattenMediaGroupPlaylists = function flattenMediaGroupPlaylists(mediaGroupObject) {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce(function (acc, label) {\n    var labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nvar toM3u8 = function toM3u8(_ref8) {\n  var _mediaGroups;\n\n  var dashPlaylists = _ref8.dashPlaylists,\n      locations = _ref8.locations,\n      _ref8$sidxMapping = _ref8.sidxMapping,\n      sidxMapping = _ref8$sidxMapping === void 0 ? {} : _ref8$sidxMapping,\n      previousManifest = _ref8.previousManifest;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      type = _dashPlaylists$0$attr.type,\n      suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n      minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  var captions = dashPlaylists.map(function (playlist) {\n    return playlist.attributes.captionServices;\n  }).filter(Boolean);\n  var manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  var isAudioOnly = manifest.playlists.length === 0;\n  var organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  var organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  var formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  var playlistTimelineStarts = formattedPlaylists.map(function (_ref9) {\n    var timelineStarts = _ref9.timelineStarts;\n    return timelineStarts;\n  });\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$periodSta = attributes.periodStart,\n      periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + periodStart;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var type = attributes.type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodStart;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    var map = {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime: presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n      periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type: function type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset: function presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nvar parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(function (value) {\n      var channel;\n      var language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        var _value$split = value.split('=');\n\n        channel = _value$split[0];\n        language = _value$split[1];\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel: channel,\n        language: language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n    return _values.map(function (value) {\n      var flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        var _value$split2 = value.split('='),\n            channel = _value$split2[0],\n            _value$split2$ = _value$split2[1],\n            opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(function (opt) {\n          var _opt$split = opt.split(':'),\n              name = _opt$split[0],\n              val = _opt$split[1];\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n    var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n    if (captionServices) {\n      attrs = merge(attrs, {\n        captionServices: captionServices\n      });\n    }\n\n    var label = findChildren(adaptationSet, 'Label')[0];\n\n    if (label && label.childNodes.length) {\n      var labelVal = label.childNodes[0].nodeValue.trim();\n      attrs = merge(attrs, {\n        label: labelVal\n      });\n    }\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n    var periodAttributes = merge(mpdAttributes, {\n      periodStart: period.attributes.start\n    });\n\n    if (typeof period.attributes.duration === 'number') {\n      periodAttributes.periodDuration = period.attributes.duration;\n    }\n\n    var adaptationSets = findChildren(period.node, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period.node);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nvar getPeriodStart = function getPeriodStart(_ref) {\n  var attributes = _ref.attributes,\n      priorPeriodAttributes = _ref.priorPeriodAttributes,\n      mpdType = _ref.mpdType;\n\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var locations = findChildren(mpd, 'Location');\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach(function (node, index) {\n    var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    var priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes: attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node: node,\n      attributes: attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n  };\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new DOMParser();\n  var xml;\n  var mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","// extracted by mini-css-extract-plugin","import { useContext, createContext, useState, useCallback, useRef, useLayoutEffect, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod'];\nvar mappedKeys = {\n  esc: 'escape',\n  \"return\": 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '#': 'backslash',\n  '+': 'bracketright',\n  'ShiftLeft': 'shift',\n  'ShiftRight': 'shift',\n  'AltLeft': 'alt',\n  'AltRight': 'alt',\n  'MetaLeft': 'meta',\n  'MetaRight': 'meta',\n  'ControlLeft': 'ctrl',\n  'ControlRight': 'ctrl'\n};\nfunction mapKey(key) {\n  return (mappedKeys[key] || key).trim().toLowerCase().replace('key', '').replace('digit', '').replace('numpad', '').replace('arrow', '');\n}\nfunction isHotkeyModifier(key) {\n  return reservedModifierKeywords.includes(key);\n}\nfunction parseKeysHookInput(keys, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  if (typeof keys === 'string') {\n    return keys.split(splitKey);\n  }\n  return keys;\n}\nfunction parseHotkey(hotkey, combinationKey) {\n  if (combinationKey === void 0) {\n    combinationKey = '+';\n  }\n  var keys = hotkey.toLocaleLowerCase().split(combinationKey).map(function (k) {\n    return mapKey(k);\n  });\n  var modifiers = {\n    alt: keys.includes('alt'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod')\n  };\n  var singleCharKeys = keys.filter(function (k) {\n    return !reservedModifierKeywords.includes(k);\n  });\n  return _extends({}, modifiers, {\n    keys: singleCharKeys\n  });\n}\n\nvar currentlyPressedKeys = /*#__PURE__*/new Set();\nfunction isHotkeyPressed(key, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  var hotkeyArray = Array.isArray(key) ? key : key.split(splitKey);\n  return hotkeyArray.every(function (hotkey) {\n    return currentlyPressedKeys.has(hotkey.trim().toLowerCase());\n  });\n}\nfunction pushToCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (currentlyPressedKeys.has('meta')) {\n    currentlyPressedKeys.forEach(function (key) {\n      return !isHotkeyModifier(key) && currentlyPressedKeys[\"delete\"](key.toLowerCase());\n    });\n  }\n  hotkeyArray.forEach(function (hotkey) {\n    return currentlyPressedKeys.add(hotkey.toLowerCase());\n  });\n}\nfunction removeFromCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (key === 'meta') {\n    currentlyPressedKeys.clear();\n  } else {\n    hotkeyArray.forEach(function (hotkey) {\n      return currentlyPressedKeys[\"delete\"](hotkey.toLowerCase());\n    });\n  }\n}\n(function () {\n  if (typeof document !== 'undefined') {\n    document.addEventListener('keydown', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n    document.addEventListener('keyup', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n  }\n  if (typeof window !== 'undefined') {\n    window.addEventListener('blur', function () {\n      currentlyPressedKeys.clear();\n    });\n  }\n})();\n\nfunction maybePreventDefault(e, hotkey, preventDefault) {\n  if (typeof preventDefault === 'function' && preventDefault(e, hotkey) || preventDefault === true) {\n    e.preventDefault();\n  }\n}\nfunction isHotkeyEnabled(e, hotkey, enabled) {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey);\n  }\n  return enabled === true || enabled === undefined;\n}\nfunction isKeyboardEventTriggeredByInput(ev) {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select']);\n}\nfunction isHotkeyEnabledOnTag(_ref, enabledOnTags) {\n  var target = _ref.target;\n  if (enabledOnTags === void 0) {\n    enabledOnTags = false;\n  }\n  var targetTagName = target && target.tagName;\n  if (enabledOnTags instanceof Array) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(function (tag) {\n      return tag.toLowerCase() === targetTagName.toLowerCase();\n    }));\n  }\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true);\n}\nfunction isScopeActive(activeScopes, scopes) {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn('A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>');\n    return true;\n  }\n  if (!scopes) {\n    return true;\n  }\n  return activeScopes.some(function (scope) {\n    return scopes.includes(scope);\n  }) || activeScopes.includes('*');\n}\nvar isHotkeyMatchingKeyboardEvent = function isHotkeyMatchingKeyboardEvent(e, hotkey, ignoreModifiers) {\n  if (ignoreModifiers === void 0) {\n    ignoreModifiers = false;\n  }\n  var alt = hotkey.alt,\n    meta = hotkey.meta,\n    mod = hotkey.mod,\n    shift = hotkey.shift,\n    keys = hotkey.keys;\n  var pressedKeyUppercase = e.key,\n    code = e.code;\n  var altKey = isHotkeyPressed('alt');\n  var shiftKey = isHotkeyPressed('shift');\n  var metaKey = isHotkeyPressed('meta');\n  var ctrlKey = isHotkeyPressed('ctrl');\n  var keyCode = mapKey(code);\n  var pressedKey = pressedKeyUppercase.toLowerCase();\n  if (!ignoreModifiers) {\n    if (altKey !== alt && pressedKey !== 'alt') {\n      return false;\n    }\n    if (shiftKey !== shift && pressedKey !== 'shift') {\n      return false;\n    }\n    // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n    if (mod) {\n      if (!metaKey && !ctrlKey) {\n        return false;\n      }\n    } else {\n      if (metaKey !== meta && ctrlKey !== meta && keyCode !== 'meta' && keyCode !== 'ctrl') {\n        return false;\n      }\n    }\n  }\n  // All modifiers are correct, now check the key\n  // If the key is set, we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true;\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return isHotkeyPressed(keys);\n  } else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true;\n  }\n  // There is nothing that matches.\n  return false;\n};\n\nvar BoundHotkeysProxyProvider = /*#__PURE__*/createContext(undefined);\nvar useBoundHotkeysProxy = function useBoundHotkeysProxy() {\n  return useContext(BoundHotkeysProxyProvider);\n};\nfunction BoundHotkeysProxyProviderProvider(_ref) {\n  var addHotkey = _ref.addHotkey,\n    removeHotkey = _ref.removeHotkey,\n    children = _ref.children;\n  return /*#__PURE__*/jsx(BoundHotkeysProxyProvider.Provider, {\n    value: {\n      addHotkey: addHotkey,\n      removeHotkey: removeHotkey\n    },\n    children: children\n  });\n}\n\nfunction deepEqual(x, y) {\n  //@ts-ignore\n  return x && y && typeof x === 'object' && typeof y === 'object'\n  //@ts-ignore\n  ? Object.keys(x).length === Object.keys(y).length && Object.keys(x).reduce(function (isEqual, key) {\n    return isEqual && deepEqual(x[key], y[key]);\n  }, true) : x === y;\n}\n\nvar HotkeysContext = /*#__PURE__*/createContext({\n  hotkeys: [],\n  enabledScopes: [],\n  toggleScope: function toggleScope() {},\n  enableScope: function enableScope() {},\n  disableScope: function disableScope() {}\n});\nvar useHotkeysContext = function useHotkeysContext() {\n  return useContext(HotkeysContext);\n};\nvar HotkeysProvider = function HotkeysProvider(_ref) {\n  var _ref$initiallyActiveS = _ref.initiallyActiveScopes,\n    initiallyActiveScopes = _ref$initiallyActiveS === void 0 ? ['*'] : _ref$initiallyActiveS,\n    children = _ref.children;\n  var _useState = useState((initiallyActiveScopes == null ? void 0 : initiallyActiveScopes.length) > 0 ? initiallyActiveScopes : ['*']),\n    internalActiveScopes = _useState[0],\n    setInternalActiveScopes = _useState[1];\n  var _useState2 = useState([]),\n    boundHotkeys = _useState2[0],\n    setBoundHotkeys = _useState2[1];\n  var enableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes('*')) {\n        return [scope];\n      }\n      return Array.from(new Set([].concat(prev, [scope])));\n    });\n  }, []);\n  var disableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.filter(function (s) {\n        return s !== scope;\n      }).length === 0) {\n        return ['*'];\n      } else {\n        return prev.filter(function (s) {\n          return s !== scope;\n        });\n      }\n    });\n  }, []);\n  var toggleScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes(scope)) {\n        if (prev.filter(function (s) {\n          return s !== scope;\n        }).length === 0) {\n          return ['*'];\n        } else {\n          return prev.filter(function (s) {\n            return s !== scope;\n          });\n        }\n      } else {\n        if (prev.includes('*')) {\n          return [scope];\n        }\n        return Array.from(new Set([].concat(prev, [scope])));\n      }\n    });\n  }, []);\n  var addBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return [].concat(prev, [hotkey]);\n    });\n  }, []);\n  var removeBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return prev.filter(function (h) {\n        return !deepEqual(h, hotkey);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/jsx(HotkeysContext.Provider, {\n    value: {\n      enabledScopes: internalActiveScopes,\n      hotkeys: boundHotkeys,\n      enableScope: enableScope,\n      disableScope: disableScope,\n      toggleScope: toggleScope\n    },\n    children: /*#__PURE__*/jsx(BoundHotkeysProxyProviderProvider, {\n      addHotkey: addBoundHotkey,\n      removeHotkey: removeBoundHotkey,\n      children: children\n    })\n  });\n};\n\nfunction useDeepEqualMemo(value) {\n  var ref = useRef(undefined);\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value;\n  }\n  return ref.current;\n}\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.stopImmediatePropagation();\n};\nvar useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nfunction useHotkeys(keys, callback, options, dependencies) {\n  var ref = useRef(null);\n  var hasTriggeredRef = useRef(false);\n  var _options = !(options instanceof Array) ? options : !(dependencies instanceof Array) ? dependencies : undefined;\n  var _deps = options instanceof Array ? options : dependencies instanceof Array ? dependencies : [];\n  var cb = useCallback(callback, [].concat(_deps));\n  var memoisedOptions = useDeepEqualMemo(_options);\n  var _useHotkeysContext = useHotkeysContext(),\n    enabledScopes = _useHotkeysContext.enabledScopes;\n  var proxy = useBoundHotkeysProxy();\n  useSafeLayoutEffect(function () {\n    if ((memoisedOptions == null ? void 0 : memoisedOptions.enabled) === false || !isScopeActive(enabledScopes, memoisedOptions == null ? void 0 : memoisedOptions.scopes)) {\n      return;\n    }\n    var listener = function listener(e, isKeyUp) {\n      var _e$target;\n      if (isKeyUp === void 0) {\n        isKeyUp = false;\n      }\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions == null ? void 0 : memoisedOptions.enableOnFormTags)) {\n        return;\n      }\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WON'T TRIGGER THE HOTKEY.\n      if (ref.current !== null && document.activeElement !== ref.current && !ref.current.contains(document.activeElement)) {\n        stopPropagation(e);\n        return;\n      }\n      if ((_e$target = e.target) != null && _e$target.isContentEditable && !(memoisedOptions != null && memoisedOptions.enableOnContentEditable)) {\n        return;\n      }\n      parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        var _hotkey$keys;\n        var hotkey = parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey);\n        if ((isHotkeyMatchingKeyboardEvent(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.ignoreModifiers) || (_hotkey$keys = hotkey.keys) != null && _hotkey$keys.includes('*')) && !hasTriggeredRef.current) {\n          maybePreventDefault(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.preventDefault);\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.enabled)) {\n            stopPropagation(e);\n            return;\n          }\n          // Execute the user callback for that hotkey\n          cb(e, hotkey);\n          if (!isKeyUp) {\n            hasTriggeredRef.current = true;\n          }\n        }\n      });\n    };\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys(mapKey(event.code));\n      if ((memoisedOptions == null ? void 0 : memoisedOptions.keydown) === undefined && (memoisedOptions == null ? void 0 : memoisedOptions.keyup) !== true || memoisedOptions != null && memoisedOptions.keydown) {\n        listener(event);\n      }\n    };\n    var handleKeyUp = function handleKeyUp(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys(mapKey(event.code));\n      hasTriggeredRef.current = false;\n      if (memoisedOptions != null && memoisedOptions.keyup) {\n        listener(event, true);\n      }\n    };\n    // @ts-ignore\n    (ref.current || (_options == null ? void 0 : _options.document) || document).addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    (ref.current || (_options == null ? void 0 : _options.document) || document).addEventListener('keydown', handleKeyDown);\n    if (proxy) {\n      parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        return proxy.addHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey));\n      });\n    }\n    return function () {\n      // @ts-ignore\n      (ref.current || (_options == null ? void 0 : _options.document) || document).removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      (ref.current || (_options == null ? void 0 : _options.document) || document).removeEventListener('keydown', handleKeyDown);\n      if (proxy) {\n        parseKeysHookInput(keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n          return proxy.removeHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey));\n        });\n      }\n    };\n  }, [keys, cb, memoisedOptions, enabledScopes]);\n  return ref;\n}\n\nfunction useRecordHotkeys() {\n  var _useState = useState(new Set()),\n    keys = _useState[0],\n    setKeys = _useState[1];\n  var _useState2 = useState(false),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var handler = useCallback(function (event) {\n    if (event.key === undefined) {\n      // Synthetic event (e.g., Chrome autofill).  Ignore.\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    setKeys(function (prev) {\n      var newKeys = new Set(prev);\n      newKeys.add(mapKey(event.code));\n      return newKeys;\n    });\n  }, []);\n  var stop = useCallback(function () {\n    if (typeof document !== 'undefined') {\n      document.removeEventListener('keydown', handler);\n      setIsRecording(false);\n    }\n  }, [handler]);\n  var start = useCallback(function () {\n    setKeys(new Set());\n    if (typeof document !== 'undefined') {\n      stop();\n      document.addEventListener('keydown', handler);\n      setIsRecording(true);\n    }\n  }, [handler, stop]);\n  return [keys, {\n    start: start,\n    stop: stop,\n    isRecording: isRecording\n  }];\n}\n\nexport { HotkeysProvider, isHotkeyPressed, useHotkeys, useHotkeysContext, useRecordHotkeys };\n//# sourceMappingURL=react-hotkeys-hook.esm.js.map\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}"],"names":["a","b","isArrayBufferView","obj","ArrayBuffer","isView","buffer","toUint8","bytes","Uint8Array","Array","isArray","byteOffset","byteLength","BigInt","Number","BYTE_TABLE","Uint16Array","bytesToNumber","_temp","_ref","_ref$signed","signed","_ref$le","le","fn","number","prototype","call","total","byte","i","exponent","Math","abs","length","max","numberToBytes","_temp2","_ref2$le","_ref2","byteCount","ceil","countBits","toString","byteIndex","bytesToString","slice","string","String","fromCharCode","apply","decodeURIComponent","escape","e","stringToBytes","stringIsBytes","unescape","encodeURIComponent","view","charCodeAt","concatTypedArrays","_len","arguments","buffers","_key","filter","totalLen","reduce","buf","tempBuffer","offset","forEach","set","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","every","bByte","regexs","mp4","webm","ogg","video","audio","text","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","replace","orig","profile","avcLevel","parseCodecs","codecString","codecs","split","result","codecType","trim","name","match","exec","toLowerCase","type","substring","details","push","mediaType","codecsFromDefault","master","audioGroupId","mediaGroups","AUDIO","audioGroup","audioType","default","playlists","attributes","CODECS","isAudioCodec","test","getMimeForCodec","map","c","container","browserSupportsCodec","MediaSource","global_window__WEBPACK_IMPORTED_MODULE_0___default","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","DESCRIPTORS","normalizePath","path","byte_helpers","qX","parseDescriptors","Ki","results","tag","size","headerSize","z","_DESCRIPTORS$z","id","parser","subarray","desc","flags","dependsOnEsId","ocrEsId","descriptors","url","len","d3","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","p","end","data","G3","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","value","tm","ebml_helpers_normalizePath","hL","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","concat","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","Infinity","nalStart","nalsFound","nalOffset","nalType","indexOf","CONSTANTS","_isLikely","aac","id3_helpers","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","Object","keys","t","isLikelyFn","detectContainerForBytes","isLikely","isLikelyFmp4MediaSegment","decodeB64ToUint8Array","b64Text","decodedString","atob","Buffer","from","array","ID3","_byte_helpers_js__WEBPACK_IMPORTED_MODULE_0__","getId3Size","returnSize","getId3Offset","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","DEFAULT_LOCATION","__webpack_exports__","baseUrl","relativeUrl","location","global_window__WEBPACK_IMPORTED_MODULE_1___default","href","nativeURL","URL","protocolLess","removeLocation","url_toolkit__WEBPACK_IMPORTED_MODULE_0___default","buildAbsoluteURL","newUrl","protocol","window","__webpack_require__","module","exports","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","contentTypeHeader","charset","headers","contentType","_contentType$split","decode","_extends","isFunction","createXHR","httpHandler","parseHeaders","row","index","key","initParams","uri","options","params","_createXHR","aborted","timeoutTimer","called","body","errorFunc","evt","clearTimeout","Error","failureResponse","loadFunc","status","useXDR","xhr","undefined","getBody","responseText","getXml","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","isJson","JSON","parse","method","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","isEmpty","beforeSend","send","forEachArray","iterator","toUpperCase","freeze","object","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","DOMParser","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","source","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","buildErrorHandler","errorImpl","isCallback","Function","build","msg","xml","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","getURI","getValue","getQName","attr","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","target","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","normalize","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","XMLSerializer","notEmptyString","input","orderedSetReducer","element","toOrderedSet","copy","src","dest","Class","Super","pt","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_removeNamedNode","lastIndex","Node","_xmlEncoder","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidityInDocument","parent","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","assertPreInsertionValidity1to5","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","defaultNS","prefixedNodeName","ai","nsi","pubid","sysid","sub","internalSubset","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","cloneNode","deep","node2","n","v","attrs2","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","count","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","get","$$length","getTextContent","amp","apos","gt","lt","quot","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","nameStartChar","nameChar","tagNamePattern","copyLocator","f","currentNSMap","localNSMap","nsp","nsPrefix","_copy","closed","ElementAttributes","attributeNames","defaultNSMapCopy","entityReplacer","k","charAt","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","closeMap","tagStart","config","pop","endMatch","parseInstruction","parseDCC","matchs","lastMatch","endDTD","parseElementStartPart","addAttribute","qname","startIndex","addValue","attrName","s","setTagName","fixSelfClosed","elStartEnd","pos","lastIndexOf","locator2","parseHtmlSpecialContent","elEndStart","getLocalName","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","curByte","revLookup","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","output","lookup","num","base64","ieee754","customInspectSymbol","Symbol","createBuffer","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","fromString","encoding","isEncoding","actual","write","fromArrayView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","SharedArrayBuffer","valueOf","fromObject","isBuffer","checked","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","out","hexSliceLookupTable","utf8Slice","asciiSlice","ret","min","latin1Slice","utf16leSlice","res","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","codePoints","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","lW","h2","TYPED_ARRAY_SUPPORT","typedArraySupport","proto","foo","enumerable","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","x","y","swap16","swap32","swap64","toLocaleString","equals","inspect","str","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","remaining","hexWrite","strLen","parsed","blitBuffer","asciiToBytes","byteArray","utf16leToBytes","units","hi","toJSON","_arr","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","base64clean","dst","alphabet","table","i16","doccy","topLevel","g","minDoc","document","win","self","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","isNaN","floor","log","LN2","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","search","foundNamedKey","codes","aliases","isEventKey","event","nameOrCode","title","alias","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","LineStream","_Stream","_this","inheritsLoose","Z","nextNewline","parseByterange","byterangeString","parseAttributes","ParseStream","customParsers","tagMappers","line","_this2","acc","mapper","mappedLine","newLine","tagType","duration","parseFloat","playlistType","esm_extends","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","addParser","_this3","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","Parser","lineStream","parseStream","currentMap","assertThisInitialized","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","decode_b64_to_uint8_array","iv","playlist","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","custom","identifier","missing","chunk","forEachMediaGroup","groups","groupKey","labelKey","isObject","merge","objects","values","o","range","flatten","lists","findIndex","matchingFunction","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","resolvedUri","resolve_url","ranges","rangeStr","startRange","window_default","endRange","MAX_SAFE_INTEGER","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","now","periodStartWC","periodEndWC","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","time","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","reference","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","union","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","_ref4","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","positionManifestOnTimeline","_ref5","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","mergedPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","_attributes","bandwidth","SUBTITLES","formatVttPlaylist","_m3u8Attributes","m3u8Attributes","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","formatted","firstLabel","formatVideoPlaylist","_attributes2","videoOnly","audioOnly","vttOnly","_ref6","addMediaSequenceValues","_ref7","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","_ref8","_mediaGroups","dashPlaylists","locations","_ref8$sidxMapping","previousManifest","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","captionServices","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","_ref9","subs","cc","svcObj","svc","service","channel","aspectRatio","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","textContent","parseDuration","durationRegex","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parseDate","dateRegex","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","mpdAttributes","mpdBaseUrls","periods","priorPeriod","representationInfo","period","periodBaseUrls","periodAttributes","adaptationSets","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","_value$split","_values","_value$split2","_value$split2$","opts","opt","_opt$split","contentProtectionNodes","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrls","representationSegmentInfo","stringToMpdXml","manifestString","lib","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","getUint64","DataView","referenceId","getUint32","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","sampleRate","timestamp","ONE_SECOND_IN_TS","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","timelineStartPts","keepOriginalTimestamps","dv","getBigUint64","MAX_UINT32","assign","bind","reservedModifierKeywords","mappedKeys","esc","mapKey","parseKeysHookInput","splitKey","parseHotkey","hotkey","combinationKey","toLocaleLowerCase","alt","meta","mod","currentlyPressedKeys","Set","isHotkeyPressed","hotkeyArray","has","pushToCurrentlyPressedKeys","add","removeFromCurrentlyPressedKeys","clear","isHotkeyEnabledOnTag","enabledOnTags","targetTagName","some","addEventListener","isHotkeyMatchingKeyboardEvent","ignoreModifiers","pressedKeyUppercase","altKey","shiftKey","metaKey","ctrlKey","pressedKey","BoundHotkeysProxyProvider","react__WEBPACK_IMPORTED_MODULE_0__","createContext","HotkeysContext","hotkeys","enabledScopes","toggleScope","enableScope","disableScope","stopPropagation","preventDefault","stopImmediatePropagation","useSafeLayoutEffect","useLayoutEffect","useEffect","useHotkeys","dependencies","ref","useRef","hasTriggeredRef","cb","useCallback","memoisedOptions","deepEqual","isEqual","_useHotkeysContext","useContext","proxy","enabled","activeScopes","scopes","scope","isKeyUp","_e$target","isKeyboardEventTriggeredByInput","enableOnFormTags","activeElement","contains","isContentEditable","enableOnContentEditable","_hotkey$keys","handleKeyDown","keydown","keyup","handleKeyUp","addHotkey","removeEventListener","removeHotkey","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","reverse","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","h","Settings","parseOptions","keyValueDelim","groupDelim","kv","Errors","BadSignature","BadTimeStamp","dflt","defaultKey","integer","percent","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","rootDiv","tagStack","nextToken","annotation","classes","cl","bgColor","colorName","propName","propValue","style","className","innerHTML","strongRTLRanges","StyleBox","CueStyleBox","cue","styleOptions","cueDiv","styles","color","backgroundColor","left","right","top","bottom","display","writingMode","vertical","unicodeBidi","applyStyles","div","direction","determineBidi","nodeStack","pushNodes","nextTextNode","innerText","isStrongRTLChar","currentRange","textAlign","align","font","whiteSpace","textPos","positionAlign","formatStyle","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","lineHeight","unit","axis","toMove","overlaps","b2","overlapsAny","boxes","within","overlapsOppositeAxis","intersectPercentage","intersectArea","toCSSCompatValues","getSimpleBoxPosition","StringDecoder","convertCueToDOMTree","cuetext","processCues","cues","overlay","paddedOverlay","margin","shouldCompute","hasBeenReset","displayState","boxPositions","containerBox","fontSize","round","styleBox","moveBoxToLinePosition","boxPosition","linePos","computeLinePos","snapToLines","track","textTrackList","mediaElement","trackList","mode","step","maxPosition","initialAxis","calculatedPercentage","lineAlign","bestPosition","findBestPosition","specifiedPosition","percentage","decoder","state","regionList","reportOrThrowError","onparsingerror","collectNextLine","stream","alreadyCollectedLine","settings","ontimestampmap","parseRegion","xy","anchor","region","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseCue","oInput","consumeTimeStamp","skipWhitespace","startTime","endTime","consumeCueSettings","vals","vals0","center","middle","hasSubstring","oncue","flush","onflush","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","setting","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","_construct","Parent","_isNativeReflectConstruct_js__WEBPACK_IMPORTED_MODULE_0__","Reflect","construct","instance","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__","_inheritsLoose","subClass","superClass","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__"],"sourceRoot":""}