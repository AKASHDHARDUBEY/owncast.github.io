{"version":3,"file":"static/chunks/1873.6641e61c90d598d7.js","mappings":"kJAAA,IAAAA,EAAA,4BACAC,EAAA,wCAEAC,EAAA,SAAAC,CAAA,CAAAC,CAAA,EACA,KAAAC,IAAA,CAAAF,EACA,KAAAC,MAAA,CAAAA,CACA,EAEAE,EAAA,SAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,KAAAF,IAAA,CAAAA,EACA,KAAAC,OAAA,CAAAA,EACA,KAAAC,GAAA,CAAAA,CACA,EAEAC,EAAA,WACA,KAAAF,OAAA,KAAAN,EAAAG,EAAA,MACA,KAAAM,cAAA,IACA,KAAAC,WAAA,GACA,KAAAC,oBAAA,EACA,CAEAH,CAAAA,EAAAI,SAAA,CAAAC,UAAA,UAAAH,CAAA,CAAAI,CAAA,EACA,KAAAH,oBAAA,CAAAD,EAAA,EAAAA,EAAAI,EAAA,KAAAJ,WAAA,IAGA,IAAAP,EAAA,SAAAY,CAAA,CAAAT,CAAA,CAAAU,CAAA,EACA,IAAAC,EAAA,IAAAb,EAAA,KAAAE,EAAA,IACAY,EAAAH,EAAAZ,IAAA,GAwDA,MAtDAe,MAAAA,EACAD,EAAAE,EAAAJ,EAAA,IAAAf,EAAAmB,EAAAb,IAEIY,MAAAA,EACJD,EAAAG,EAAAL,EAAA,IAAAf,EAAAoB,EAAAd,IAEIY,MAAAA,EACJH,MAAAA,EAAAM,IAAA,IACAN,EAAAZ,IAAA,GACAc,EAAAK,EAAAP,EAAA,IAAAf,EAAAsB,EAAAhB,KAEAS,EAAAQ,QAAA,mBACAN,EAAAZ,IAAA,kBAEAY,EAAAZ,IAAA,QAGIa,MAAAA,GACJ,MAAAH,EAAAZ,IAAA,KACAY,EAAAQ,QAAA,WACAR,EAAAZ,IAAA,IAEAc,EAAAZ,IAAA,mBAEIa,MAAAA,GAAAF,EAAAP,cAAA,CACJQ,EAAAX,OAAA,KAAAN,EAAAwB,EAAAlB,GAEI,aAAiBmB,IAAA,CAAAP,IACrBD,EAAAZ,IAAA,WACAY,EAAAV,GAAA,UAAqBkB,IAAA,CAAAP,GAErBA,MAAAA,EACAF,EAAAN,WAAA,GACM,MAAAQ,GACNF,CAAAA,EAAAN,WAAA,CAAAgB,KAAAC,GAAA,GAAAX,EAAAN,WAAA,MAGIZ,EAAA2B,IAAA,CAAAP,IACJH,EAAAQ,QAAA,CAAAzB,GACAmB,EAAAZ,IAAA,YACAY,EAAAV,GAAA,CAAAW,MAAAA,GAEI,KAAAO,IAAA,CAAAP,IACJH,EAAAQ,QAAA,WACAN,EAAAZ,IAAA,WAEI,QAAAoB,IAAA,CAAAP,IACJH,EAAAQ,QAAA,YACAN,EAAAZ,IAAA,CAAAW,EAAAP,cAAA,CAAAV,EAAA0B,IAAA,CAAAV,EAAAa,OAAA,+BAGAX,EAAAV,GAAA,CAAAS,EAAAP,cAAA,CAGAQ,CACA,EAEAE,EAAA,SAAAJ,CAAA,CAAAT,CAAA,EAEA,OADAS,EAAAQ,QAAA,SACA,IAAAnB,EAAA,UAAAW,EAAAc,GAAA,MAAAvB,EAAAJ,MAAA,CAAAI,CAAA,IACA,EAEAc,EAAA,SAAAL,CAAA,CAAAT,CAAA,EAEA,OADAS,EAAAQ,QAAA,SACA,IAAAnB,EAAA,SAAAW,EAAAc,GAAA,MAAAvB,EAAAJ,MAAA,CAAAI,CAAA,IACA,EAEAgB,EAAA,SAAAP,CAAA,CAAAT,CAAA,EAEA,OADAS,EAAAQ,QAAA,SACA,IAAAnB,EAAA,iBAAAW,EAAAc,GAAA,MAAAvB,EAAAJ,MAAA,CAAAI,CAAA,IACA,EAEAkB,EAAA,SAAAT,CAAA,CAAAT,CAAA,EACA,IAAAW,EAAA,IAAAb,EAAA,KAAAE,EAAA,IAYA,MATAY,MAFAH,EAAAZ,IAAA,IAGAc,EAAAX,OAAA,CAAAA,EAAAJ,MAAA,CACAe,EAAAV,GAAA,MAGAQ,EAAAQ,QAAA,SACAN,EAAAZ,IAAA,aAGAY,CACA,EAEO,IAAAa,EAAA,CACPzB,KAAA,YAEA0B,WAAA,WACA,WAAAvB,CACA,EAEAS,MAAA,SAAAF,CAAA,CAAAC,CAAA,EAGA,GAFAA,EAAAH,UAAA,CAAAE,EAAAL,WAAA,GAAAK,EAAAD,UAAA,EAEAC,EAAAiB,QAAA,GACA,YAGA,IAAAf,EAAAD,EAAAV,OAAA,CAAAH,IAAA,CAAAY,EAAAC,EAAAV,OAAA,CAAAU,GAIA,OAHAA,EAAAV,OAAA,CAAAW,EAAAX,OAAA,CACAU,EAAAP,cAAA,CAAAQ,EAAAV,GAAA,CAEAU,EAAAZ,IAAA,EAGA4B,UAAA,SAAAjB,CAAA,CAAAF,CAAA,EACAE,EAAAH,UAAA,GAAAC,EACA,EAEAoB,OAAA,SAAAlB,CAAA,CAAAmB,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAArB,EAAAV,OAAA,CAAAH,IAAA,GAAAA,GAAAgC,GAAAA,MAAAA,EAAAG,MAAA,OAAAtB,EAAAL,oBAAA,CACA,OAAAK,EAAAN,WAAA,CAAA2B,CAAAA,EAAAD,EAAAG,IAAA,EAGAC,aAAA,CACAC,cAAA,SACA,CACA","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/smalltalk.js","webpack://_N_E/<anon>"],"sourcesContent":["var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\nvar keywords = /true|false|nil|self|super|thisContext/;\n\nvar Context = function(tokenizer, parent) {\n  this.next = tokenizer;\n  this.parent = parent;\n};\n\nvar Token = function(name, context, eos) {\n  this.name = name;\n  this.context = context;\n  this.eos = eos;\n};\n\nvar State = function() {\n  this.context = new Context(next, null);\n  this.expectVariable = true;\n  this.indentation = 0;\n  this.userIndentationDelta = 0;\n};\n\nState.prototype.userIndent = function(indentation, indentUnit) {\n  this.userIndentationDelta = indentation > 0 ? (indentation / indentUnit - this.indentation) : 0;\n};\n\nvar next = function(stream, context, state) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '\"') {\n    token = nextComment(stream, new Context(nextComment, context));\n\n  } else if (aChar === '\\'') {\n    token = nextString(stream, new Context(nextString, context));\n\n  } else if (aChar === '#') {\n    if (stream.peek() === '\\'') {\n      stream.next();\n      token = nextSymbol(stream, new Context(nextSymbol, context));\n    } else {\n      if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n        token.name = 'string.special';\n      else\n        token.name = 'meta';\n    }\n\n  } else if (aChar === '$') {\n    if (stream.next() === '<') {\n      stream.eatWhile(/[^\\s>]/);\n      stream.next();\n    }\n    token.name = 'string.special';\n\n  } else if (aChar === '|' && state.expectVariable) {\n    token.context = new Context(nextTemporaries, context);\n\n  } else if (/[\\[\\]{}()]/.test(aChar)) {\n    token.name = 'bracket';\n    token.eos = /[\\[{(]/.test(aChar);\n\n    if (aChar === '[') {\n      state.indentation++;\n    } else if (aChar === ']') {\n      state.indentation = Math.max(0, state.indentation - 1);\n    }\n\n  } else if (specialChars.test(aChar)) {\n    stream.eatWhile(specialChars);\n    token.name = 'operator';\n    token.eos = aChar !== ';'; // ; cascaded message expression\n\n  } else if (/\\d/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d]/);\n    token.name = 'number';\n\n  } else if (/[\\w_]/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d_]/);\n    token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n  } else {\n    token.eos = state.expectVariable;\n  }\n\n  return token;\n};\n\nvar nextComment = function(stream, context) {\n  stream.eatWhile(/[^\"]/);\n  return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n};\n\nvar nextString = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextSymbol = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string.special', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextTemporaries = function(stream, context) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '|') {\n    token.context = context.parent;\n    token.eos = true;\n\n  } else {\n    stream.eatWhile(/[^|]/);\n    token.name = 'variable';\n  }\n\n  return token;\n};\n\nexport const smalltalk = {\n  name: \"smalltalk\",\n\n  startState: function() {\n    return new State;\n  },\n\n  token: function(stream, state) {\n    state.userIndent(stream.indentation(), stream.indentUnit);\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var token = state.context.next(stream, state.context, state);\n    state.context = token.context;\n    state.expectVariable = token.eos;\n\n    return token.name;\n  },\n\n  blankLine: function(state, indentUnit) {\n    state.userIndent(0, indentUnit);\n  },\n\n  indent: function(state, textAfter, cx) {\n    var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n    return (state.indentation + i) * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*\\]$/\n  }\n}\n"],"names":["specialChars","keywords","Context","tokenizer","parent","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","smalltalk","startState","eatSpace","blankLine","indent","textAfter","cx","i","charAt","unit","languageData","indentOnInput"],"sourceRoot":""}