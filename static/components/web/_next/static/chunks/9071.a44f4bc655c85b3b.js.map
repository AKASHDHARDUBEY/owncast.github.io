{"version":3,"file":"static/chunks/9071.a44f4bc655c85b3b.js","mappings":"mJAAO,IAAAA,EAAA,CACPC,KAAA,aAEAC,MAAA,SAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAF,EAAAE,GAAA,IAAAD,EAAAE,YAAA,CACAC,EAAAJ,EAAAI,GAAA,GAkBA,GAhBAH,EAAAE,YAAA,IAEAD,IACAD,EAAAI,aAAA,EACAJ,EAAAK,WAAA,IACAL,EAAAI,aAAA,KAEAJ,EAAAM,QAAA,QAIAH,GAAA,CAAAH,EAAAI,aAAA,GACAJ,EAAAK,WAAA,IACAL,EAAAM,QAAA,QAGAL,EACA,KAAAF,EAAAQ,QAAA,KACA,IAEAC,EAAAT,EAAAU,IAAA,UAEA,GAAAD,CAAAA,MAAAA,GAAAA,MAAAA,GAAAA,MAAAA,CAAqD,GACrDR,EAAAM,QAAA,WACAP,EAAAW,SAAA,GACA,WACMT,GAAAO,MAAAA,GACNR,EAAAE,YAAA,IACAH,EAAAY,MAAA,MAA0BZ,EAAAa,GAAA,MAC1B,UACMJ,MAAAA,GAAAA,MAAAA,GACNR,EAAAM,QAAA,SACA,OACM,OAAAE,GAAAR,UAAAA,EAAAM,QAAA,EACNP,EAAAI,GAAA,IAEAH,CAAAA,EAAAI,aAAA,KAIAJ,EAAAM,QAAA,CAFA,EAKAO,WAAA,WACA,OACAP,SAAA,MACAF,cAAA,GACAC,YAAA,GACAH,aAAA,EACA,CACA,CAEA","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/properties.js","webpack://_N_E/<anon>"],"sourcesContent":["export const properties = {\n  name: \"properties\",\n\n  token: function(stream, state) {\n    var sol = stream.sol() || state.afterSection;\n    var eol = stream.eol();\n\n    state.afterSection = false;\n\n    if (sol) {\n      if (state.nextMultiline) {\n        state.inMultiline = true;\n        state.nextMultiline = false;\n      } else {\n        state.position = \"def\";\n      }\n    }\n\n    if (eol && ! state.nextMultiline) {\n      state.inMultiline = false;\n      state.position = \"def\";\n    }\n\n    if (sol) {\n      while(stream.eatSpace()) {}\n    }\n\n    var ch = stream.next();\n\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n      state.position = \"comment\";\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (sol && ch === \"[\") {\n      state.afterSection = true;\n      stream.skipTo(\"]\"); stream.eat(\"]\");\n      return \"header\";\n    } else if (ch === \"=\" || ch === \":\") {\n      state.position = \"quote\";\n      return null;\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\n      if (stream.eol()) {  // end of line?\n        // Multiline value\n        state.nextMultiline = true;\n      }\n    }\n\n    return state.position;\n  },\n\n  startState: function() {\n    return {\n      position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n      nextMultiline : false,  // Is the next line multiline value\n      inMultiline : false,    // Is the current line a multiline value\n      afterSection : false    // Did we just open a section\n    };\n  }\n\n};\n"],"names":["properties","name","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipToEnd","skipTo","eat","startState"],"sourceRoot":""}