{"version":3,"file":"static/chunks/6443.94c41747a1e3b316.js","mappings":"6IAAO,IAAAA,EAAA,CACPC,KAAA,OACAC,WAAA,WACA,OACAC,SAAA,GACAC,WAAA,GACAC,IAAA,GACAC,QAAA,CACA,CACA,EACAC,MAAA,SAAAC,CAAA,CAAAC,CAAA,EAWA,GATAA,EAAAN,QAAA,OAAAK,EAAAE,IAAA,IAAAF,KAAAA,EAAAE,IAAA,KACAD,EAAAL,UAAA,CAAAI,EAAAE,IAAA,GACAF,EAAAG,IAAA,GACAF,EAAAN,QAAA,KAEAK,EAAAI,GAAA,IAAAH,IAAAA,EAAAH,OAAA,EACAG,CAAAA,EAAAJ,GAAA,KAGAI,EAAAN,QAAA,EACA,KAAAM,EAAAN,QAAA,GAAAK,EAAAK,GAAA,IACAL,EAAAE,IAAA,KAAAD,EAAAL,UAAA,EACAI,EAAAG,IAAA,GACAF,EAAAN,QAAA,KACUK,OAAAA,EAAAE,IAAA,IACVF,EAAAG,IAAA,GACAH,EAAAG,IAAA,IAEAH,EAAAM,KAAA,iBAGA,OAAAL,EAAAJ,GAAA,qBAiCA,GAhCMI,EAAAH,OAAA,EAAAE,MAAAA,EAAAE,IAAA,GAGN,OAFAF,EAAAG,IAAA,GACAF,EAAAH,OAAA,GACA,SA6BA,CA5BM,GAAAG,EAAAJ,GAAA,EAAAG,MAAAA,EAAAE,IAAA,IAAAF,EAAAO,MAAA,MAIN,OAHAP,EAAAG,IAAA,GAEA,MAAAH,EAAAE,IAAA,IAAAF,EAAAG,IAAA,GACA,MAwBA,CAvBM,GAAAH,MAAAA,EAAAE,IAAA,GAEN,OADAF,EAAAQ,SAAA,GACA,SAqBA,CApBM,GAAAR,EAAAS,QAAA,SAEA,GAAAR,EAAAJ,GAAA,EAAAG,EAAAU,QAAA,UAAAC,CAAA,EAAqD,MAAAA,KAAAA,GAAAA,KAAAA,CAAA,GAC3D,sBACM,GAAAV,EAAAJ,GAAA,EAAAG,MAAAA,EAAAE,IAAA,GACNF,EAAAG,IAAA,GACAF,EAAAJ,GAAA,SAEM,IAAAI,EAAAJ,GAAA,EAAAG,EAAAM,KAAA,4BAEA,CAAAL,EAAAJ,GAAA,EAAAG,CAAAA,EAAAM,KAAA,UAAAN,EAAAM,KAAA,WADN,YAWA,CARM,IAAAL,EAAAJ,GAAA,EAAAG,MAAAA,EAAAE,IAAA,GAGN,OAFAD,EAAAH,OAAA,GACAE,EAAAG,IAAA,GACA,SAKA,CAJM,IAAAF,EAAAJ,GAAA,EAAAG,EAAAM,KAAA,sBACN,cAGA,CAFMN,EAAAS,QAAA,IACNT,EAAAG,IAAA,GACA,OACA,MAEAS,aAAA,CACAC,cAAA,CAAqBC,KAAA,IACrB,CACA","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/toml.js","webpack://_N_E/<anon>"],"sourcesContent":["export const toml = {\n  name: \"toml\",\n  startState: function () {\n    return {\n      inString: false,\n      stringType: \"\",\n      lhs: true,\n      inArray: 0\n    };\n  },\n  token: function (stream, state) {\n    //check for state changes\n    if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n      state.stringType = stream.peek();\n      stream.next(); // Skip quote\n      state.inString = true; // Update state\n    }\n    if (stream.sol() && state.inArray === 0) {\n      state.lhs = true;\n    }\n    //return state\n    if (state.inString) {\n      while (state.inString && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.inString = false; // Clear flag\n        } else if (stream.peek() === '\\\\') {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n    } else if (state.inArray && stream.peek() === ']') {\n      stream.next();\n      state.inArray--;\n      return 'bracket';\n    } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n      stream.next();//skip closing ]\n      // array of objects has an extra open & close []\n      if (stream.peek() === ']') stream.next();\n      return \"atom\";\n    } else if (stream.peek() === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n      return \"property\";\n    } else if (state.lhs && stream.peek() === \"=\") {\n      stream.next();\n      state.lhs = false;\n      return null;\n    } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n      return 'atom'; //date\n    } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n      return 'atom';\n    } else if (!state.lhs && stream.peek() === '[') {\n      state.inArray++;\n      stream.next();\n      return 'bracket';\n    } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n      return 'number';\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  },\n  languageData: {\n    commentTokens: { line: '#' },\n  },\n};\n"],"names":["toml","name","startState","inString","stringType","lhs","inArray","token","stream","state","peek","next","sol","eol","match","skipTo","skipToEnd","eatSpace","eatWhile","c","languageData","commentTokens","line"],"sourceRoot":""}