{"version":3,"file":"static/chunks/6960-00abd2ba0e8c2ca0.js","mappings":"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","sources":["webpack://_N_E/./components/admin/FormStatusIndicator.tsx","webpack://_N_E/./components/admin/TextField.tsx","webpack://_N_E/./components/admin/TextFieldWithSubmit.tsx","webpack://_N_E/./components/admin/ComposeFederatedPost.tsx","webpack://_N_E/./components/admin/MainLayout.tsx","webpack://_N_E/./components/layouts/AdminLayout.tsx","webpack://_N_E/./utils/alert-message-context.tsx","webpack://_N_E/./utils/config-constants.tsx","webpack://_N_E/./utils/format.ts","webpack://_N_E/./utils/input-statuses.tsx","webpack://_N_E/./utils/server-status-context.tsx","webpack://_N_E/./utils/urls.ts","webpack://_N_E/<anon>"],"sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { StatusState } from '../../utils/input-statuses';\n\nexport type FormStatusIndicatorProps = {\n  status: StatusState;\n};\n\nexport const FormStatusIndicator: FC<FormStatusIndicatorProps> = ({ status }) => {\n  const { type, icon, message } = status || {};\n  const classes = classNames({\n    'status-container': true,\n    [`status-${type}`]: type,\n    empty: !message,\n  });\n  return (\n    <span className={classes}>\n      {icon ? <span className=\"status-icon\">{icon}</span> : null}\n      {message ? <span className=\"status-message\">{message}</span> : null}\n    </span>\n  );\n};\nexport default FormStatusIndicator;\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Input, InputNumber } from 'antd';\nimport { FieldUpdaterFunc } from '../../types/config-section';\n// import InfoTip from '../info-tip';\nimport { StatusState } from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nexport const TEXTFIELD_TYPE_TEXT = 'default';\nexport const TEXTFIELD_TYPE_PASSWORD = 'password'; // Input.Password\nexport const TEXTFIELD_TYPE_NUMBER = 'numeric'; // InputNumber\nexport const TEXTFIELD_TYPE_TEXTAREA = 'textarea'; // Input.TextArea\nexport const TEXTFIELD_TYPE_URL = 'url';\n\nexport type TextFieldProps = {\n  fieldName: string;\n\n  onSubmit?: () => void;\n  onPressEnter?: () => void;\n\n  className?: string;\n  disabled?: boolean;\n  label?: string;\n  maxLength?: number;\n  pattern?: string;\n  placeholder?: string;\n  required?: boolean;\n  status?: StatusState;\n  tip?: string;\n  type?: string;\n  useTrim?: boolean;\n  useTrimLead?: boolean;\n  value?: string | number;\n  onBlur?: FieldUpdaterFunc;\n  onChange?: FieldUpdaterFunc;\n};\n\nexport const TextField: FC<TextFieldProps> = ({\n  className,\n  disabled,\n  fieldName,\n  label,\n  maxLength,\n  onBlur,\n  onChange,\n  onPressEnter,\n  pattern,\n  placeholder,\n  required,\n  status,\n  tip,\n  type,\n  useTrim,\n  value,\n}) => {\n  const handleChange = (e: any) => {\n    // if an extra onChange handler was sent in as a prop, let's run that too.\n    if (onChange) {\n      const val = type === TEXTFIELD_TYPE_NUMBER ? e : e.target.value;\n      onChange({ fieldName, value: useTrim ? val.trim() : val });\n    }\n  };\n\n  // if you blur a required field with an empty value, restore its original value in state (parent's state), if an onChange from parent is available.\n  const handleBlur = (e: any) => {\n    const val = e.target.value;\n    if (onBlur) {\n      onBlur({ value: val });\n    }\n  };\n\n  const handlePressEnter = () => {\n    if (onPressEnter) {\n      onPressEnter();\n    }\n  };\n\n  // display the appropriate Ant text field\n  let Field = Input as\n    | typeof Input\n    | typeof InputNumber\n    | typeof Input.TextArea\n    | typeof Input.Password;\n  let fieldProps = {};\n  if (type === TEXTFIELD_TYPE_TEXTAREA) {\n    Field = Input.TextArea;\n    fieldProps = {\n      autoSize: true,\n    };\n  } else if (type === TEXTFIELD_TYPE_PASSWORD) {\n    Field = Input.Password;\n    fieldProps = {\n      visibilityToggle: true,\n    };\n  } else if (type === TEXTFIELD_TYPE_NUMBER) {\n    Field = InputNumber;\n    fieldProps = {\n      type: 'number',\n      min: 1,\n      max: 10 ** maxLength - 1,\n    };\n  } else if (type === TEXTFIELD_TYPE_URL) {\n    fieldProps = {\n      type: 'url',\n      pattern,\n    };\n  }\n\n  const fieldId = `field-${fieldName}`;\n\n  const { type: statusType } = status || {};\n\n  const containerClass = classNames({\n    'formfield-container': true,\n    'textfield-container': true,\n    [`type-${type}`]: true,\n    required,\n    [`status-${statusType}`]: status,\n  });\n\n  return (\n    <div className={containerClass}>\n      {label ? (\n        <div className=\"label-side\">\n          <label htmlFor={fieldId} className=\"formfield-label\">\n            {label}\n          </label>\n        </div>\n      ) : null}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Field\n            id={fieldId}\n            className={`field ${className} ${fieldId}`}\n            {...fieldProps}\n            {...(type !== TEXTFIELD_TYPE_NUMBER && { allowClear: true })}\n            placeholder={placeholder}\n            maxLength={maxLength}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            onPressEnter={handlePressEnter}\n            disabled={disabled}\n            value={value as number | (readonly string[] & number)}\n          />\n        </div>\n        <FormStatusIndicator status={status} />\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default TextField;\n\nTextField.defaultProps = {\n  className: '',\n  disabled: false,\n  label: '',\n  maxLength: 255,\n\n  placeholder: '',\n  required: false,\n  status: null,\n  tip: '',\n  type: TEXTFIELD_TYPE_TEXT,\n  value: '',\n\n  pattern: '',\n  useTrim: false,\n  useTrimLead: false,\n\n  onSubmit: () => {},\n  onBlur: () => {},\n  onChange: () => {},\n  onPressEnter: () => {},\n};\n","import { Button } from 'antd';\nimport classNames from 'classnames';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { UpdateArgs } from '../../types/config-section';\nimport { postConfigUpdateToAPI, RESET_TIMEOUT } from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { FormStatusIndicator } from './FormStatusIndicator';\nimport { TextField, TextFieldProps } from './TextField';\n\nexport const TEXTFIELD_TYPE_TEXT = 'default';\nexport const TEXTFIELD_TYPE_PASSWORD = 'password'; // Input.Password\nexport const TEXTFIELD_TYPE_NUMBER = 'numeric';\nexport const TEXTFIELD_TYPE_TEXTAREA = 'textarea';\nexport const TEXTFIELD_TYPE_URL = 'url';\n\nexport type TextFieldWithSubmitProps = TextFieldProps & {\n  apiPath: string;\n  configPath?: string;\n  initialValue?: string;\n};\n\nexport const TextFieldWithSubmit: FC<TextFieldWithSubmitProps> = ({\n  apiPath,\n  configPath = '',\n  initialValue,\n  useTrim,\n  useTrimLead,\n  ...textFieldProps // rest of props\n}) => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState } = serverStatusData || {};\n\n  let resetTimer = null;\n\n  const { fieldName, required, tip, status, value, onChange, onSubmit } = textFieldProps;\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  useEffect(() => {\n    // TODO: Add native validity checks here, somehow\n    // https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n    // const hasValidity = (type !== TEXTFIELD_TYPE_NUMBER && e.target.validity.valid) || type === TEXTFIELD_TYPE_NUMBER ;\n    if ((required && (value === '' || value === null)) || value === initialValue) {\n      setHasChanged(false);\n    } else {\n      // show submit button\n      resetStates();\n      setHasChanged(true);\n    }\n  }, [value]);\n\n  // if field is required but value is empty, or equals initial value, then don't show submit/update button. otherwise clear out any result messaging and display button.\n  const handleChange = ({ fieldName: changedFieldName, value: changedValue }: UpdateArgs) => {\n    if (onChange) {\n      let newValue: string = changedValue;\n      if (useTrim) {\n        newValue = changedValue.trim();\n      } else if (useTrimLead) {\n        newValue = changedValue.replace(/^\\s+/g, '');\n      }\n      onChange({\n        fieldName: changedFieldName,\n        value: newValue,\n      });\n    }\n  };\n\n  // if you blur a required field with an empty value, restore its original value in state (parent's state), if an onChange from parent is available.\n  const handleBlur = ({ value: changedValue }: UpdateArgs) => {\n    if (onChange && required && changedValue === '') {\n      onChange({ fieldName, value: initialValue });\n    }\n  };\n\n  // how to get current value of input\n  const handleSubmit = async () => {\n    if ((required && value !== '') || value !== initialValue) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName, value, path: configPath });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n        },\n        onError: (message: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n\n      // if an extra onSubmit handler was sent in as a prop, let's run that too.\n      if (onSubmit) {\n        onSubmit();\n      }\n    }\n  };\n\n  const textfieldContainerClass = classNames({\n    'textfield-with-submit-container': true,\n    submittable: hasChanged,\n  });\n  return (\n    <div className={textfieldContainerClass}>\n      <div className=\"textfield-component\">\n        <TextField\n          {...textFieldProps}\n          onSubmit={null}\n          onBlur={handleBlur}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"formfield-container lower-container\">\n        <p className=\"label-spacer\" />\n        <div className=\"lower-content\">\n          <div className=\"field-tip\">{tip}</div>\n          <FormStatusIndicator status={status || submitStatus} />\n          <div className=\"update-button-container\">\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              className=\"submit-button\"\n              onClick={handleSubmit}\n              disabled={!hasChanged}\n            >\n              Update\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTextFieldWithSubmit.defaultProps = {\n  configPath: '',\n  initialValue: '',\n};\n","import React, { FC, useState } from 'react';\n\nimport { Button, Input, Modal } from 'antd';\nimport { STATUS_ERROR, STATUS_SUCCESS } from '../../utils/input-statuses';\nimport { fetchData, FEDERATION_MESSAGE_SEND } from '../../utils/apis';\n\nconst { TextArea } = Input;\n\nexport type ComposeFederatedPostProps = {\n  open: boolean;\n  handleClose: () => void;\n};\n\nexport const ComposeFederatedPost: FC<ComposeFederatedPostProps> = ({ open, handleClose }) => {\n  const [content, setContent] = useState('');\n  const [postPending, setPostPending] = useState(false);\n  const [postSuccessState, setPostSuccessState] = useState(null);\n\n  function handleEditorChange(e) {\n    setContent(e.target.value);\n  }\n\n  function close() {\n    setPostPending(false);\n    setPostSuccessState(null);\n    handleClose();\n  }\n\n  async function sendButtonClicked() {\n    setPostPending(true);\n\n    const data = {\n      value: content,\n    };\n    try {\n      await fetchData(FEDERATION_MESSAGE_SEND, {\n        data,\n        method: 'POST',\n        auth: true,\n      });\n      setPostSuccessState(STATUS_SUCCESS);\n      setTimeout(close, 1000);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n      setPostSuccessState(STATUS_ERROR);\n    }\n    setPostPending(false);\n  }\n\n  return (\n    <Modal\n      destroyOnClose\n      width={600}\n      title=\"Post to Followers\"\n      open={open}\n      onCancel={handleClose}\n      footer={[\n        <Button onClick={() => handleClose()}>Cancel</Button>,\n        <Button\n          type=\"primary\"\n          onClick={sendButtonClicked}\n          disabled={postPending || postSuccessState}\n          loading={postPending}\n        >\n          {postSuccessState?.toUpperCase() || 'Post'}\n        </Button>,\n      ]}\n    >\n      <h3>\n        Tell the world about your future streaming plans or let your followers know to tune in.\n      </h3>\n      <TextArea\n        placeholder=\"I'm still live, come join me!\"\n        size=\"large\"\n        showCount\n        maxLength={500}\n        style={{ height: '150px', width: '100%' }}\n        onChange={handleEditorChange}\n      />\n    </Modal>\n  );\n};\n","import React, { FC, ReactNode, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { differenceInSeconds } from 'date-fns';\nimport { useRouter } from 'next/router';\nimport { Layout, Menu, Alert, Button, Space, Tooltip } from 'antd';\n\nimport classNames from 'classnames';\nimport dynamic from 'next/dynamic';\nimport { upgradeVersionAvailable } from '../../utils/apis';\nimport { parseSecondsToDurationString } from '../../utils/format';\n\nimport { OwncastLogo } from '../common/OwncastLogo/OwncastLogo';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { AlertMessageContext } from '../../utils/alert-message-context';\n\nimport { TextFieldWithSubmit } from './TextFieldWithSubmit';\nimport { TEXTFIELD_PROPS_STREAM_TITLE } from '../../utils/config-constants';\nimport { ComposeFederatedPost } from './ComposeFederatedPost';\nimport { UpdateArgs } from '../../types/config-section';\n\n// Lazy loaded components\n\nconst SettingOutlined = dynamic(() => import('@ant-design/icons/SettingOutlined'), {\n  ssr: false,\n}); // Lazy loaded components\n\nconst HomeOutlined = dynamic(() => import('@ant-design/icons/HomeOutlined'), {\n  ssr: false,\n});\n\nconst LineChartOutlined = dynamic(() => import('@ant-design/icons/LineChartOutlined'), {\n  ssr: false,\n});\n\nconst ToolOutlined = dynamic(() => import('@ant-design/icons/ToolOutlined'), {\n  ssr: false,\n});\n\nconst PlayCircleFilled = dynamic(() => import('@ant-design/icons/PlayCircleFilled'), {\n  ssr: false,\n});\n\nconst MinusSquareFilled = dynamic(() => import('@ant-design/icons/MinusSquareFilled'), {\n  ssr: false,\n});\n\nconst QuestionCircleOutlined = dynamic(() => import('@ant-design/icons/QuestionCircleOutlined'), {\n  ssr: false,\n});\n\nconst MessageOutlined = dynamic(() => import('@ant-design/icons/MessageOutlined'), {\n  ssr: false,\n});\n\nconst ExperimentOutlined = dynamic(() => import('@ant-design/icons/ExperimentOutlined'), {\n  ssr: false,\n});\n\nconst EditOutlined = dynamic(() => import('@ant-design/icons/EditOutlined'), {\n  ssr: false,\n});\n\nexport type MainLayoutProps = {\n  children: ReactNode;\n};\n\nexport const MainLayout: FC<MainLayoutProps> = ({ children }) => {\n  const context = useContext(ServerStatusContext);\n  const { serverConfig, online, broadcaster, versionNumber } = context || {};\n  const { instanceDetails, chatDisabled, federation } = serverConfig;\n  const { enabled: federationEnabled } = federation;\n\n  const [currentStreamTitle, setCurrentStreamTitle] = useState('');\n  const [postModalDisplayed, setPostModalDisplayed] = useState(false);\n\n  const alertMessage = useContext(AlertMessageContext);\n\n  const router = useRouter();\n  const { route } = router || {};\n\n  const { Header, Footer, Content, Sider } = Layout;\n\n  const [upgradeVersion, setUpgradeVersion] = useState('');\n  const checkForUpgrade = async () => {\n    try {\n      const result = await upgradeVersionAvailable(versionNumber);\n      setUpgradeVersion(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    checkForUpgrade();\n  }, [versionNumber]);\n\n  useEffect(() => {\n    setCurrentStreamTitle(instanceDetails.streamTitle);\n  }, [instanceDetails]);\n\n  const handleStreamTitleChanged = ({ value }: UpdateArgs) => {\n    setCurrentStreamTitle(value);\n  };\n\n  const handleCreatePostButtonPressed = () => {\n    setPostModalDisplayed(true);\n  };\n\n  const appClass = classNames({\n    'app-container': true,\n    online,\n  });\n\n  const upgradeVersionString = `${upgradeVersion}` || '';\n  const upgradeMessage = `Upgrade to v${upgradeVersionString}`;\n  const openMenuItems = upgradeVersion ? ['utilities-menu'] : [];\n\n  const clearAlertMessage = () => {\n    alertMessage.setMessage(null);\n  };\n\n  const headerAlertMessage = alertMessage.message ? (\n    <Alert message={alertMessage.message} afterClose={clearAlertMessage} banner closable />\n  ) : null;\n\n  // status indicator items\n  const streamDurationString = broadcaster\n    ? parseSecondsToDurationString(differenceInSeconds(new Date(), new Date(broadcaster.time)))\n    : '';\n\n  const statusIcon = online ? <PlayCircleFilled /> : <MinusSquareFilled />;\n  const statusMessage = online ? `Online ${streamDurationString}` : 'Offline';\n\n  const statusIndicator = (\n    <div className=\"online-status-indicator\">\n      <span className=\"status-label\">{statusMessage}</span>\n      <span className=\"status-icon\">{statusIcon}</span>\n    </div>\n  );\n\n  const integrationsMenu = [\n    {\n      label: <Link href=\"/admin/webhooks\">Webhooks</Link>,\n      key: 'webhooks',\n    },\n    {\n      label: <Link href=\"/admin/access-tokens\">Access Tokens</Link>,\n      key: 'access-tokens',\n    },\n    {\n      label: <Link href=\"/admin/actions\">External Actions</Link>,\n      key: 'actions',\n    },\n  ];\n\n  const chatMenu = [\n    {\n      label: <Link href=\"/admin/chat/messages\">Messages</Link>,\n      key: 'messages',\n    },\n    {\n      label: <Link href=\"/admin/chat/users\">Users</Link>,\n      key: 'chat-users',\n    },\n    {\n      label: <Link href=\"/admin/chat/emojis\">Emojis</Link>,\n      key: 'emojis',\n    },\n  ];\n\n  const utilitiesMenu = [\n    {\n      label: <Link href=\"/admin/hardware-info\">Hardware</Link>,\n      key: 'hardware-info',\n    },\n    {\n      label: <Link href=\"/admin/stream-health\">Stream Health</Link>,\n      key: 'stream-health',\n    },\n    {\n      label: <Link href=\"/admin/logs\">Logs</Link>,\n      key: 'logs',\n    },\n    federationEnabled && {\n      label: <Link href=\"/admin/federation/actions\">Social Actions</Link>,\n      key: 'federation-activities',\n    },\n  ];\n\n  const configurationMenu = [\n    {\n      label: <Link href=\"/admin/config/general\">General</Link>,\n      key: 'config-public-details',\n    },\n    {\n      label: <Link href=\"/admin/config/server\">Server Setup</Link>,\n      key: 'config-server',\n    },\n    {\n      label: <Link href=\"/admin/config-video\">Video</Link>,\n      key: 'config-video',\n    },\n    {\n      label: <Link href=\"/admin/config-chat\">Chat</Link>,\n      key: 'config-chat',\n    },\n    {\n      label: <Link href=\"/admin/config-federation\">Social</Link>,\n      key: 'config-federation',\n    },\n    {\n      label: <Link href=\"/admin/config-notify\">Notifications</Link>,\n      key: 'config-notify',\n    },\n  ];\n\n  const menuItems = [\n    { label: <Link href=\"/admin\">Home</Link>, icon: <HomeOutlined />, key: 'home' },\n    {\n      label: <Link href=\"/admin/viewer-info\">Viewers</Link>,\n      icon: <LineChartOutlined />,\n      key: 'viewer-info',\n    },\n    !chatDisabled && {\n      label: <Link href=\"/admin/viewer-info\">Chat &amp; Users</Link>,\n      icon: <MessageOutlined />,\n      children: chatMenu,\n      key: 'chat-and-users',\n    },\n    federationEnabled && {\n      key: 'fediverse-followers',\n      label: <Link href=\"/admin/federation/followers\">Followers</Link>,\n      icon: (\n        <img\n          alt=\"fediverse icon\"\n          src=\"/img/fediverse-black.png\"\n          width=\"17rem\"\n          style={{ opacity: 0.6, position: 'relative', top: '-1px' }}\n        />\n      ),\n    },\n    {\n      key: 'configuration',\n      label: 'Configuration',\n      icon: <SettingOutlined />,\n      children: configurationMenu,\n    },\n    {\n      key: 'utilities',\n      label: 'Utilities',\n      icon: <ToolOutlined />,\n      children: utilitiesMenu,\n    },\n    {\n      key: 'integrations',\n      label: 'Integrations',\n      icon: <ExperimentOutlined />,\n      children: integrationsMenu,\n    },\n    upgradeVersion && {\n      key: 'upgrade',\n      label: <Link href=\"/admin/upgrade\">{upgradeMessage}</Link>,\n    },\n    {\n      key: 'help',\n      label: <Link href=\"/admin/help\">Help</Link>,\n      icon: <QuestionCircleOutlined />,\n    },\n  ];\n  return (\n    <Layout className={appClass}>\n      <Head>\n        <title>Owncast Admin</title>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/img/favicon/favicon-32x32.png\" />\n      </Head>\n\n      <Sider width={240} className=\"side-nav\">\n        <h1 className=\"owncast-title\">\n          <span className=\"logo-container\">\n            <OwncastLogo variant=\"simple\" />\n          </span>\n          <span className=\"title-label\">Owncast Admin</span>\n        </h1>\n        <Menu\n          defaultSelectedKeys={[route.substring(1) || 'home']}\n          defaultOpenKeys={openMenuItems}\n          mode=\"inline\"\n          className=\"menu-container\"\n          items={menuItems}\n        />\n      </Sider>\n\n      <Layout className=\"layout-main\">\n        <Header className=\"layout-header\">\n          <Space direction=\"horizontal\">\n            <Tooltip title=\"Compose post to your social followers\">\n              <Button\n                type=\"link\"\n                icon={<EditOutlined />}\n                size=\"small\"\n                onClick={handleCreatePostButtonPressed}\n                style={{ display: federationEnabled ? 'block' : 'none', margin: '10px' }}\n              >\n                Compose Post\n              </Button>\n            </Tooltip>\n          </Space>\n          <div className=\"global-stream-title-container\">\n            <TextFieldWithSubmit\n              fieldName=\"streamTitle\"\n              {...TEXTFIELD_PROPS_STREAM_TITLE}\n              placeholder=\"What are you streaming now? (Stream title)\"\n              value={currentStreamTitle}\n              initialValue={instanceDetails.streamTitle}\n              onChange={handleStreamTitleChanged}\n            />\n          </div>\n          <Space direction=\"horizontal\">{statusIndicator}</Space>\n        </Header>\n\n        {headerAlertMessage}\n\n        <Content className=\"main-content-container\">{children}</Content>\n\n        <Footer className=\"footer-container\">\n          <a href=\"https://owncast.online/?source=admin\" target=\"_blank\" rel=\"noopener noreferrer\">\n            About Owncast v{versionNumber}\n          </a>\n        </Footer>\n      </Layout>\n\n      <ComposeFederatedPost\n        open={postModalDisplayed}\n        handleClose={() => setPostModalDisplayed(false)}\n      />\n    </Layout>\n  );\n};\n\nMainLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","/* eslint-disable @next/next/no-css-tags */\nimport { FC, ReactElement } from 'react';\nimport ServerStatusProvider from '../../utils/server-status-context';\nimport AlertMessageProvider from '../../utils/alert-message-context';\nimport { MainLayout } from '../admin/MainLayout';\n\n/*\nNOTE: A bunch of compiled css is loaded here for the Admin UI.\nThese are old stylesheets that were converted from sass and should not be\nedited or maintained. Instead we are using css modules everywhere. So if you\nneed to change a style rewrite the css file as a css module and import it\ninto the component that needs it, removing it from this global list.\n*/\n\ntype AdminLayoutProps = {\n  page: ReactElement;\n};\n\nexport const AdminLayout: FC<AdminLayoutProps> = ({ page }) => (\n  <>\n    <link rel=\"stylesheet\" href=\"/styles/admin/main-layout.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/form-textfields.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/config-socialhandles.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/config-storage.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/config-edit-string-tags.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/config-video-variants.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/config-public-details.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/home.css\" />\n    <link rel=\"stylesheet\" href=\"/styles/admin/chat.css\" />\n\n    <ServerStatusProvider>\n      <AlertMessageProvider>\n        <MainLayout>{page}</MainLayout>\n      </AlertMessageProvider>\n    </ServerStatusProvider>\n  </>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AlertMessageContext = React.createContext({\n  message: null,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setMessage: (text?: string) => null,\n});\n\nconst AlertMessageProvider = ({ children }) => {\n  const [message, setMessage] = useState('');\n\n  const providerValue = {\n    message,\n    setMessage,\n  };\n  return (\n    <AlertMessageContext.Provider value={providerValue}>{children}</AlertMessageContext.Provider>\n  );\n};\n\nAlertMessageProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default AlertMessageProvider;\n","// DEFAULT VALUES\nimport { fetchData, SERVER_CONFIG_UPDATE_URL } from './apis';\nimport { ApiPostArgs, VideoVariant, SocialHandle } from '../types/config-section';\nimport { TEXTFIELD_TYPE_URL } from '../components/admin/TextField';\nimport { DEFAULT_TEXTFIELD_URL_PATTERN } from './urls';\n\nexport const TEXT_MAXLENGTH = 255;\n\nexport const RESET_TIMEOUT = 3000;\n\n// CONFIG API ENDPOINTS\nexport const API_CUSTOM_CONTENT = '/pagecontent';\nexport const API_CUSTOM_CSS_STYLES = '/customstyles';\nexport const API_CUSTOM_JAVASCRIPT = '/customjavascript';\nexport const API_FFMPEG = '/ffmpegpath';\nexport const API_INSTANCE_URL = '/serverurl';\nexport const API_LOGO = '/logo';\nexport const API_NSFW_SWITCH = '/nsfw';\nexport const API_RTMP_PORT = '/rtmpserverport';\nexport const API_S3_INFO = '/s3';\nexport const API_SERVER_SUMMARY = '/serversummary';\nexport const API_SERVER_WELCOME_MESSAGE = '/welcomemessage';\nexport const API_SERVER_OFFLINE_MESSAGE = '/offlinemessage';\nexport const API_SERVER_NAME = '/name';\nexport const API_SOCIAL_HANDLES = '/socialhandles';\nexport const API_STREAM_KEY = '/key';\nexport const API_STREAM_TITLE = '/streamtitle';\nexport const API_TAGS = '/tags';\nexport const API_USERNAME = '/name';\nexport const API_VIDEO_SEGMENTS = '/video/streamlatencylevel';\nexport const API_VIDEO_VARIANTS = '/video/streamoutputvariants';\nexport const API_WEB_PORT = '/webserverport';\nexport const API_YP_SWITCH = '/directoryenabled';\nexport const API_HIDE_VIEWER_COUNT = '/hideviewercount';\nexport const API_CHAT_DISABLE = '/chat/disable';\nexport const API_CHAT_JOIN_MESSAGES_ENABLED = '/chat/joinmessagesenabled';\nexport const API_CHAT_ESTABLISHED_MODE = '/chat/establishedusermode';\nexport const API_CHAT_FORBIDDEN_USERNAMES = '/chat/forbiddenusernames';\nexport const API_CHAT_SUGGESTED_USERNAMES = '/chat/suggestedusernames';\nexport const API_EXTERNAL_ACTIONS = '/externalactions';\nexport const API_VIDEO_CODEC = '/video/codec';\nexport const API_SOCKET_HOST_OVERRIDE = '/sockethostoverride';\n\n// Federation\nexport const API_FEDERATION_ENABLED = '/federation/enable';\nexport const API_FEDERATION_PRIVATE = '/federation/private';\nexport const API_FEDERATION_USERNAME = '/federation/username';\nexport const API_FEDERATION_GOLIVE_MESSAGE = '/federation/livemessage';\nexport const API_FEDERATION_SHOW_ENGAGEMENT = '/federation/showengagement';\nexport const API_FEDERATION_BLOCKED_DOMAINS = '/federation/blockdomains';\n\nexport async function postConfigUpdateToAPI(args: ApiPostArgs) {\n  const { apiPath, data, onSuccess, onError } = args;\n  const result = await fetchData(`${SERVER_CONFIG_UPDATE_URL}${apiPath}`, {\n    data,\n    method: 'POST',\n    auth: true,\n  });\n  if (result.success && onSuccess) {\n    onSuccess(result.message);\n  } else if (onError) {\n    onError(result.message);\n  }\n}\n\n// Some default props to help build out a TextField\nexport const TEXTFIELD_PROPS_SERVER_NAME = {\n  apiPath: API_SERVER_NAME,\n  configPath: 'instanceDetails',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: 'Owncast site name', // like \"gothland\"\n  label: 'Name',\n  tip: 'The name of your Owncast server',\n  required: true,\n  useTrimLead: true,\n};\nexport const TEXTFIELD_PROPS_STREAM_TITLE = {\n  apiPath: API_STREAM_TITLE,\n  configPath: 'instanceDetails',\n  maxLength: 100,\n  placeholder: 'Doing cool things...',\n  label: 'Stream Title',\n  tip: 'What is your stream about today?',\n};\nexport const TEXTFIELD_PROPS_SERVER_SUMMARY = {\n  apiPath: API_SERVER_SUMMARY,\n  configPath: 'instanceDetails',\n  maxLength: 500,\n  placeholder: '',\n  label: 'About',\n  tip: 'A brief blurb about you, your server, or what your stream is about.',\n};\nexport const TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE = {\n  apiPath: API_SERVER_OFFLINE_MESSAGE,\n  configPath: 'instanceDetails',\n  maxLength: 2500,\n  placeholder: 'An optional message you can leave people when your stream is not live.',\n  label: 'Offline Message',\n  tip: 'An optional message you can leave people when your stream is not live.',\n};\nexport const TEXTFIELD_PROPS_SERVER_WELCOME_MESSAGE = {\n  apiPath: API_SERVER_WELCOME_MESSAGE,\n  configPath: 'instanceDetails',\n  maxLength: 2500,\n  placeholder: '',\n  label: 'Welcome Message',\n  tip: 'A system chat message sent to viewers when they first connect to chat. Leave blank to disable.',\n};\nexport const TEXTFIELD_PROPS_LOGO = {\n  apiPath: API_LOGO,\n  configPath: 'instanceDetails',\n  maxLength: 255,\n  placeholder: '/img/mylogo.png',\n  label: 'Logo',\n  tip: 'Upload your logo if you have one (max size 2 MB). We recommend that you use a square image that is at least 256x256. SVGs are discouraged as they cannot be displayed on all social media platforms.',\n};\nexport const TEXTFIELD_PROPS_ADMIN_PASSWORD = {\n  apiPath: API_STREAM_KEY,\n  configPath: '',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: 'abc123',\n  label: 'Admin Password',\n  tip: 'Save this password somewhere safe, you will need it to login to the admin dashboard!',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_FFMPEG = {\n  apiPath: API_FFMPEG,\n  configPath: '',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: '/usr/local/bin/ffmpeg',\n  label: 'FFmpeg Path',\n  tip: 'Absolute file path of the FFMPEG application on your server',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_WEB_PORT = {\n  apiPath: API_WEB_PORT,\n  configPath: '',\n  maxLength: 6,\n  placeholder: '8080',\n  label: 'Owncast port',\n  tip: 'What port is your Owncast web server listening? Default is 8080',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_RTMP_PORT = {\n  apiPath: API_RTMP_PORT,\n  configPath: '',\n  maxLength: 6,\n  placeholder: '1935',\n  label: 'RTMP port',\n  tip: 'What port should accept inbound broadcasts? Default is 1935',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_INSTANCE_URL = {\n  apiPath: API_INSTANCE_URL,\n  configPath: 'yp',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Server URL',\n  tip: 'The full url to your Owncast server.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\nexport const TEXTFIELD_PROPS_SOCKET_HOST_OVERRIDE = {\n  apiPath: API_SOCKET_HOST_OVERRIDE,\n  configPath: '',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Websocket host override',\n  tip: 'The direct URL of your Owncast server.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\n// MISC FIELDS\nexport const FIELD_PROPS_TAGS = {\n  apiPath: API_TAGS,\n  configPath: 'instanceDetails',\n  maxLength: 24,\n  placeholder: 'Add a new tag',\n  required: true,\n  label: '',\n  tip: '',\n};\n\nexport const FIELD_PROPS_NSFW = {\n  apiPath: API_NSFW_SWITCH,\n  configPath: 'instanceDetails',\n  label: 'NSFW?',\n  tip: \"Turn this ON if you plan to steam explicit or adult content. Please respectfully set this flag so unexpected eyes won't accidentally see it in the Directory.\",\n};\n\nexport const FIELD_PROPS_YP = {\n  apiPath: API_YP_SWITCH,\n  configPath: 'yp',\n  label: 'Enable directory',\n  tip: 'Turn this ON to request to show up in the directory.',\n};\n\nexport const FIELD_PROPS_HIDE_VIEWER_COUNT = {\n  apiPath: API_HIDE_VIEWER_COUNT,\n  configPath: '',\n  label: 'Hide viewer count',\n  tip: 'Turn this ON to hide the viewer count the web page.',\n};\n\nexport const DEFAULT_VARIANT_STATE: VideoVariant = {\n  framerate: 24,\n  videoPassthrough: false,\n  videoBitrate: 800,\n  audioPassthrough: true, // if false, then CAN set audiobitrate\n  audioBitrate: 0,\n  cpuUsageLevel: 3,\n  scaledHeight: null,\n  scaledWidth: null,\n  name: '',\n};\n\nexport const FIELD_PROPS_DISABLE_CHAT = {\n  apiPath: API_CHAT_DISABLE,\n  configPath: '',\n  label: 'Chat',\n  tip: 'Turn the chat functionality on/off on your Owncast server.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_CHAT_JOIN_MESSAGES_ENABLED = {\n  apiPath: API_CHAT_JOIN_MESSAGES_ENABLED,\n  configPath: '',\n  label: 'Join Messages',\n  tip: 'Show when a viewer joins the chat.',\n  useSubmit: true,\n};\n\nexport const CHAT_ESTABLISHED_USER_MODE = {\n  apiPath: API_CHAT_ESTABLISHED_MODE,\n  configPath: '',\n  label: 'Established users only',\n  tip: 'Only users who have previously been established for some time may chat.',\n  useSubmit: true,\n};\n\nexport const TEXTFIELD_PROPS_CHAT_FORBIDDEN_USERNAMES = {\n  apiPath: API_CHAT_FORBIDDEN_USERNAMES,\n  placeholder: 'username',\n  label: 'Forbidden usernames',\n  tip: 'A list of words in chat usernames you disallow.',\n};\n\nexport const TEXTFIELD_PROPS_CHAT_SUGGESTED_USERNAMES = {\n  apiPath: API_CHAT_SUGGESTED_USERNAMES,\n  placeholder: 'username',\n  label: 'Default usernames',\n  tip: 'An optional list of chat usernames that new users get assigned. If the list holds less then 10 items, random names will be generated.  Users can change their usernames afterwards and the same username may be given out multple times.',\n  min_not_reached: 'At least 10 items are required for this feature.',\n  no_entries: 'The default name generator is used.',\n};\n\nexport const FIELD_PROPS_ENABLE_FEDERATION = {\n  apiPath: API_FEDERATION_ENABLED,\n  configPath: 'federation',\n  label: 'Enable Social Features',\n  tip: 'Send and receive activities on the Fediverse.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_FEDERATION_IS_PRIVATE = {\n  apiPath: API_FEDERATION_PRIVATE,\n  configPath: 'federation',\n  label: 'Private',\n  tip: 'Follow requests will require approval and only followers will see your activity.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_SHOW_FEDERATION_ENGAGEMENT = {\n  apiPath: API_FEDERATION_SHOW_ENGAGEMENT,\n  configPath: 'showEngagement',\n  label: 'Show engagement',\n  tip: 'Following, liking and sharing will appear in the chat feed.',\n  useSubmit: true,\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_LIVE_MESSAGE = {\n  apiPath: API_FEDERATION_GOLIVE_MESSAGE,\n  configPath: 'federation',\n  maxLength: 500,\n  placeholder: 'My stream has started, tune in!',\n  label: 'Now Live message',\n  tip: 'The message sent announcing that your live stream has begun. Tags will be automatically added. Leave blank to disable.',\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_DEFAULT_USER = {\n  apiPath: API_FEDERATION_USERNAME,\n  configPath: 'federation',\n  maxLength: 10,\n  placeholder: 'owncast',\n  default: 'owncast',\n  label: 'Username',\n  tip: 'The username used for sending and receiving activities from the Fediverse. For example, if you use \"bob\" as a username you would send messages to the fediverse from @bob@yourserver. Once people start following your instance you should not change this.',\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_INSTANCE_URL = {\n  apiPath: API_INSTANCE_URL,\n  configPath: 'yp',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Server URL',\n  tip: 'The full url to your Owncast server is required to enable social features. Must use SSL (https). Once people start following your instance you should not change this.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\nexport const FIELD_PROPS_FEDERATION_NSFW = {\n  apiPath: API_NSFW_SWITCH,\n  configPath: 'instanceDetails',\n  label: 'Potentially NSFW',\n  tip: 'Turn this ON if you plan to steam explicit or adult content so previews of your stream can be marked as potentially sensitive.',\n};\n\nexport const FIELD_PROPS_FEDERATION_BLOCKED_DOMAINS = {\n  apiPath: API_FEDERATION_BLOCKED_DOMAINS,\n  configPath: 'federation',\n  label: 'Blocked domains',\n  placeholder: 'bad.domain.biz',\n  tip: 'You can block specific domains from interacting with you.',\n};\n\nexport const VIDEO_VARIANT_SETTING_DEFAULTS = {\n  // this one is currently unused\n  audioBitrate: {\n    min: 600,\n    max: 1200,\n    defaultValue: 800,\n    unit: 'kbps',\n    incrementBy: 100,\n    tip: 'nothing to see here',\n  },\n  videoPassthrough: {\n    tip: 'If enabled, all other settings will be disabled. Otherwise configure as desired.',\n  },\n  audioPassthrough: {\n    tip: 'If No is selected, then you should set your desired Audio Bitrate.',\n  },\n  scaledWidth: {\n    fieldName: 'scaledWidth',\n    label: 'Resized Width',\n    maxLength: 4,\n    placeholder: '1080',\n    tip: \"Optionally resize this content's width.\",\n  },\n  scaledHeight: {\n    fieldName: 'scaledHeight',\n    label: 'Resized Height',\n    maxLength: 4,\n    placeholder: '720',\n    tip: \"Optionally resize this content's height.\",\n  },\n};\n\n// VIDEO VARIANT FORM - framerate\nexport const FRAMERATE_DEFAULTS = {\n  min: 24,\n  max: 120,\n  defaultValue: 24,\n  unit: 'fps',\n  incrementBy: null,\n  tip: 'Reducing your framerate will decrease the amount of video that needs to be encoded and sent to your viewers, saving CPU and bandwidth at the expense of smoothness.  A lower value is generally is fine for most content.',\n};\nexport const FRAMERATE_SLIDER_MARKS = {\n  [FRAMERATE_DEFAULTS.min]: `${FRAMERATE_DEFAULTS.min} ${FRAMERATE_DEFAULTS.unit}`,\n  25: ' ',\n  30: ' ',\n  50: ' ',\n  60: ' ',\n  90: ' ',\n  [FRAMERATE_DEFAULTS.max]: `${FRAMERATE_DEFAULTS.max} ${FRAMERATE_DEFAULTS.unit}`,\n};\nexport const FRAMERATE_TOOLTIPS = {\n  [FRAMERATE_DEFAULTS.min]: `${FRAMERATE_DEFAULTS.min}fps - Good for film, presentations, music, low power/bandwidth servers.`,\n  25: '25fps - Good for film, presentations, music, low power/bandwidth servers.',\n  30: '30fps - Good for slow/casual games, chat, general purpose.',\n  50: '50fps - Good for fast/action games, sports, HD video.',\n  60: '60fps - Good for fast/action games, sports, HD video.',\n  90: '90fps - Good for newer fast games and hardware.',\n  [FRAMERATE_DEFAULTS.max]: `${FRAMERATE_DEFAULTS.max}fps - Experimental, use at your own risk!`,\n};\n// VIDEO VARIANT FORM - bitrate\nexport const VIDEO_BITRATE_DEFAULTS = {\n  min: 400,\n  max: 6000,\n  defaultValue: 1200,\n  unit: 'kbps',\n  incrementBy: 100,\n  tip: 'The overall quality of your stream is generally impacted most by bitrate.',\n};\n\nexport const VIDEO_NAME_DEFAULTS = {\n  fieldName: 'name',\n  label: 'Name',\n  maxLength: 15,\n  placeholder: 'HD or Low',\n  tip: 'Human-readable name for for displaying in the player.',\n};\n\nexport const VIDEO_BITRATE_SLIDER_MARKS = {\n  [VIDEO_BITRATE_DEFAULTS.min]: {\n    style: {\n      marginLeft: '24px',\n    },\n    label: `${VIDEO_BITRATE_DEFAULTS.min} ${VIDEO_BITRATE_DEFAULTS.unit}`,\n  },\n  3000: 3000,\n  4500: 4500,\n  [VIDEO_BITRATE_DEFAULTS.max]: {\n    style: {\n      marginLeft: '-10px',\n    },\n    label: `${VIDEO_BITRATE_DEFAULTS.max} ${VIDEO_BITRATE_DEFAULTS.unit}`,\n  },\n};\n// VIDEO VARIANT FORM - encoder preset\n// CPU\nexport const ENCODER_PRESET_SLIDER_MARKS = {\n  1: {\n    style: {\n      marginLeft: '15px',\n    },\n    label: <p>lowest</p>,\n  },\n  2: '',\n  3: '',\n  4: '',\n  5: {\n    style: {\n      marginLeft: '-15px',\n    },\n    label: <p>highest</p>,\n  },\n};\nexport const ENCODER_PRESET_TOOLTIPS = {\n  1: 'Lowest hardware usage - lowest quality video',\n  2: 'Low hardware usage - low quality video',\n  3: 'Medium hardware usage - average quality video',\n  4: 'High hardware usage - high quality video',\n  5: 'Highest hardware usage - higher quality video',\n};\n\nexport const ENCODER_RECOMMENDATION_THRESHOLD = {\n  VIDEO_HEIGHT: 1080,\n  VIDEO_BITRATE: 3000,\n  HELP_TEXT:\n    'You have only set one video quality variant. If your server has the computing resources, consider adding another, lower-quality variant, so more people can view your content!',\n};\n\nexport const DEFAULT_SOCIAL_HANDLE: SocialHandle = {\n  url: '',\n  platform: '',\n};\n\nexport const OTHER_SOCIAL_HANDLE_OPTION = 'OTHER_SOCIAL_HANDLE_OPTION';\n\nexport const TEXTFIELD_PROPS_S3_COMMON = {\n  maxLength: 255,\n};\n\nexport const S3_TEXT_FIELDS_INFO = {\n  accessKey: {\n    fieldName: 'accessKey',\n    label: 'Access Key',\n    maxLength: 255,\n    placeholder: 'access key 123',\n    tip: '',\n  },\n  acl: {\n    fieldName: 'acl',\n    label: 'ACL',\n    maxLength: 255,\n    placeholder: '',\n    tip: 'Optional specific access control value to add to your content.  Generally not required.',\n  },\n  bucket: {\n    fieldName: 'bucket',\n    label: 'Bucket',\n    maxLength: 255,\n    placeholder: 'bucket 123',\n    tip: 'Create a new bucket for each Owncast instance you may be running.',\n  },\n  endpoint: {\n    fieldName: 'endpoint',\n    label: 'Endpoint',\n    maxLength: 255,\n    placeholder: 'https://your.s3.provider.endpoint.com',\n    tip: 'The full URL (with \"https://\") endpoint from your storage provider.',\n    useTrim: true,\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  },\n  region: {\n    fieldName: 'region',\n    label: 'Region',\n    maxLength: 255,\n    placeholder: 'region 123',\n    tip: '',\n  },\n  secret: {\n    fieldName: 'secret',\n    label: 'Secret key',\n    maxLength: 255,\n    placeholder: 'your secret key',\n    tip: '',\n  },\n  servingEndpoint: {\n    fieldName: 'servingEndpoint',\n    label: 'Serving Endpoint',\n    maxLength: 255,\n    placeholder: 'http://cdn.ss3.provider.endpoint.com',\n    tip: 'Optional URL that content should be accessed from instead of the default.  Used with CDNs and specific storage providers. Generally not required.',\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n    useTrim: true,\n  },\n  forcePathStyle: {\n    fieldName: 'forcePathStyle',\n    label: 'Force path-style',\n    tip: \"If your S3 provider doesn't support virtual-hosted-style URLs set this to ON (i.e. Oracle Cloud Object Storage)\",\n  },\n};\n\nexport const DISCORD_CONFIG_FIELDS = {\n  webhookUrl: {\n    fieldName: 'webhook',\n    label: 'Webhook URL',\n    maxLength: 255,\n    placeholder: 'https://discord.com/api/webhooks/837/jf38-6iNEv',\n    tip: 'The webhook assigned to your channel.',\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n    useTrim: true,\n  },\n  goLiveMessage: {\n    fieldName: 'goLiveMessage',\n    label: 'Go Live Text',\n    maxLength: 300,\n    tip: 'The text to send when you go live.',\n    placeholder: `I've gone live! Come watch!`,\n  },\n};\n\nexport const BROWSER_PUSH_CONFIG_FIELDS = {\n  goLiveMessage: {\n    fieldName: 'goLiveMessage',\n    label: 'Go Live Text',\n    maxLength: 200,\n    tip: 'The text to send when you go live.',\n    placeholder: `I've gone live! Come watch!`,\n  },\n};\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n","import dynamic from 'next/dynamic';\n\n// Lazy loaded components\n\nconst CheckCircleFilled = dynamic(() => import('@ant-design/icons/CheckCircleFilled'), {\n  ssr: false,\n});\n\nconst ExclamationCircleFilled = dynamic(() => import('@ant-design/icons/ExclamationCircleFilled'), {\n  ssr: false,\n});\n\nconst LoadingOutlined = dynamic(() => import('@ant-design/icons/LoadingOutlined'), {\n  ssr: false,\n});\n\nconst WarningOutlined = dynamic(() => import('@ant-design/icons/WarningOutlined'), {\n  ssr: false,\n});\n\nexport const STATUS_RESET_TIMEOUT = 3000;\n\nexport const STATUS_ERROR = 'error';\nexport const STATUS_INVALID = 'invalid';\nexport const STATUS_PROCESSING = 'proessing';\nexport const STATUS_SUCCESS = 'success';\nexport const STATUS_WARNING = 'warning';\n\nexport type InputStatusTypes = 'error' | 'invalid' | 'proessing' | 'success' | 'warning';\n\nexport interface StatusState {\n  type: InputStatusTypes;\n  icon: any; // Element type of sorts?\n  message: string;\n}\ninterface InputStates {\n  [key: string]: StatusState;\n}\n\nexport const INPUT_STATES: InputStates = {\n  [STATUS_SUCCESS]: {\n    type: STATUS_SUCCESS,\n    icon: <CheckCircleFilled style={{ color: 'green' }} />,\n    message: 'Success!',\n  },\n  [STATUS_ERROR]: {\n    type: STATUS_ERROR,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_INVALID]: {\n    type: STATUS_INVALID,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_PROCESSING]: {\n    type: STATUS_PROCESSING,\n    icon: <LoadingOutlined />,\n    message: '',\n  },\n  [STATUS_WARNING]: {\n    type: STATUS_WARNING,\n    icon: <WarningOutlined style={{ color: '#fc0' }} />,\n    message: '',\n  },\n};\n\n// Don't like any of the default messages in INPUT_STATES? Create a state with custom message by providing an icon style with your message.\nexport function createInputStatus(type: InputStatusTypes, message?: string): StatusState {\n  if (!type || !INPUT_STATES[type]) {\n    return null;\n  }\n  if (!message) {\n    return INPUT_STATES[type];\n  }\n  return {\n    type,\n    icon: INPUT_STATES[type].icon,\n    message,\n  };\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    customJavascript: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n","// to use with <input type=\"url\"> fields, as the default pattern only checks for `:`,\nexport const DEFAULT_TEXTFIELD_URL_PATTERN = 'https?://.*';\n\n/**\n * Determines if a URL is valid\n * @param {string} url - A URL to validate.\n * @param {string[]} validProtocols - An array of valid protocols. Defaults to web.\n * @returns {boolean} - True if the URI is valid, false otherwise.\n */\nexport function isValidUrl(url: string, validProtocols: string[] = ['http:', 'https:']): boolean {\n  try {\n    const validationObject = new URL(url);\n\n    if (\n      validationObject.protocol === '' ||\n      validationObject.hostname === '' ||\n      !validProtocols.includes(validationObject.protocol)\n    ) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Determines if an account is valid by simply checking for a protocol, username\n * and server, delimited by a colon. For example: @username:example.com\n * @param {string} account - An account to validate.\n * @param {string} protocol - The protocol we expect the account to be using.\n * @returns {boolean} - True if the account is valid, false otherwise.\n */\nexport function isValidAccount(account: string, protocol: string): boolean {\n  if (account.startsWith('@')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(1);\n  }\n\n  const components = account.split(/:|@/);\n  const [service, user, host] = components;\n\n  console.log({ account, protocol, service, user, host });\n  if (service !== protocol) {\n    return false;\n  }\n\n  if (components.length !== 3 || !service || !user || !host) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Determines if an account is valid by simply checking for a protocol, username\n * and server, delimited by a colon. For example: @username:example.com\n * @param {string} account - An account to validate.\n * @returns {boolean} - True if the account is valid, false otherwise.\n */\nexport function isValidMatrixAccount(account: string): boolean {\n  if (account.startsWith('matrix:')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(7);\n  } else {\n    return false;\n  }\n\n  if (account.startsWith('@')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(1);\n  }\n\n  const components = account.split(':');\n  const [user, host] = components;\n\n  if (components.length !== 2 || !user || !host) {\n    return false;\n  }\n\n  return true;\n}\n"],"names":["FormStatusIndicator","status","param","type","icon","message","classes","classNames","concat","empty","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","span","className","jsx","__webpack_exports__","TEXTFIELD_TYPE_TEXT","TEXTFIELD_TYPE_PASSWORD","TEXTFIELD_TYPE_NUMBER","TEXTFIELD_TYPE_TEXTAREA","TEXTFIELD_TYPE_URL","TextField","disabled","fieldName","label","maxLength","onBlur","onChange","onPressEnter","pattern","placeholder","required","tip","useTrim","value","handleChange","val","e","target","trim","handleBlur","handlePressEnter","Field","Input","fieldProps","autoSize","visibilityToggle","InputNumber","min","max","fieldId","statusType","containerClass","div","htmlFor","id","allowClear","p","defaultProps","useTrimLead","onSubmit","TextFieldWithSubmit","apiPath","configPath","initialValue","textFieldProps","submitStatus","setSubmitStatus","useState","hasChanged","setHasChanged","serverStatusData","useContext","ServerStatusContext","setFieldInConfigState","resetTimer","resetStates","clearTimeout","useEffect","changedFieldName","changedValue","newValue","replace","handleSubmit","createInputStatus","STATUS_PROCESSING","postConfigUpdateToAPI","data","onSuccess","path","STATUS_SUCCESS","onError","STATUS_ERROR","setTimeout","RESET_TIMEOUT","textfieldContainerClass","submittable","Button","size","onClick","TextArea","ComposeFederatedPost","open","handleClose","content","setContent","postPending","setPostPending","postSuccessState","setPostSuccessState","close","sendButtonClicked","fetchData","FEDERATION_MESSAGE_SEND","method","auth","console","error","jsx_runtime","Modal","destroyOnClose","width","title","onCancel","footer","loading","toUpperCase","h3","showCount","style","height","SettingOutlined","dynamic","Promise","all","__webpack_require__","then","t","bind","ssr","HomeOutlined","LineChartOutlined","ToolOutlined","PlayCircleFilled","MinusSquareFilled","QuestionCircleOutlined","MessageOutlined","ExperimentOutlined","EditOutlined","MainLayout","children","context","serverConfig","online","broadcaster","versionNumber","instanceDetails","chatDisabled","federation","enabled","federationEnabled","currentStreamTitle","setCurrentStreamTitle","postModalDisplayed","setPostModalDisplayed","alertMessage","AlertMessageContext","router","useRouter","route","Header","Footer","Content","Sider","Layout","upgradeVersion","setUpgradeVersion","checkForUpgrade","result","upgradeVersionAvailable","log","streamTitle","handleStreamTitleChanged","handleCreatePostButtonPressed","appClass","clearAlertMessage","setMessage","headerAlertMessage","Alert","afterClose","banner","closable","streamDurationString","parseSecondsToDurationString","differenceInSeconds","Date","time","statusIcon","statusIndicator","integrationsMenu","Link","href","key","chatMenu","utilitiesMenu","configurationMenu","menuItems","img","alt","src","opacity","position","top","Head","link","rel","sizes","h1","OwncastLogo","variant","Menu","defaultSelectedKeys","substring","defaultOpenKeys","mode","items","Space","direction","Tooltip","display","margin","TEXTFIELD_PROPS_STREAM_TITLE","a","propTypes","PropTypes","AdminLayout","page","Fragment","ServerStatusProvider","AlertMessageProvider","React","Provider","API_CUSTOM_CONTENT","API_CUSTOM_CSS_STYLES","API_CUSTOM_JAVASCRIPT","API_INSTANCE_URL","API_NSFW_SWITCH","API_S3_INFO","API_SOCIAL_HANDLES","API_VIDEO_SEGMENTS","API_VIDEO_VARIANTS","API_YP_SWITCH","API_CHAT_FORBIDDEN_USERNAMES","API_CHAT_SUGGESTED_USERNAMES","API_EXTERNAL_ACTIONS","API_VIDEO_CODEC","API_FEDERATION_BLOCKED_DOMAINS","args","SERVER_CONFIG_UPDATE_URL","success","TEXTFIELD_PROPS_SERVER_NAME","TEXTFIELD_PROPS_SERVER_SUMMARY","TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE","TEXTFIELD_PROPS_SERVER_WELCOME_MESSAGE","TEXTFIELD_PROPS_LOGO","TEXTFIELD_PROPS_ADMIN_PASSWORD","TEXTFIELD_PROPS_FFMPEG","TEXTFIELD_PROPS_WEB_PORT","TEXTFIELD_PROPS_RTMP_PORT","TEXTFIELD_PROPS_INSTANCE_URL","DEFAULT_TEXTFIELD_URL_PATTERN","TEXTFIELD_PROPS_SOCKET_HOST_OVERRIDE","FIELD_PROPS_TAGS","FIELD_PROPS_NSFW","FIELD_PROPS_YP","FIELD_PROPS_HIDE_VIEWER_COUNT","DEFAULT_VARIANT_STATE","framerate","videoPassthrough","videoBitrate","audioPassthrough","audioBitrate","cpuUsageLevel","scaledHeight","scaledWidth","name","FIELD_PROPS_DISABLE_CHAT","useSubmit","FIELD_PROPS_CHAT_JOIN_MESSAGES_ENABLED","CHAT_ESTABLISHED_USER_MODE","TEXTFIELD_PROPS_CHAT_FORBIDDEN_USERNAMES","TEXTFIELD_PROPS_CHAT_SUGGESTED_USERNAMES","min_not_reached","no_entries","FIELD_PROPS_ENABLE_FEDERATION","FIELD_PROPS_FEDERATION_IS_PRIVATE","FIELD_PROPS_SHOW_FEDERATION_ENGAGEMENT","TEXTFIELD_PROPS_FEDERATION_LIVE_MESSAGE","TEXTFIELD_PROPS_FEDERATION_DEFAULT_USER","default","TEXTFIELD_PROPS_FEDERATION_INSTANCE_URL","FIELD_PROPS_FEDERATION_NSFW","FIELD_PROPS_FEDERATION_BLOCKED_DOMAINS","VIDEO_VARIANT_SETTING_DEFAULTS","defaultValue","unit","incrementBy","FRAMERATE_DEFAULTS","FRAMERATE_SLIDER_MARKS","FRAMERATE_TOOLTIPS","VIDEO_BITRATE_DEFAULTS","VIDEO_NAME_DEFAULTS","VIDEO_BITRATE_SLIDER_MARKS","marginLeft","ENCODER_PRESET_SLIDER_MARKS","ENCODER_PRESET_TOOLTIPS","ENCODER_RECOMMENDATION_THRESHOLD","VIDEO_HEIGHT","VIDEO_BITRATE","HELP_TEXT","DEFAULT_SOCIAL_HANDLE","url","platform","OTHER_SOCIAL_HANDLE_OPTION","S3_TEXT_FIELDS_INFO","accessKey","acl","bucket","endpoint","region","secret","servingEndpoint","forcePathStyle","DISCORD_CONFIG_FIELDS","webhookUrl","goLiveMessage","BROWSER_PUSH_CONFIG_FIELDS","formatIPAddress","ipAddress","ipAddressComponents","split","length","ip","join","slice","isEmptyObject","obj","Object","keys","constructor","padLeft","text","pad","String","repeat","seconds","finiteSeconds","Number","isFinite","Math","abs","days","floor","daysString","hours","hoursString","minString","secsString","formatUAstring","uaString","parser","UAParser","device","os","browser","major","browserVersion","version","osVersion","osName","model","deviceString","CheckCircleFilled","ExclamationCircleFilled","LoadingOutlined","WarningOutlined","STATUS_INVALID","STATUS_WARNING","INPUT_STATES","color","initialServerConfigState","streamKeys","adminPassword","customStyles","customJavascript","extraPageContent","logo","nsfw","socialHandles","summary","tags","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","yp","instanceUrl","videoSettings","latencyLevel","videoQualityVariants","isPrivate","username","showEngagement","blockedDomains","notifications","discord","webhook","externalActions","supportedCodecs","videoCodec","forbiddenUsernames","suggestedUsernames","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","currentBroadcast","viewerCount","sessionMaxViewerCount","sessionPeakViewerCount","overallPeakViewerCount","health","healthy","healthPercentage","representation","setStatus","config","setConfig","getStatus","STATUS","getConfig","SERVER_CONFIG","updatedConfig","getStatusIntervalId","setInterval","FETCH_INTERVAL","clearInterval","providerValue","isValidUrl","validProtocols","validationObject","URL","protocol","hostname","includes","isValidAccount","account","startsWith","components","service","user","host","isValidMatrixAccount"],"sourceRoot":""}