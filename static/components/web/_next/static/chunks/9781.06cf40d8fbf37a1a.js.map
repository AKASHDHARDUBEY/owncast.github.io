{"version":3,"file":"static/chunks/9781.06cf40d8fbf37a1a.js","mappings":"mGAAA,SAAAA,EAAAC,CAAA,EAIA,IAAAC,EAAA,GAMAC,EAAA,GAOAC,EAAA,CACA,mBACA,mBACA,sBACA,mBACA,mBACA,oBACA,qBACA,qBACA,+BACA,yBACA,2BACA,kBACA,2BACA,kBACA,kBACA,iBACA,kBACA,iBACA,oBACA,mBACA,kBACA,oBACA,iBACA,mBACA,qBACA,mBACA,iBACA,mBACA,iBACA,iBACA,mBACA,mBACA,oBACA,kBACA,kBACA,kBACA,mBACA,kBACA,oBACA,2BACA,oBACA,mBACA,mBACA,gBACA,oBACA,qBACA,iBACA,sBACA,iBACA,kBACA,mBACA,oBACA,kBACA,sBACA,kBACA,gBACA,iBACA,6BACA,mBACA,kBACA,mBACA,iBACA,wBACA,oBACA,kBACA,oBACA,iBACA,qBACA,wBACA,sBACA,mBACA,uBACA,mBACA,oBACA,yBACA,kBACA,mBACA,kBACA,mBACA,iBACA,qBACA,iBACA,mBACA,oBACA,kBACA,kBACA,qBACA,mBACA,kBACA,oBACA,oBACA,wBACA,oBACA,iBACA,kBACA,mBACA,kBACA,qBACA,iBACA,qBACA,0BACA,4BACA,qBACA,kBACA,qBACA,iBACA,EAEAC,EAAA,GA8GA,SAAAC,EAAAC,CAAA,CAAAC,CAAA,EAEA,IADA,IAAAC,EAAAC,EAAA,GACA,MAAAD,CAAAA,EAAAF,EAAAI,IAAA,MACA,GAAAF,MAAAA,GAAAC,EAAA,CACAF,EAAAI,QAAA,MACA,MACA,EACAH,MAAAA,CACA,CACA,eACA,CAEA,MA7BAR,QAAAA,GA1FAE,EAAA,IAEAE,EAAAQ,EAAA,YACAR,EAAAS,EAAA,YACAT,EAAAU,EAAA,YACAV,EAAAW,GAAA,wBACAX,EAAAY,GAAA,wBAEAZ,EAAAa,EAAA,YACAb,EAAAc,EAAA,YACAd,EAAAe,EAAA,YACAf,EAAAgB,GAAA,wBACAhB,EAAAiB,GAAA,wBAEAjB,EAAAkB,EAAA,YACAlB,EAAAI,EAAA,YACAJ,EAAAmB,EAAA,YACAnB,EAAAoB,GAAA,wBACApB,EAAAqB,GAAA,wBAEArB,E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","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/gas.js","webpack://_N_E/<anon>"],"sourcesContent":["function mkGas(arch) {\n  // If an architecture is specified, its initialization function may\n  // populate this array with custom parsing functions which will be\n  // tried in the event that the standard functions do not find a match.\n  var custom = [];\n\n  // The symbol used to start a line comment changes based on the target\n  // architecture.\n  // If no architecture is pased in \"parserConfig\" then only multiline\n  // comments will have syntax support.\n  var lineCommentStartSymbol = \"\";\n\n  // These directives are architecture independent.\n  // Machine specific directives should go in their respective\n  // architecture initialization function.\n  // Reference:\n  // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n  var directives = {\n    \".abort\" : \"builtin\",\n    \".align\" : \"builtin\",\n    \".altmacro\" : \"builtin\",\n    \".ascii\" : \"builtin\",\n    \".asciz\" : \"builtin\",\n    \".balign\" : \"builtin\",\n    \".balignw\" : \"builtin\",\n    \".balignl\" : \"builtin\",\n    \".bundle_align_mode\" : \"builtin\",\n    \".bundle_lock\" : \"builtin\",\n    \".bundle_unlock\" : \"builtin\",\n    \".byte\" : \"builtin\",\n    \".cfi_startproc\" : \"builtin\",\n    \".comm\" : \"builtin\",\n    \".data\" : \"builtin\",\n    \".def\" : \"builtin\",\n    \".desc\" : \"builtin\",\n    \".dim\" : \"builtin\",\n    \".double\" : \"builtin\",\n    \".eject\" : \"builtin\",\n    \".else\" : \"builtin\",\n    \".elseif\" : \"builtin\",\n    \".end\" : \"builtin\",\n    \".endef\" : \"builtin\",\n    \".endfunc\" : \"builtin\",\n    \".endif\" : \"builtin\",\n    \".equ\" : \"builtin\",\n    \".equiv\" : \"builtin\",\n    \".eqv\" : \"builtin\",\n    \".err\" : \"builtin\",\n    \".error\" : \"builtin\",\n    \".exitm\" : \"builtin\",\n    \".extern\" : \"builtin\",\n    \".fail\" : \"builtin\",\n    \".file\" : \"builtin\",\n    \".fill\" : \"builtin\",\n    \".float\" : \"builtin\",\n    \".func\" : \"builtin\",\n    \".global\" : \"builtin\",\n    \".gnu_attribute\" : \"builtin\",\n    \".hidden\" : \"builtin\",\n    \".hword\" : \"builtin\",\n    \".ident\" : \"builtin\",\n    \".if\" : \"builtin\",\n    \".incbin\" : \"builtin\",\n    \".include\" : \"builtin\",\n    \".int\" : \"builtin\",\n    \".internal\" : \"builtin\",\n    \".irp\" : \"builtin\",\n    \".irpc\" : \"builtin\",\n    \".lcomm\" : \"builtin\",\n    \".lflags\" : \"builtin\",\n    \".line\" : \"builtin\",\n    \".linkonce\" : \"builtin\",\n    \".list\" : \"builtin\",\n    \".ln\" : \"builtin\",\n    \".loc\" : \"builtin\",\n    \".loc_mark_labels\" : \"builtin\",\n    \".local\" : \"builtin\",\n    \".long\" : \"builtin\",\n    \".macro\" : \"builtin\",\n    \".mri\" : \"builtin\",\n    \".noaltmacro\" : \"builtin\",\n    \".nolist\" : \"builtin\",\n    \".octa\" : \"builtin\",\n    \".offset\" : \"builtin\",\n    \".org\" : \"builtin\",\n    \".p2align\" : \"builtin\",\n    \".popsection\" : \"builtin\",\n    \".previous\" : \"builtin\",\n    \".print\" : \"builtin\",\n    \".protected\" : \"builtin\",\n    \".psize\" : \"builtin\",\n    \".purgem\" : \"builtin\",\n    \".pushsection\" : \"builtin\",\n    \".quad\" : \"builtin\",\n    \".reloc\" : \"builtin\",\n    \".rept\" : \"builtin\",\n    \".sbttl\" : \"builtin\",\n    \".scl\" : \"builtin\",\n    \".section\" : \"builtin\",\n    \".set\" : \"builtin\",\n    \".short\" : \"builtin\",\n    \".single\" : \"builtin\",\n    \".size\" : \"builtin\",\n    \".skip\" : \"builtin\",\n    \".sleb128\" : \"builtin\",\n    \".space\" : \"builtin\",\n    \".stab\" : \"builtin\",\n    \".string\" : \"builtin\",\n    \".struct\" : \"builtin\",\n    \".subsection\" : \"builtin\",\n    \".symver\" : \"builtin\",\n    \".tag\" : \"builtin\",\n    \".text\" : \"builtin\",\n    \".title\" : \"builtin\",\n    \".type\" : \"builtin\",\n    \".uleb128\" : \"builtin\",\n    \".val\" : \"builtin\",\n    \".version\" : \"builtin\",\n    \".vtable_entry\" : \"builtin\",\n    \".vtable_inherit\" : \"builtin\",\n    \".warning\" : \"builtin\",\n    \".weak\" : \"builtin\",\n    \".weakref\" : \"builtin\",\n    \".word\" : \"builtin\"\n  };\n\n  var registers = {};\n\n  function x86() {\n    lineCommentStartSymbol = \"#\";\n\n    registers.al  = \"variable\";\n    registers.ah  = \"variable\";\n    registers.ax  = \"variable\";\n    registers.eax = \"variableName.special\";\n    registers.rax = \"variableName.special\";\n\n    registers.bl  = \"variable\";\n    registers.bh  = \"variable\";\n    registers.bx  = \"variable\";\n    registers.ebx = \"variableName.special\";\n    registers.rbx = \"variableName.special\";\n\n    registers.cl  = \"variable\";\n    registers.ch  = \"variable\";\n    registers.cx  = \"variable\";\n    registers.ecx = \"variableName.special\";\n    registers.rcx = \"variableName.special\";\n\n    registers.dl  = \"variable\";\n    registers.dh  = \"variable\";\n    registers.dx  = \"variable\";\n    registers.edx = \"variableName.special\";\n    registers.rdx = \"variableName.special\";\n\n    registers.si  = \"variable\";\n    registers.esi = \"variableName.special\";\n    registers.rsi = \"variableName.special\";\n\n    registers.di  = \"variable\";\n    registers.edi = \"variableName.special\";\n    registers.rdi = \"variableName.special\";\n\n    registers.sp  = \"variable\";\n    registers.esp = \"variableName.special\";\n    registers.rsp = \"variableName.special\";\n\n    registers.bp  = \"variable\";\n    registers.ebp = \"variableName.special\";\n    registers.rbp = \"variableName.special\";\n\n    registers.ip  = \"variable\";\n    registers.eip = \"variableName.special\";\n    registers.rip = \"variableName.special\";\n\n    registers.cs  = \"keyword\";\n    registers.ds  = \"keyword\";\n    registers.ss  = \"keyword\";\n    registers.es  = \"keyword\";\n    registers.fs  = \"keyword\";\n    registers.gs  = \"keyword\";\n  }\n\n  function armv6() {\n    // Reference:\n    // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n    // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n    lineCommentStartSymbol = \"@\";\n    directives.syntax = \"builtin\";\n\n    registers.r0  = \"variable\";\n    registers.r1  = \"variable\";\n    registers.r2  = \"variable\";\n    registers.r3  = \"variable\";\n    registers.r4  = \"variable\";\n    registers.r5  = \"variable\";\n    registers.r6  = \"variable\";\n    registers.r7  = \"variable\";\n    registers.r8  = \"variable\";\n    registers.r9  = \"variable\";\n    registers.r10 = \"variable\";\n    registers.r11 = \"variable\";\n    registers.r12 = \"variable\";\n\n    registers.sp  = \"variableName.special\";\n    registers.lr  = \"variableName.special\";\n    registers.pc  = \"variableName.special\";\n    registers.r13 = registers.sp;\n    registers.r14 = registers.lr;\n    registers.r15 = registers.pc;\n\n    custom.push(function(ch, stream) {\n      if (ch === '#') {\n        stream.eatWhile(/\\w/);\n        return \"number\";\n      }\n    });\n  }\n\n  if (arch === \"x86\") {\n    x86();\n  } else if (arch === \"arm\" || arch === \"armv6\") {\n    armv6();\n  }\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next === end && !escaped) {\n        return false;\n      }\n      escaped = !escaped && next === \"\\\\\";\n    }\n    return escaped;\n  }\n\n  function clikeComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch === \"*\");\n    }\n    return \"comment\";\n  }\n\n  return {\n    name: \"gas\",\n    startState: function() {\n      return {\n        tokenize: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (state.tokenize) {\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var style, cur, ch = stream.next();\n\n      if (ch === \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = clikeComment;\n          return clikeComment(stream, state);\n        }\n      }\n\n      if (ch === lineCommentStartSymbol) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '\"') {\n        nextUntilUnescaped(stream, '\"');\n        return \"string\";\n      }\n\n      if (ch === '.') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current().toLowerCase();\n        style = directives[cur];\n        return style || null;\n      }\n\n      if (ch === '=') {\n        stream.eatWhile(/\\w/);\n        return \"tag\";\n      }\n\n      if (ch === '{') {\n        return \"bracket\";\n      }\n\n      if (ch === '}') {\n        return \"bracket\";\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === \"0\" && stream.eat(\"x\")) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n          return \"number\";\n        }\n        stream.eatWhile(/\\d/);\n        return \"number\";\n      }\n\n      if (/\\w/.test(ch)) {\n        stream.eatWhile(/\\w/);\n        if (stream.eat(\":\")) {\n          return 'tag';\n        }\n        cur = stream.current().toLowerCase();\n        style = registers[cur];\n        return style || null;\n      }\n\n      for (var i = 0; i < custom.length; i++) {\n        style = custom[i](ch, stream, state);\n        if (style) {\n          return style;\n        }\n      }\n    },\n\n    languageData: {\n      commentTokens: {\n        line: lineCommentStartSymbol,\n        block: {open: \"/*\", close: \"*/\"}\n      }\n    }\n  };\n};\n\nexport const gas = mkGas(\"x86\")\nexport const gasArm = mkGas(\"arm\")\n"],"names":["mkGas","arch","custom","lineCommentStartSymbol","directives","registers","clikeComment","stream","state","ch","maybeEnd","next","tokenize","al","ah","ax","eax","rax","bl","bh","bx","ebx","rbx","cl","cx","ecx","rcx","dl","dh","dx","edx","rdx","si","esi","rsi","di","edi","rdi","sp","esp","rsp","bp","ebp","rbp","ip","eip","rip","cs","ds","ss","es","fs","gs","syntax","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","lr","pc","r13","r14","r15","push","eatWhile","name","startState","token","eatSpace","style","eat","skipToEnd","nextUntilUnescaped","end","escaped","current","toLowerCase","test","i","length","languageData","commentTokens","line","block","open","close","gas","gasArm"],"sourceRoot":""}