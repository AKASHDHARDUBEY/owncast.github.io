{"version":3,"file":"static/chunks/3519.638125adbf71fda7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@codemirror/legacy-modes/mode/lua.js","webpack://_N_E/<anon>"],"sourcesContent":["function prefixRE(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n}\nfunction wordRE(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n}\n\n// long list of standard functions from lua manual\nvar builtins = wordRE([\n  \"_G\",\"_VERSION\",\"assert\",\"collectgarbage\",\"dofile\",\"error\",\"getfenv\",\"getmetatable\",\"ipairs\",\"load\",\n  \"loadfile\",\"loadstring\",\"module\",\"next\",\"pairs\",\"pcall\",\"print\",\"rawequal\",\"rawget\",\"rawset\",\"require\",\n  \"select\",\"setfenv\",\"setmetatable\",\"tonumber\",\"tostring\",\"type\",\"unpack\",\"xpcall\",\n\n  \"coroutine.create\",\"coroutine.resume\",\"coroutine.running\",\"coroutine.status\",\"coroutine.wrap\",\"coroutine.yield\",\n\n  \"debug.debug\",\"debug.getfenv\",\"debug.gethook\",\"debug.getinfo\",\"debug.getlocal\",\"debug.getmetatable\",\n  \"debug.getregistry\",\"debug.getupvalue\",\"debug.setfenv\",\"debug.sethook\",\"debug.setlocal\",\"debug.setmetatable\",\n  \"debug.setupvalue\",\"debug.traceback\",\n\n  \"close\",\"flush\",\"lines\",\"read\",\"seek\",\"setvbuf\",\"write\",\n\n  \"io.close\",\"io.flush\",\"io.input\",\"io.lines\",\"io.open\",\"io.output\",\"io.popen\",\"io.read\",\"io.stderr\",\"io.stdin\",\n  \"io.stdout\",\"io.tmpfile\",\"io.type\",\"io.write\",\n\n  \"math.abs\",\"math.acos\",\"math.asin\",\"math.atan\",\"math.atan2\",\"math.ceil\",\"math.cos\",\"math.cosh\",\"math.deg\",\n  \"math.exp\",\"math.floor\",\"math.fmod\",\"math.frexp\",\"math.huge\",\"math.ldexp\",\"math.log\",\"math.log10\",\"math.max\",\n  \"math.min\",\"math.modf\",\"math.pi\",\"math.pow\",\"math.rad\",\"math.random\",\"math.randomseed\",\"math.sin\",\"math.sinh\",\n  \"math.sqrt\",\"math.tan\",\"math.tanh\",\n\n  \"os.clock\",\"os.date\",\"os.difftime\",\"os.execute\",\"os.exit\",\"os.getenv\",\"os.remove\",\"os.rename\",\"os.setlocale\",\n  \"os.time\",\"os.tmpname\",\n\n  \"package.cpath\",\"package.loaded\",\"package.loaders\",\"package.loadlib\",\"package.path\",\"package.preload\",\n  \"package.seeall\",\n\n  \"string.byte\",\"string.char\",\"string.dump\",\"string.find\",\"string.format\",\"string.gmatch\",\"string.gsub\",\n  \"string.len\",\"string.lower\",\"string.match\",\"string.rep\",\"string.reverse\",\"string.sub\",\"string.upper\",\n\n  \"table.concat\",\"table.insert\",\"table.maxn\",\"table.remove\",\"table.sort\"\n]);\nvar keywords = wordRE([\"and\",\"break\",\"elseif\",\"false\",\"nil\",\"not\",\"or\",\"return\",\n                       \"true\",\"function\", \"end\", \"if\", \"then\", \"else\", \"do\",\n                       \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\" ]);\n\nvar indentTokens = wordRE([\"function\", \"if\",\"repeat\",\"do\", \"\\\\(\", \"{\"]);\nvar dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\nvar dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n\nfunction readBracket(stream) {\n  var level = 0;\n  while (stream.eat(\"=\")) ++level;\n  stream.eat(\"[\");\n  return level;\n}\n\nfunction normal(stream, state) {\n  var ch = stream.next();\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    if (stream.eat(\"[\") && stream.eat(\"[\"))\n      return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (ch == \"\\\"\" || ch == \"'\")\n    return (state.cur = string(ch))(stream, state);\n  if (ch == \"[\" && /[\\[=]/.test(stream.peek()))\n    return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w.%]/);\n    return \"number\";\n  }\n  if (/[\\w_]/.test(ch)) {\n    stream.eatWhile(/[\\w\\\\\\-_.]/);\n    return \"variable\";\n  }\n  return null;\n}\n\nfunction bracketed(level, style) {\n  return function(stream, state) {\n    var curlev = null, ch;\n    while ((ch = stream.next()) != null) {\n      if (curlev == null) {if (ch == \"]\") curlev = 0;}\n      else if (ch == \"=\") ++curlev;\n      else if (ch == \"]\" && curlev == level) { state.cur = normal; break; }\n      else curlev = null;\n    }\n    return style;\n  };\n}\n\nfunction string(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) break;\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (!escaped) state.cur = normal;\n    return \"string\";\n  };\n}\n\nexport const lua = {\n  name: \"lua\",\n\n  startState: function() {\n    return {basecol: 0, indentDepth: 0, cur: normal};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.cur(stream, state);\n    var word = stream.current();\n    if (style == \"variable\") {\n      if (keywords.test(word)) style = \"keyword\";\n      else if (builtins.test(word)) style = \"builtin\";\n    }\n    if ((style != \"comment\") && (style != \"string\")){\n      if (indentTokens.test(word)) ++state.indentDepth;\n      else if (dedentTokens.test(word)) --state.indentDepth;\n    }\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var closing = dedentPartial.test(textAfter);\n    return state.basecol + cx.unit * (state.indentDepth - (closing ? 1 : 0));\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*(?:end|until|else|\\)|\\})$/,\n    commentTokens: {line: \"--\", block: {open: \"--[[\", close: \"]]--\"}}\n  }\n};\n"],"names":["wordRE","words","join","builtins","keywords","indentTokens","dedentTokens","dedentPartial","readBracket","stream","level","eat","normal","state","ch","next","cur","bracketed","skipToEnd","escaped","test","peek","eatWhile","style","curlev","lua","name","startState","basecol","indentDepth","token","eatSpace","word","current","indent","textAfter","cx","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close"],"sourceRoot":""}