"use strict";(self.webpackChunkowncast_web=self.webpackChunkowncast_web||[]).push([[7425],{"./.storybook/stories-category-doc-pages/examples/S3InfrastructureExamples.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var _tmp_tmp_IlYM31XlR2_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/mdx-mermaid/lib/Mermaid.mjs"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p"},(0,_tmp_tmp_IlYM31XlR2_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"owncast/Documentation/Infrastructure Examples/S3 Example",parameters:{previewTabs:{canvas:{hidden:!0}},chromatic:{disableSnapshot:!0}}}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.h2,{id:"s3-object-storage",children:"S3 Object Storage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components.p,{children:"If you would like no video traffic to take place from your Owncast server to your clients, you can use S3 Object Storage to be responsible for this instead.\nInstead of video players pulling the stream from your Owncast server it would instead make these requests to a S3 provider, and Owncast would upload video to this provider to make it available."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(mdx_mermaid_Mermaid__WEBPACK_IMPORTED_MODULE_1__.G,{chart:"graph TD\n\t  \tsubgraph Chat & Web Assets\n    Owncast{fa:fa-server Owncast}\n    end\n\t \t\n    Owncast--Upload\\nVideo--\x3eS3\n\n    subgraph Video Assets\n    S3[fa:fa-hard-drive S3 Object Storage]\n    end\n\n    subgraph Clients\n    WebPlayer[fa:fa-window-maximize Web App]\n    Embeds[fa:fa-window-restore Embeds]\n    MobileApps[fa:fa-mobile-screen Mobile Apps]\n    SmartTV[fa:fa-tv Smart TV]\n    VLC[fa:fa-shapes VLC]\n    end\n\n    Owncast--Web--\x3eWebPlayer\n    Owncast--Web--\x3eEmbeds\n    Owncast<--Chat--\x3eWebPlayer\n    S3--Download\\nVideo--\x3eWebPlayer\n    S3--Download\\nVideo--\x3eEmbeds\n    S3--Download\\nVideo--\x3eMobileApps\n    S3--Download\\nVideo--\x3eSmartTV\n    S3--Download\\nVideo--\x3eVLC\n\n"})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"owncast/Documentation/Infrastructure Examples/S3 Example",parameters:{previewTabs:{canvas:{hidden:!0}},chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_tmp_tmp_IlYM31XlR2_owncast_web_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const __WEBPACK_DEFAULT_EXPORT__=componentMeta,__namedExportsOrder=["__page"]}}]);