<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Owncast</title><link>http://owncast.online/</link><description>Recent content in Home on Owncast</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://owncast.online/index.xml" rel="self" type="application/rss+xml"/><item><title>Zoom Integration</title><link>http://owncast.online/docs/zoom-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/zoom-integration/</guid><description/></item><item><title>Owncast v0.0.2</title><link>http://owncast.online/posts/owncast-0.0.2/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><guid>http://owncast.online/posts/owncast-0.0.2/</guid><description>0.0.2 has a major focus on frontend web updates, with some nice new features including the ability to embed in your own site easier, custom emoji and more.</description></item><item><title>Owncast v0.0.1</title><link>http://owncast.online/posts/owncast-0.1/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><guid>http://owncast.online/posts/owncast-0.1/</guid><description>In honor of &lt;a href="https://github.com/mattdsteele">@mattdsteele&lt;/a> and &lt;a href="https://github.com/mattdsteele">@JCake&lt;/a> live streaming their wedding using Owncast tomorrow, here&amp;rsquo;s the first release version.</description></item><item><title/><link>http://owncast.online/docs/api/development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/api/development/</guid><description>Owncast body { padding: 0; margin: 0; } /*! * ReDoc - OpenAPI/Swagger-generated API Reference Documentation * ------------------------------------------------------------- * Version: "2.0.0-rc.40" * Repo: https://github.com/Redocly/redoc */ !function(e,t){"object"==typeof exports&amp;&amp;"object"==typeof module?module.exports=t(require("null"),function(){try{return require("esprima")}catch(e){}}()):"function"==typeof define&amp;&amp;define.amd?define(["null","esprima"],t):"object"==typeof exports?exports.Redoc=t(require("null"),function(){try{return require("esprima")}catch(e){}}()):e.Redoc=t(e.null,e.esprima)}(this,(function(e,t){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&amp;t&amp;&amp;(e=n(e)),8&amp;t)return e;if(4&amp;t&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&amp;t&amp;&amp;"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=159)}([function(e,t,n){"use strict";e.exports=n(223)},function(e,t,n){"use strict";n.r(t),n.d(t,"__extends",(function(){return o})),n.d(t,"__assign",(function(){return i})),n.d(t,"__rest",(function(){return a})),n.d(t,"__decorate",(function(){return s})),n.d(t,"__param",(function(){return l})),n.d(t,"__metadata",(function(){return c})),n.d(t,"__awaiter",(function(){return u})),n.d(t,"__generator",(function(){return p})),n.d(t,"__createBinding",(function(){return f})),n.d(t,"__exportStar",(function(){return d})),n.</description></item><item><title/><link>http://owncast.online/docs/broadcasting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/broadcasting/</guid><description>Setting up your Broadcasting software # Compatibility # In general Owncast is compatible with any software that uses RTMP to broadcast to a remote server. RTMP is what all the major live streaming services use, so if you&amp;rsquo;re currently using one of those it&amp;rsquo;s likely that you can point your existing software at your Owncast instance instead.
However, we haven&amp;rsquo;t tested with everything. So if you&amp;rsquo;re using something specific we&amp;rsquo;d love to hear what software you&amp;rsquo;re using and the results.</description></item><item><title/><link>http://owncast.online/docs/building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/building/</guid><description>Building from Source # Ensure you have the gcc compiler configured. Install the Go toolchain. Clone the repo. git clone https://github.com/owncast/owncast Follow the above Getting Started instructions, making sure ffmpeg exists and your config file is set. Make any configuration changes. go run main.go on the first run will download the required packages needed for the application to build. It will start running the same as in the above Usage instructions and you can point OBS to your localhost instance of it.</description></item><item><title/><link>http://owncast.online/docs/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/configuration/</guid><description>Configuration # The default config.yaml has a handful of values you can change. However, more can be customized if you need them to be. Some common changes to the config are:
Your site name, logo, description and external links. The stream key to gain access to broadcasting to your stream. The path to your specific ffmpeg executable. Video quality settings. S3 file storage. An example config file with additional features can be viewed below.</description></item><item><title/><link>http://owncast.online/docs/embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/embed/</guid><description>Embedding video # Owncast supports embedding your video stream directly into any other web site or source without having to setup a player.
The video-only URL to your stream content lives at: http://your.host/embed/video.
Here&amp;rsquo;s some example HTML you can use.
&amp;lt;iframe src=&amp;#34;http://your.host/embed/video&amp;#34; title=&amp;#34;Owncast&amp;#34; height=&amp;#34;350px&amp;#34; width=&amp;#34;550px&amp;#34; referrerpolicy=&amp;#34;origin&amp;#34; scrolling=&amp;#34;no&amp;#34; allowfullscreen&amp;gt; &amp;lt;/iframe&amp;gt; Embedding video was first supported in Owncast 0.0.2. It will look something like:
Embedding chat # Owncast supports embedding your chat directly into any other web site or source.</description></item><item><title/><link>http://owncast.online/docs/encoding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/encoding/</guid><description>Tuning the video encoding # It&amp;rsquo;s hard to give specific settings that will give you the best quality and performance with Owncast because people have different servers and requirements. However, this document aims to outline what is being done to your content and the different knobs you can tweak to get the best output for your instance..
But first the basics.
How does an Owncast video stream work? # Owncast takes your source stream and converts it to short, individual video segments.</description></item><item><title/><link>http://owncast.online/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/faq/</guid><description>Frequently Asked Questions # 1. Who is this for? # Owncast is for people who are live streamers, or who wants to host live streams for others. It&amp;rsquo;s a &amp;ldquo;one to many&amp;rdquo; broadcast much like Twitch, Facebook Live, YouTube Live, etc.
2. Who or what is this not for? # Owncast is not for video conferencing or any use case where multiple people are wanting to see video of each other.</description></item><item><title/><link>http://owncast.online/docs/geoip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/geoip/</guid><description>GeoIP Lookups # Owncast can display high-level geographic information about your current viewers if you enable GeoIP support in your instance.
We support the MaxMind GeoLite2 Database, and as long as you provide a free copy of the database it will be used. Perform the following in order to add this feature.
Create a free account with MaxMind. Wait for an email and follow the link to your account.</description></item><item><title/><link>http://owncast.online/docs/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/quickstart/</guid><description>Quickstart # Prerequisites # A computer that&amp;rsquo;s on the public internet to run it on. While crunching through video and serving it to viewers can be intensive from the computing side, you can get away with pretty meager resources on a simple setup. If you don&amp;rsquo;t already have a server to run it on you can get a Linode instance for $5/mo that runs it fine. If you worry that you&amp;rsquo;ll be maxing out the bandwidth or transfer limits allotted to you, then utilize S3 Storage very cheaply (or even free for a certain amount) to serve the files instead.</description></item><item><title/><link>http://owncast.online/docs/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/s3/</guid><description>Owncast with S3 Providers # Instead of serving video directly from your personal server you can use a S3 compatible storage provider to offload the bandwidth and storage requirements elsewhere.
Choose your storage provider of choice. If your provider is not listed, you can file an issue and we&amp;rsquo;ll test and write up some documentation for it.
Linode Object Storage AWS S3 Wasabi Backblaze B2 Linode Object Storage # 250 GB storage + 1 TB Outbound Transfer for $5/mo.</description></item><item><title/><link>http://owncast.online/docs/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/troubleshooting/</guid><description>CPU and RAM usage alerts # If your hardware is being maxed out then your video may not be processed and delivered fast enough to keep up with the real-time requirements of live video.
Here are some steps you can try taking to resolve this.
You may have too many quality variants defined in your configuration. Try limiting yourself to a single option, and go from there. Change to a faster encoder preset in your configuration.</description></item><item><title/><link>http://owncast.online/docs/website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/docs/website/</guid><description>Web site with video player and chat # Overview # Owncast includes a web interface for your video with built-in chat that is available once you start the server. It shows online/offline states, viewer counts, stream duration, your instance&amp;rsquo;s description, images, links and more. You can just start using it without making any changes and it&amp;rsquo;ll reflect whatever you put in the config file.
However, the web interface was specifically built to be editable by anybody comfortable tweaking a web page.</description></item><item><title>Contact</title><link>http://owncast.online/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/contact/</guid><description>Contact # Gabe Kangas
Mastodon: @gabek@mastodon.socialEmail: gabek@real-ity.com
Questions or bug reports # We have a open discussion board for questions, bugs and feature requests. Just open an issue :)
Issues on GitHub For security incidents, please send an email to Gabe (see above).</description></item><item><title>Contribute</title><link>http://owncast.online/contribute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/contribute/</guid><description>Contribute to Owncast # We are open for new contributors to this project. If you have found issues or bugs, or would like to improve Owncast by sending your code, please visit our GitHub page:
GitHub Repository The team also gets on Jitsi regularily, so if you want to attend of those meetings, check out issue #167 where we coordinate meeting times.
Contributor Covenant Code of Conduct # Our Pledge # In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</description></item><item><title>Owncast Demo Servers</title><link>http://owncast.online/demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/demo/</guid><description>We provide two public Owncast servers for you to see how it works. One for streaming to and one for just watching.
Stream your content to broadcast.owncast.online # You can point your own software and content at broadcast.owncast.online to test live streaming with Owncast. Go there and find the current key in the description and chat messages.
Read more about how to configure your software by reading the broadcasting software documentation.</description></item><item><title>Use Cases</title><link>http://owncast.online/usecases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://owncast.online/usecases/</guid><description>Use cases # One time events # In the era of COVID-19 everything has to go online, so live stream your conference, meeting, concert, wedding, birthday, etc.
Read about how Matt Steele streamed his wedding and why.
If you have a conference or event with multiple people talking via Zoom, you can even stream that so not everyone has to be logged into a conferencing platform, they can just visit the web site.</description></item></channel></rss>